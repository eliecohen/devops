{"config":{"indexing":"full","lang":["en"],"min_search_length":3,"prebuild_index":"python","separator":"[\\s\\-]+"},"docs":[{"location":"","text":"Lessons Learned as a DevOps Engineer \u00b6 Elie Cohen software engineer @Salesforce.com Einstein Production Engineering The views expressed in this article are mine and not those of Salesforce credits Pavel Neznanov DevOps is not about the cloud, not about a set of practices or culture patterns, not about Docker or Kubernetes, nor CI or CD. It\u2019s only about business processes improvement and optimization applied to software development. Yes, it\u2019s all about money. It\u2019s all about simplicity (chapter 1), processes (chapter 2), operations (chapter 3), agility (chapter 4), visibility (chapter 5), coding (chapter 5), architecture (chapter 5), data (chapter 6), security (chapter 7), naming (chapter 8), and continuous learning (chapter 9).","title":"home"},{"location":"#lessons-learned-as-a-devops-engineer","text":"Elie Cohen software engineer @Salesforce.com Einstein Production Engineering The views expressed in this article are mine and not those of Salesforce credits Pavel Neznanov DevOps is not about the cloud, not about a set of practices or culture patterns, not about Docker or Kubernetes, nor CI or CD. It\u2019s only about business processes improvement and optimization applied to software development. Yes, it\u2019s all about money. It\u2019s all about simplicity (chapter 1), processes (chapter 2), operations (chapter 3), agility (chapter 4), visibility (chapter 5), coding (chapter 5), architecture (chapter 5), data (chapter 6), security (chapter 7), naming (chapter 8), and continuous learning (chapter 9).","title":"Lessons Learned as a DevOps Engineer"},{"location":"operations/","text":"in preparation","title":"It\u2019s all about Operations"},{"location":"processes/","text":"It\u2019s all about Processes Software development is controlled and governed by a vast number of processes. These processes focus on one question: \"How things should work\" . Processes can be diverse, from simple to complex, done continuously or occasionally, manually or fully automatic. 90% of all tasks DevOps engineers will deal with, such as operation, security, monitoring, will not have a real impact on the software development business. They are needed because reality changes and processes are imperfect. DevOps engineers can make a real impact on the software development business by designing and optimizing processes. Processes are the way to reconcile all parts of software development into a well-orchestrated piece. In a word where everything is code, application is code, infrastructure is code, and processes are code too. Make your Processes As First Citizen \u00b6 Modern software development has made microservice the king of the ring. What people know less is that the processes are the queen. The queen has the power; she is the most powerful piece on the board. The non-recognition of processes as first citizens and belittling them to simple automation leads to poor, ineffective software development business. RCA & Processes Relationship \u00b6 Root Cause Analyses (RCA), the post-mortem examination done after any production incidence, focuses on two questions 1) Why has it happened and 2) What should we do to prevent it from happening again. A quick analysis of RCAs (about 40) my group was involved in during the past three years has shown that 45% were caused by missing or not well-defined processes. DevOps as a business analyst with many technical skills \u00b6 There is a misleading perception about the essential aptitude and expertise expected from DevOps engineers, and this is reflected in the job descriptions of new positions, being very often a long list of technical skills and missing the point that a DevOps engineer is essentially a business analyst, who guides businesses in improving processes, products, and software through data analysis. His role is to serve as a bridge between business problems and technology solutions. Bridging the gap between mentalities \u00b6 DevOps is all about process fluidity, and fluidity is not only about code, machine, or automation but is also a human challenge. Most processes are cross-teams, cross-mentality, and cross-ego. DevOps\u2019s role is to bridge the gap between people from development, infrastructure, security, and product. DevOps\u2019s role is to break down artificial barriers, the \u201csilo mentality\u201d, the resistance to change, and to convince people to lose their control, redistribute responsibilities in a scalable way, and work together as a virtual team towards a common goal. credits Tools are not the way to talk about processes \u00b6 Don\u2019t be trapped or distracted by tools. They are part of the solution, but they should not shadow the process itself and, in particular, its requirements. Requirements represent an ideal and the design a compromise. Many tools make assumptions and are opinionated, which could be fine, but make it clear why you make these compromises. credits Understand requirements \u00b6 Developers tend to write code without design and write design documents without complete requirements. Processes make no exception. You cannot start modeling processes without a full understanding of their requirements. What are the objectives of the process? For whom is it created? What are the input and the output? Who is responsible for the process? Who are the actors? What are the constraints and dependencies? And last but not least is what its performance indicators are? Performance indicators \u00b6 Are measures that evaluate the success of a given process. Performance indicators try to answer \u201cIs the process objective achieved?\u201d. Having processes without a well-defined performance indicator is like having an electric plate with a broken tag. Is it on or off? Is it low or high? Its definition is purely a business matter. For example, if we talk about the CI process, its indicator could be based on the average CI cycle time with the average time for jobs in the queue. credits Wrong mindset \u00b6 Two years ago, I redesigned and improved our CI process. I was pretty proud to have reduced the time of the CI cycle to less than 5 minutes. A few months later, developers were complaining (in general in the kitchen, but also in the #devops-help slack channel) that the CI was stuck again. The average time was then 50 minutes. What happened? The number of applications was quadrupled, and many slow integration tests were added. If you don\u2019t have real-time performance indicators part of your dashboard, you cannot be responsive to change. The last thing you want is that your \u201ccustomers'' become your performance indicator. The root cause of this story was not the missing performance indicator but a wrong mindset on what I was working on. Process #1 \"From Code to Development Environments\" \u00b6 It could be very challenging for developers to test their code in a real environment. This challenge can be explained by the fact that modern applications generally deploy a large number of services, and these services are tightly integrated into the cloud provider ecosystem, making it practically difficult to run on a local computer. The \u201cfrom code to development environment\u201d process is dedicated entirely to developers. The objective of this process is to make the developers productive by getting on-demand a fully dedicated functional development environment. By neglecting this process, developers will push their code to master either without caring if their code works or in the intention to test it in the staging environment. The hidden objective of this process is to protect the master branch. \"Merge to Master\" point of no (difficult) return \u00b6 The merge to production branch represents a key event in the release pipeline. At this particular time, the new code incorporates the mainstream pipeline. It will go through some experiments to validate and eventually continue to production. If, for any reason, this mainstream is compromised by a bug or an undesired side effect, the entire production line is blocked. Fixing it will be difficult, take time, and cost you a lot. Process #1 is the most effective way to prevent your master branch from being dirty. credits Process #1 Feature branch as the source of truth \u00b6 To be practical, the \"from code to development environment\" should be transparent, easy to set up, and as fast as possible. Any process should aim to be transparent, meaning that the actors don't need to learn new methods or commands and don't have to feel they are part of a more significant thing. Process #1 should use the natural way developers work with code, \u201cGit\u201d. The concept of managing application deployment with Git is not new; it was introduced by Heroku a decade ago. Making the feature branch the source of truth is the key of process #1. Let's describe how it works. The developer starts by creating a new environment associated with his branch. Each time a new commit is pushed, a new docker image is built and saved to a docker repo. The CD component of the new environment will discover it and deploy it. We should give special attention to making this process as fast as possible, for instance, by optimizing the build cache strategy and postponing any tests after the deployment occurs. Dynamic Environment as a new paradigm \u00b6 The necessity to create and destroy environments dynamically on the fly is of paramount importance in a modern DevOps-changing world. Having some static development environments shared between developers should not be an option anymore. Here are some reasons why: these environments are generally in catatonic states, they have ownership issues, are under-utilized, cost-ineffective, with old infrastructure, they do not promote immutable infrastructure, and most importantly, connecting them to a feature branch will not be easy (we will see later why). Creating new environments on the fly implies three requirements: 1) the adoption of \u201cinfrastructure as code\u201d, 2) a way to quickly instantiate and delete new environments, including all the necessary states and other dependencies to be fully functional, and 3) a way to modify the continuous deployment mechanism to deploy from a private branch. Process #1: Environment creation easy setup \u00b6 To be practical, creating a new environment should be as easy as possible. It could be initiated using a GitHub label or a Slack bot. For example, a developer just types in a Slack channel \u201ccreate environment us-56782-support-google-login\u201d, a Slack bot will trigger the creation of a new complete environment connected to the branch \u201cus-56782-support-google-login\u201d. Each time a developer \u201cpush\u201d a change to this feature branch (across all existing services!), process #1 will make sure his change is deployed to his dedicated environment. For cost-effectiveness, these environments should have a short lifetime. For example, destruction can be triggered by inactivity in git. (e.g., no push during 6 hours). Model Extension to include all Kinds of Code: \u00b6 Given developers, the ability to modify their service and deploy it automatically to an ephemeral environment based on a feature branch is an excellent start. But what about the infrastructure code or the CD pipeline code? The following picture tries to extend our previous model. Let\u2019s describe how it works: a developer just types in the slack channel \u201ccreate us-567850-spike-mongodb 1) if this branch exists in the \u201cinfrastructure as code\u201d repo, it is used to create the new ephemeral environment; otherwise, the master branch is used, 2) a pipeline CD component is then injected in the new environment using the same branch if exist or the master if not and 3) all microservices are deployed to the new environment using the pipeline from 2. If a microservice has the same feature branch, it will be used; otherwise, the master will be used. Make your codes equal \u00b6 In the previous section, we dealt with an important concept, \u201call codes are equal''. There is no fundamental difference between service code, infrastructure as code, or pipeline as code. Like a service that depends on another service, services depend on infrastructure. Having a coherent development model across your entire code, regardless of its nature, helps you rationalize and simplify things. Simplification in the way we develop, test, and deploy. If, on the one hand, you develop and deploy your service through a feature branch strategy, and on the other hand, you have one folder per environment for your terraform code, you increase the complexity of your stack. Design your architecture up to your ambition \u00b6 How difficult is it to implement a feature branch as a source of truth? How difficult is it to make your deployment from a branch? It depends on the architecture. Having a centralized (non-scalable) architecture with a single Jenkins/spinnaker instance for all your environments will make it very difficult. On the other hand, adopting a decentralized approach, where each environment is self-organized and contains its CD components based on any branches you want, will make it easy to implement. Process #2 The release management process: \u00b6 Let\u2019s introduce our second process. The \u201crelease management process\u201d is considered the primary DevOps process by excellence. Its objective is to create a continuous flow from the master branch to the production environment while minimizing the risk of surprise. This process will keep us busy for some pages. \"Houston, we have a problem\": Monday morning, a new version has just been deployed, everything seems to work fine. Suddenly you get a call from the professional service; customers start reporting that the application store is not working anymore. credits The log doesn\u2019t contain any error; The Grafana dashboard indicates very high traffic. Is it related to the issue? Mike, your colleague, tries to understand the differences between the last deployment, where everything was fine. The new deployment includes 80 new pull requests, only a portion of them are related to the store application, but since they use a mono-repo, it will take time to filter them. Forty-five minutes have passed, and the boss is pressing to revert to the previous deployment. Bob is not sure it is a good idea since the new deployment includes a schema change in the database, and the DBA guy is unavailable. Max from the platform team just informed you that the new deployment is also using a new version of Ubuntu and that they also upgraded the docker engine. Working \u00b6 There is only one definition for working: the software is doing what it is expected to do from an end user\u2019s perspective. DevOps is an empirical science based mainly on experimentation and observation. The way to assess the \u201cworking\u201d property is to create an experimental environment identical to the one used by the real users and deploy on it the unknown version. E2E tests can then simulate user scenarios and check that everything works as expected. By writing E2E tests, we ensure that the product contract between the service provider and the customer is respected. E2E tests don\u2019t care about the system\u2019s internal implementation, making, in theory, a good candidate for outsourcing (we will see later why this is not true). E2E tests are the sole measure of working. Healthy \u00b6 Healthy is a subjective and relative concept and means \u201cnot displaying clinical signs of disease or infection\u201d. When I was an EMT-driver, I was sent to a non-emergency call. When we arrived on the scene, we found an older person breathing heavily, making pressure cooker noise. I immediately asked the dispatcher to send us another ambulance with a medic. I remembered my embarrassment when the doctor arrived and asked him, \u201csince when did you breathe like that?\u201d and his response was \u201c5 years\u201d. The concept of a baseline is essential in DevOps; data are relative and not absolute. The second point is, invest time to find the right key metrics for your services. The third point is also taken from my EMT course, \u201ctreat the patient, not the monitor\u201d. Suppose your PostgreSQL instance has a CPU utilization of 90% check the request duration. If it is okay, your patient is fine (for now), then check your baseline. Stable \u00b6 Stable means the application is subject to little influence over time and under (extreme) external conditions. If \u201cworking\u201d is proved in a few minutes, \u201cstability\u201d is more subjective and needs more time to be verified. Influence over time is evaluated by creating a new experimental environment and leaving the unknown version for some time while running in loop E2E tests. In addition to the boolean results of E2E tests, it could be valuable to choose relevant indicators and monitor them for degradation. These measures are repeated using distinct external conditions (load test). The results are then compared and correlated to give an indication of stability. Practically when we introduce a change in the code base, we are looking for a simple answer to \u201cdoes this change have a negative impact on the performance and the stability of the product?\u201d. Working with small chunks of code makes it easy to identify the responsible. \u201cResilience\u201d \u00b6 Resilience is the process of adapting in the face of adversity, threats, or significant sources of stress. Practically this means that the application continues to work despite failures or can recover quickly from unexpected events. Resiliency is the elasticity property of your system: nothing is rigid, every component can be stretched, disappear, and return to its normal size. Chaotic engineering is the discipline and practice of causing random failures in a system to assess its resiliency. Chaotic engineering tries to answer \u201cCan we predict the unpredictable?\u201d using simulation. In 2011, Netflix introduced \"Chaos Monkey\" a tool to randomly terminate instances in production. Beyond the idea of Chaotic engineering, two important DevOps principles are hidden: 1) there is no place for the \u201cunknown\u201d in modern software engineering. Maybe your system is not resilient or has some security issues, but you cannot just ignore them; you must understand their scope and limitations, and 2) don\u2019t be afraid to use your production environment for testing scenarios. Don\u2019t miss the opportunity to do experiments to answer questions like \u201cis it working, is it stable, is it resilient\u201d on the real things: real data, real user, real traffic. This is your last line of defense; use it. Why companies fail in their E2E strategy \u00b6 Designing and implementing E2E tests can be very challenging. They are expensive to write, run, and maintain, and when failing, they don\u2019t give any indication of why. They generally are spanned by multiple teams, with no motivation to write them, and backup by their management with the fear to \u201cdecrease the velocity of the development\u201d thus, their development falls through the cracks and ends up in the best case scenario with a new team dedicated to this job (we will see in a few paragraphs why it cannot be effective). On the other hand, integration tests are developed by service owners. They represent the contract between a given service and the architect and provide an exact answer to \u201cIs this service working?\u201d. They are easier to implement, and in addition, they can be tested (in isolation or not) very early in the continuous release pipeline, making them a key component to the detection of issues as early as possible. Integration tests are essential but have distracted attention from the E2E tests, and many companies have failed to develop a systematic approach to the E2E tests and to answer the question \u201cIs it working?\u201d rely mainly on the additivity property of integration tests. There is no replacement for the E2E test \u00b6 Let\u2019s make an allegory to understand why integration tests cannot replace E2E tests. Suppose a Swiss watch company is building a new watch model. The spare parts are manufactured in their factory in China, and the assembly is carried out in Switzerland (to get the \u201cMade in Switzerland\u201d designation). The watch contains 30 moving parts; most of them are wheels. To minimize the risk of incompatibility, the Swiss headquarter has provided to the factory nine simple compatibility tests to make sure some parts fit well together (see picture below). The tests have been successful; the pieces are then sent to Zurich, where highly specialized workers perform the assembly. Once this assembly is completed, the watch is immediately sold on the internet. Do they check if the watch is working? No! Do they check if the watch doesn't go wrong after a day, a week? No! Do they check if the watch is waterproof? No!. Can integration tests replace E2E tests? Getting to the root of the problem \u00b6 Why do E2E tests go wrong in practice? Most modern codes are not E2E testable. They are often highly-coupled with some external services (for example, an e-commerce application being coupled with an external payment method that doesn\u2019t let you test it without doing real transactions), or may contain slow processes (for example, some slow queues, offline jobs, or even manual intervention) or they are missing some API essential for the test. For a code to be E2E testable, it should have been designed with E2E testability in mind. It is the same for making secure code. You cannot make secure code if you don\u2019t have security in mind. Designing E2E tests after code has been written is the root cause of E2E test strategy failure. Making testable code \u00b6 The approach for creating testable code is to move the responsibility of the E2E tests to the SCRUM team developing the feature. The team will take care of the design and the implementation of these E2E tests, and if needed, will adapt the design of their feature to make their test feasible and fast. The key to success is to realize that application and test design should start together and are tight together. A slight alternative to this method is to have an E2E tests champion in every team. The champion\u2019s responsibility is to ensure that part of the DOD (definition of done) developers have designed an E2E tests plan (without implementing them) and make sure their codes are compatible with the test plan. The test plan could then be outsourced to another team for implementing it. It may seem weird or even an anti-pattern that tests influence the codes it is testing, but success is the ability to rise above principle. Making E2E tests affordable: Removing the UI Layer \u00b6 Another reason why E2E tests are expensive is that they generally rely on UI. UI tests are unstable, fragile, and break easily. E2E tests are not UI tests; the focus is the flow and not the UI itself. We use the UI because we simulate real users, and users are using the UI, but if there is another simplest way to test the flow without the UI, we are fine. The concept of \u201cAPI first\u201d, making API a \u201cfirst-class citizen\u201d, and the UI, a simple consumer, can help us to bypass the UI layer and create a complete E2E flow based on the API layer. Removing the UI from the equation is not ideal by itself; it is a compromise to make E2E tests more affordable and more maintainable. Code Review as the last bastion of defense \u00b6 We talked earlier about the \u201cmerge to master\u201d as the point of no return and the importance for developers to test their feature branch in an on-demand environment. These environments can be very effective in checking that new functionalities are working as expected and verifying that the changes made in the codebase don\u2019t affect the overall working functionality (through regression tests). On the other hand, they are very limited in identifying bugs. Code review is the only way to significantly reduce the number of bugs before entering the production branch. In addition to being the most effective way to identify logical defects, it is also a valuable tool for maintaining code quality standards, education, and sharing knowledge in the team. Code review starts with yourself \u00b6 My father, Claude Cohen z\u201dl (Cairo 1941- J\u00e9rusalem 2011), was a medicinal chemist and a pioneer in the \u201crational drug design\u201d field. In the late 1970s, he wrote many Fortran programs to model the geometry and properties of small molecules. The way to load software into computers was through a \u201cpunched card\u201d (see picture below), a piece of paper that holds digital data represented by the presence or absence of holes in predefined positions. My father regularly sent his code as \u201ccoding sheets\u201d to the IBM center in Paris by taxi. It was a 50-minute trip, where an IBM operator punched the actual deck using a keypunch machine, and the cards were returned to my father. When I asked him about bugs and typo errors, he told me it was infrequent since he carefully reviewed them. Improving The Code Review Process \u00b6 Code reviews are suboptimal. Everyone recognizes their importance, but everyone will add it in their new Year\u2019s resolution self-improvement. What\u2019s wrong with it? Like any other self-improvement, if you want to get better at something, you need to know where you stand and a way to quantify your progress, which is missing in today's code review process. We need metrics that will help us to self-improve. Such metrics can be based on the number of reviews done, the time spent on code review (time from the first comment and last comment), etc. The team retrospective meeting is an excellent framework to review the team scores. This meeting is precisely for that: it is an opportunity for a team to assess its performance and improve itself. Managers should not participate in these retrospective sessions; it will destroy them. Why Staging and Production should be and can\u2019t be identical? \u00b6 Why staging and production should be and can\u2019t be identical? They should be identical because experimentations done in staging are based on the extrapolation concept. If it is green in staging, it should be green also in production. This extrapolation is correct as the two environments are 100% identical, but this is not the case for two fundamental reasons: data and traffic. Data in production contains real customer data. These data could not generally be cloned in staging for compliance reasons. Data anonymization is often not doable due to the complex nature of the data, so the staging environment typically ends with synthetic data making the extrapolation less reliable. The second dissimilarity is on traffic, as the production environment is the only one receiving real traffic from customers. The problem of environment names \u00b6 The fact that each environment has a unique name is a source of trouble. If your staging DNS is working, does it imply that your production DNS is OK? Does the code below seem familiar to you? At first glance, the developer could have a good reason to write it; maybe he tries to minimize the risk in production by gradually rolling out some new process code. But make it clear that this code is an anti-pattern; It is the symptom of an underline DevOps issue. Gradual rolling out should be done only using a \u201cpropagation process strategy\u201d (will be presented in a few paragraphs), and if you need to test something in development, do it with a private branch. Conceptually, giving a name to an environment is in itself an issue. How many times did you recreate your production environment? Probably never, and when it happens, you end up with production2. Giving a name to something makes it permanent, unreplaceable. There is nothing special in the production environment; it should start from scratch regularly. We will discuss in the architecture chapter the concept of keeping the state apart, making the environment completely stateless, and the idea of an ephemeral environment doable. To promote the notion of an ephemeral and idempotent stack, we need to switch from environment name to environment ID and tag. A tag is not permanent and can point to something else. Process Modelisation and Implementation \u00b6 New DevOps engineers start their journey with EKS, terraform, Argo CD and barely understand the chance they have. I have made every single possible errors I can imagine. My first CI/CD process (JenkinsFile) was modeled very similarly to the one shown in the picture below. This image was part of the official Jenkins document (and was recently removed). What's wrong with it? It creates unnecessary coupling between components that are not dependent. Is CD dependent on CI? Is Production dependent on Staging? You cannot easily know what the desired state of the system is. Meaning you can check which version has been deployed in staging or production, but it is generally difficult to know which version will be deployed in the middle of the process. Let's make a comparison. Let's say there is a company that sells a product. In this company, there are two departments, the manufacturing department (CI) and the sales department (CD). Each department has its own internal processes. Does it make sense to couple the manufacturing and the sales processes together as we did in the previous Jenkins pipeline?. Does the sales department care about the internal manufacturing processes? If something goes wrong in the manufacturing process, it will block the whole process. The second problem with this coupling is the state. Can you quickly tell what the salesman should sell (the desired state)? It is not an easy task since it is not explicitly defined. Let's revisit our example, but now we have two distinct pipelines: the manufacturing department and the second for the sales department (yes, exactly decoupling). Since the sales department only cares about these two facts 1) what is the model they need to sell (the version to install), and 2) the availability of the model in the stock (is the new version already in the docker repo?). The last step of the manufacturing process will be to write on a shared google spreadsheet these two pieces of information. The new sales pipeline will now use this information in its own process. The processes are now decoupled, and you know exactly what version you need to sell (the desired state). From the salesman\u2019s perspective, this google spreadsheet represents its source of truth. GitOps \u00b6 if you understand the previous example, you understand GitOps. GitOps is only about decoupling and defining explicit states. The only difference with our last model is instead of using a google spreadsheet as the sole truth, it uses a cloud-based git repository. Using git as a source of truth is very judicious and smart but is only a detail. It is judicious since it makes things pretty simple: change your code and push it; the developer doesn\u2019t need to learn a new tool. From Git, you get traceability. Using a cloud-based git provider such as GitHub.com is smart since you get access control, ownership management, discussion, approval mechanism, and high availability. A more practical Gitops model \u00b6 The GitOps model based on version only is too simplistic to be helpful. If we examine all the services deployed in a single environment, many of them work together as an independent unit to form a feature or a functionality. Such units are often called functional domains. Functional domains have no direct or little dependency on each other. Consider each \u201cfunctional domain\u201d being developed by another sub-unit or even company. If you need to talk to another functional domain, it should be similar to the way you connect to an external service. Incorporating functional domains into our new GitOps model allows us to develop, build, deploy, and test each FD independently from each other. (when you have a complex situation, your first reflex should always to ask, \u201cCan we decompose it into multiple smaller independent parts?\u201d) The second abstraction layer needed in our new GitOps model is the packaging layer (or the Helm chart). Deployment of a single service often involves deploying dozens of k8s objects: secrets, volumes, services, pods, config maps, jobs, cron-job. A helm chart is nothing else than an installer program for Kubernetes. In the picture below, all services in the functional domain, FD-1, are deployed through two installers (helm-1 and helm-2). Let\u2019s now introduce our new GitOps model. Each service has its git repo describing how to build its docker image and a helm repo describing how to install it. In addition, we have the \u2018functional-domains\u2019 repo which contains one YAML file per environment. Each YAML file explains how to build all FDs of a specific environment. In the picture below, FD1 is deployed in production using helm chart H1 (release 1.2) and helm chart H2 (release 2.3). Service versions are hidden inside the installer package (the Helm chart). So if you make a change to your service, you will have to update your installer (helm chart) too. This inconvenience will be solved using some automated process in the next paragraph. In our new GitOps model, every environment is connected to its YAML file. A change in any YAML file triggers a change in its associated environment. The implementation details should consider the decoupling between functional domains, for example, by deploying one argoCD service per FD. Make it Fluid With Automatic Propagation \u00b6 DevOps is all about process fluidity, and fluidity is translated by the passage of a set of versions of a given FD from one environment to another. Suppose we have a functional domain FD1 in the integration environment set to H1 (1.6) and H2 (2.3), and we have proof that this combination is good in integration. Fluidity means that we want to move this exact combination to the next environment in the chain, which is the staging one. This propagation should be triggered automatically using simple rules or decision gates (see next paragraph). Human intervention should be avoided or at least minimized. Services inside the same FD may have strong dependencies; Moving only a subset of the version validated in a given FD integration could compromise your staging environment. The fluidity could be modeled using a simple convention. For example, here (in the picture below), we define that for the functional domain, FD1 production is based on staging, and staging is based on integration, and integration is based on the master branch (* indicate a git branch). This simple file defines the routing of our release pipeline. A developer pushes a change to its service (merge to master), a new release (1.2.3) is created. An automatic process creates a new installer version (helm chart 1.6) for this new release. Since the integration test is based on the master branch, another process updates the \u201cintegration.yaml\u201d with the new helm chart version (1.6). The integration environment detects this change and automatically deploys the new helm chart. The new version will propagate to the testing environment when the decision gate of staging authorizes it. Manage your risk by Adding Gates \u00b6 In the previous paragraph, we have introduced the routing concept to describe how the release pipeline propagates from one environment to another. This propagation is excellent, but we need to control it to be helpful. Decision gates or simply gates are the missing traffic light in these routes. If environments should be identical to each other, decision gates should not. They should reflect the \u201craison d\u2019etre\u201d of the environment. The closer we get to production, the more we demand in our progress criteria. Conceptually the gate can be viewed as a list of binary criteria to be satisfied to move on. Make the fluidity visible \u00b6 DevOps engineers should deal with process design, process implementation, integration, and less with application code. Retrospectively, most of the code I wrote in the past five years as a DevOps engineer was not 100% justified. I have seen many candidates telling me, \u201cI needed something simple, so I developed it\u201d. We always forget that the cost of a working prototype is only the visible part of the iceberg. DevOps engineers write code because they love it, miss it, and are frustrated with editing YAML files or declarative pipelines. One of the few exceptions where written application code was justified was to \u201cmake the fluidity visible\u201d. I have developed a simple release dashboard that visualizes the fluidity of the different services in the release pipeline. We have found that this dashboard is crucial for maintaining this fluidity and giving visibility to developers. Is Fluidity only for Start-Up? \u00b6 large enterprises spend a lot of effort to maintain and improve their customer\u2019s \u201ctrust\u201d. They take their release process super-seriously; nothing is left to chance. Getting production access? Forget about it. Deploying a new version or a fix in production is a very rigid process using case management, release management, and change management, where changes are recorded, then evaluated, authorized, prioritized, planned, tested, implemented, documented, and reviewed in a controlled and consistent manner. Is fluidity only for start-ups and medium companies? Is the automatic propagation compatible with three releases a year strategy? Can large software companies embrace modern DevOps methodology while maintaining the integrity of their production environment? The following picture combines the fluidity mandatory for agility, creativity, and innovation and the trust committed to customers.","title":"It\u2019s all about Processes"},{"location":"processes/#make-your-processes-as-first-citizen","text":"Modern software development has made microservice the king of the ring. What people know less is that the processes are the queen. The queen has the power; she is the most powerful piece on the board. The non-recognition of processes as first citizens and belittling them to simple automation leads to poor, ineffective software development business.","title":"Make your Processes As First Citizen"},{"location":"processes/#rca-processes-relationship","text":"Root Cause Analyses (RCA), the post-mortem examination done after any production incidence, focuses on two questions 1) Why has it happened and 2) What should we do to prevent it from happening again. A quick analysis of RCAs (about 40) my group was involved in during the past three years has shown that 45% were caused by missing or not well-defined processes.","title":"RCA &amp; Processes Relationship"},{"location":"processes/#devops-as-a-business-analyst-with-many-technical-skills","text":"There is a misleading perception about the essential aptitude and expertise expected from DevOps engineers, and this is reflected in the job descriptions of new positions, being very often a long list of technical skills and missing the point that a DevOps engineer is essentially a business analyst, who guides businesses in improving processes, products, and software through data analysis. His role is to serve as a bridge between business problems and technology solutions.","title":"DevOps as a business analyst with many technical skills"},{"location":"processes/#bridging-the-gap-between-mentalities","text":"DevOps is all about process fluidity, and fluidity is not only about code, machine, or automation but is also a human challenge. Most processes are cross-teams, cross-mentality, and cross-ego. DevOps\u2019s role is to bridge the gap between people from development, infrastructure, security, and product. DevOps\u2019s role is to break down artificial barriers, the \u201csilo mentality\u201d, the resistance to change, and to convince people to lose their control, redistribute responsibilities in a scalable way, and work together as a virtual team towards a common goal. credits","title":"Bridging the gap between mentalities"},{"location":"processes/#tools-are-not-the-way-to-talk-about-processes","text":"Don\u2019t be trapped or distracted by tools. They are part of the solution, but they should not shadow the process itself and, in particular, its requirements. Requirements represent an ideal and the design a compromise. Many tools make assumptions and are opinionated, which could be fine, but make it clear why you make these compromises. credits","title":"Tools are not the way to talk about processes"},{"location":"processes/#understand-requirements","text":"Developers tend to write code without design and write design documents without complete requirements. Processes make no exception. You cannot start modeling processes without a full understanding of their requirements. What are the objectives of the process? For whom is it created? What are the input and the output? Who is responsible for the process? Who are the actors? What are the constraints and dependencies? And last but not least is what its performance indicators are?","title":"Understand requirements"},{"location":"processes/#performance-indicators","text":"Are measures that evaluate the success of a given process. Performance indicators try to answer \u201cIs the process objective achieved?\u201d. Having processes without a well-defined performance indicator is like having an electric plate with a broken tag. Is it on or off? Is it low or high? Its definition is purely a business matter. For example, if we talk about the CI process, its indicator could be based on the average CI cycle time with the average time for jobs in the queue. credits","title":"Performance indicators"},{"location":"processes/#wrong-mindset","text":"Two years ago, I redesigned and improved our CI process. I was pretty proud to have reduced the time of the CI cycle to less than 5 minutes. A few months later, developers were complaining (in general in the kitchen, but also in the #devops-help slack channel) that the CI was stuck again. The average time was then 50 minutes. What happened? The number of applications was quadrupled, and many slow integration tests were added. If you don\u2019t have real-time performance indicators part of your dashboard, you cannot be responsive to change. The last thing you want is that your \u201ccustomers'' become your performance indicator. The root cause of this story was not the missing performance indicator but a wrong mindset on what I was working on.","title":"Wrong mindset"},{"location":"processes/#process-1-from-code-to-development-environments","text":"It could be very challenging for developers to test their code in a real environment. This challenge can be explained by the fact that modern applications generally deploy a large number of services, and these services are tightly integrated into the cloud provider ecosystem, making it practically difficult to run on a local computer. The \u201cfrom code to development environment\u201d process is dedicated entirely to developers. The objective of this process is to make the developers productive by getting on-demand a fully dedicated functional development environment. By neglecting this process, developers will push their code to master either without caring if their code works or in the intention to test it in the staging environment. The hidden objective of this process is to protect the master branch.","title":"Process #1 \"From Code to Development Environments\""},{"location":"processes/#merge-to-master-point-of-no-difficult-return","text":"The merge to production branch represents a key event in the release pipeline. At this particular time, the new code incorporates the mainstream pipeline. It will go through some experiments to validate and eventually continue to production. If, for any reason, this mainstream is compromised by a bug or an undesired side effect, the entire production line is blocked. Fixing it will be difficult, take time, and cost you a lot. Process #1 is the most effective way to prevent your master branch from being dirty. credits","title":"\"Merge to Master\" point of no (difficult) return"},{"location":"processes/#process-1-feature-branch-as-the-source-of-truth","text":"To be practical, the \"from code to development environment\" should be transparent, easy to set up, and as fast as possible. Any process should aim to be transparent, meaning that the actors don't need to learn new methods or commands and don't have to feel they are part of a more significant thing. Process #1 should use the natural way developers work with code, \u201cGit\u201d. The concept of managing application deployment with Git is not new; it was introduced by Heroku a decade ago. Making the feature branch the source of truth is the key of process #1. Let's describe how it works. The developer starts by creating a new environment associated with his branch. Each time a new commit is pushed, a new docker image is built and saved to a docker repo. The CD component of the new environment will discover it and deploy it. We should give special attention to making this process as fast as possible, for instance, by optimizing the build cache strategy and postponing any tests after the deployment occurs.","title":"Process #1 Feature branch as the source of truth"},{"location":"processes/#dynamic-environment-as-a-new-paradigm","text":"The necessity to create and destroy environments dynamically on the fly is of paramount importance in a modern DevOps-changing world. Having some static development environments shared between developers should not be an option anymore. Here are some reasons why: these environments are generally in catatonic states, they have ownership issues, are under-utilized, cost-ineffective, with old infrastructure, they do not promote immutable infrastructure, and most importantly, connecting them to a feature branch will not be easy (we will see later why). Creating new environments on the fly implies three requirements: 1) the adoption of \u201cinfrastructure as code\u201d, 2) a way to quickly instantiate and delete new environments, including all the necessary states and other dependencies to be fully functional, and 3) a way to modify the continuous deployment mechanism to deploy from a private branch.","title":"Dynamic Environment as a new paradigm"},{"location":"processes/#process-1-environment-creation-easy-setup","text":"To be practical, creating a new environment should be as easy as possible. It could be initiated using a GitHub label or a Slack bot. For example, a developer just types in a Slack channel \u201ccreate environment us-56782-support-google-login\u201d, a Slack bot will trigger the creation of a new complete environment connected to the branch \u201cus-56782-support-google-login\u201d. Each time a developer \u201cpush\u201d a change to this feature branch (across all existing services!), process #1 will make sure his change is deployed to his dedicated environment. For cost-effectiveness, these environments should have a short lifetime. For example, destruction can be triggered by inactivity in git. (e.g., no push during 6 hours).","title":"Process #1: Environment creation easy setup"},{"location":"processes/#model-extension-to-include-all-kinds-of-code","text":"Given developers, the ability to modify their service and deploy it automatically to an ephemeral environment based on a feature branch is an excellent start. But what about the infrastructure code or the CD pipeline code? The following picture tries to extend our previous model. Let\u2019s describe how it works: a developer just types in the slack channel \u201ccreate us-567850-spike-mongodb 1) if this branch exists in the \u201cinfrastructure as code\u201d repo, it is used to create the new ephemeral environment; otherwise, the master branch is used, 2) a pipeline CD component is then injected in the new environment using the same branch if exist or the master if not and 3) all microservices are deployed to the new environment using the pipeline from 2. If a microservice has the same feature branch, it will be used; otherwise, the master will be used.","title":"Model Extension to include all Kinds of Code:"},{"location":"processes/#make-your-codes-equal","text":"In the previous section, we dealt with an important concept, \u201call codes are equal''. There is no fundamental difference between service code, infrastructure as code, or pipeline as code. Like a service that depends on another service, services depend on infrastructure. Having a coherent development model across your entire code, regardless of its nature, helps you rationalize and simplify things. Simplification in the way we develop, test, and deploy. If, on the one hand, you develop and deploy your service through a feature branch strategy, and on the other hand, you have one folder per environment for your terraform code, you increase the complexity of your stack.","title":"Make your codes equal"},{"location":"processes/#design-your-architecture-up-to-your-ambition","text":"How difficult is it to implement a feature branch as a source of truth? How difficult is it to make your deployment from a branch? It depends on the architecture. Having a centralized (non-scalable) architecture with a single Jenkins/spinnaker instance for all your environments will make it very difficult. On the other hand, adopting a decentralized approach, where each environment is self-organized and contains its CD components based on any branches you want, will make it easy to implement.","title":"Design your architecture up to your ambition"},{"location":"processes/#process-2-the-release-management-process","text":"Let\u2019s introduce our second process. The \u201crelease management process\u201d is considered the primary DevOps process by excellence. Its objective is to create a continuous flow from the master branch to the production environment while minimizing the risk of surprise. This process will keep us busy for some pages. \"Houston, we have a problem\": Monday morning, a new version has just been deployed, everything seems to work fine. Suddenly you get a call from the professional service; customers start reporting that the application store is not working anymore. credits The log doesn\u2019t contain any error; The Grafana dashboard indicates very high traffic. Is it related to the issue? Mike, your colleague, tries to understand the differences between the last deployment, where everything was fine. The new deployment includes 80 new pull requests, only a portion of them are related to the store application, but since they use a mono-repo, it will take time to filter them. Forty-five minutes have passed, and the boss is pressing to revert to the previous deployment. Bob is not sure it is a good idea since the new deployment includes a schema change in the database, and the DBA guy is unavailable. Max from the platform team just informed you that the new deployment is also using a new version of Ubuntu and that they also upgraded the docker engine.","title":"Process #2 The release management process:"},{"location":"processes/#working","text":"There is only one definition for working: the software is doing what it is expected to do from an end user\u2019s perspective. DevOps is an empirical science based mainly on experimentation and observation. The way to assess the \u201cworking\u201d property is to create an experimental environment identical to the one used by the real users and deploy on it the unknown version. E2E tests can then simulate user scenarios and check that everything works as expected. By writing E2E tests, we ensure that the product contract between the service provider and the customer is respected. E2E tests don\u2019t care about the system\u2019s internal implementation, making, in theory, a good candidate for outsourcing (we will see later why this is not true). E2E tests are the sole measure of working.","title":"Working"},{"location":"processes/#healthy","text":"Healthy is a subjective and relative concept and means \u201cnot displaying clinical signs of disease or infection\u201d. When I was an EMT-driver, I was sent to a non-emergency call. When we arrived on the scene, we found an older person breathing heavily, making pressure cooker noise. I immediately asked the dispatcher to send us another ambulance with a medic. I remembered my embarrassment when the doctor arrived and asked him, \u201csince when did you breathe like that?\u201d and his response was \u201c5 years\u201d. The concept of a baseline is essential in DevOps; data are relative and not absolute. The second point is, invest time to find the right key metrics for your services. The third point is also taken from my EMT course, \u201ctreat the patient, not the monitor\u201d. Suppose your PostgreSQL instance has a CPU utilization of 90% check the request duration. If it is okay, your patient is fine (for now), then check your baseline.","title":"Healthy"},{"location":"processes/#stable","text":"Stable means the application is subject to little influence over time and under (extreme) external conditions. If \u201cworking\u201d is proved in a few minutes, \u201cstability\u201d is more subjective and needs more time to be verified. Influence over time is evaluated by creating a new experimental environment and leaving the unknown version for some time while running in loop E2E tests. In addition to the boolean results of E2E tests, it could be valuable to choose relevant indicators and monitor them for degradation. These measures are repeated using distinct external conditions (load test). The results are then compared and correlated to give an indication of stability. Practically when we introduce a change in the code base, we are looking for a simple answer to \u201cdoes this change have a negative impact on the performance and the stability of the product?\u201d. Working with small chunks of code makes it easy to identify the responsible.","title":"Stable"},{"location":"processes/#resilience","text":"Resilience is the process of adapting in the face of adversity, threats, or significant sources of stress. Practically this means that the application continues to work despite failures or can recover quickly from unexpected events. Resiliency is the elasticity property of your system: nothing is rigid, every component can be stretched, disappear, and return to its normal size. Chaotic engineering is the discipline and practice of causing random failures in a system to assess its resiliency. Chaotic engineering tries to answer \u201cCan we predict the unpredictable?\u201d using simulation. In 2011, Netflix introduced \"Chaos Monkey\" a tool to randomly terminate instances in production. Beyond the idea of Chaotic engineering, two important DevOps principles are hidden: 1) there is no place for the \u201cunknown\u201d in modern software engineering. Maybe your system is not resilient or has some security issues, but you cannot just ignore them; you must understand their scope and limitations, and 2) don\u2019t be afraid to use your production environment for testing scenarios. Don\u2019t miss the opportunity to do experiments to answer questions like \u201cis it working, is it stable, is it resilient\u201d on the real things: real data, real user, real traffic. This is your last line of defense; use it.","title":"\u201cResilience\u201d"},{"location":"processes/#why-companies-fail-in-their-e2e-strategy","text":"Designing and implementing E2E tests can be very challenging. They are expensive to write, run, and maintain, and when failing, they don\u2019t give any indication of why. They generally are spanned by multiple teams, with no motivation to write them, and backup by their management with the fear to \u201cdecrease the velocity of the development\u201d thus, their development falls through the cracks and ends up in the best case scenario with a new team dedicated to this job (we will see in a few paragraphs why it cannot be effective). On the other hand, integration tests are developed by service owners. They represent the contract between a given service and the architect and provide an exact answer to \u201cIs this service working?\u201d. They are easier to implement, and in addition, they can be tested (in isolation or not) very early in the continuous release pipeline, making them a key component to the detection of issues as early as possible. Integration tests are essential but have distracted attention from the E2E tests, and many companies have failed to develop a systematic approach to the E2E tests and to answer the question \u201cIs it working?\u201d rely mainly on the additivity property of integration tests.","title":"Why companies fail in their E2E strategy"},{"location":"processes/#there-is-no-replacement-for-the-e2e-test","text":"Let\u2019s make an allegory to understand why integration tests cannot replace E2E tests. Suppose a Swiss watch company is building a new watch model. The spare parts are manufactured in their factory in China, and the assembly is carried out in Switzerland (to get the \u201cMade in Switzerland\u201d designation). The watch contains 30 moving parts; most of them are wheels. To minimize the risk of incompatibility, the Swiss headquarter has provided to the factory nine simple compatibility tests to make sure some parts fit well together (see picture below). The tests have been successful; the pieces are then sent to Zurich, where highly specialized workers perform the assembly. Once this assembly is completed, the watch is immediately sold on the internet. Do they check if the watch is working? No! Do they check if the watch doesn't go wrong after a day, a week? No! Do they check if the watch is waterproof? No!. Can integration tests replace E2E tests?","title":"There is no replacement for the E2E test"},{"location":"processes/#getting-to-the-root-of-the-problem","text":"Why do E2E tests go wrong in practice? Most modern codes are not E2E testable. They are often highly-coupled with some external services (for example, an e-commerce application being coupled with an external payment method that doesn\u2019t let you test it without doing real transactions), or may contain slow processes (for example, some slow queues, offline jobs, or even manual intervention) or they are missing some API essential for the test. For a code to be E2E testable, it should have been designed with E2E testability in mind. It is the same for making secure code. You cannot make secure code if you don\u2019t have security in mind. Designing E2E tests after code has been written is the root cause of E2E test strategy failure.","title":"Getting to the root of the problem"},{"location":"processes/#making-testable-code","text":"The approach for creating testable code is to move the responsibility of the E2E tests to the SCRUM team developing the feature. The team will take care of the design and the implementation of these E2E tests, and if needed, will adapt the design of their feature to make their test feasible and fast. The key to success is to realize that application and test design should start together and are tight together. A slight alternative to this method is to have an E2E tests champion in every team. The champion\u2019s responsibility is to ensure that part of the DOD (definition of done) developers have designed an E2E tests plan (without implementing them) and make sure their codes are compatible with the test plan. The test plan could then be outsourced to another team for implementing it. It may seem weird or even an anti-pattern that tests influence the codes it is testing, but success is the ability to rise above principle.","title":"Making testable code"},{"location":"processes/#making-e2e-tests-affordable-removing-the-ui-layer","text":"Another reason why E2E tests are expensive is that they generally rely on UI. UI tests are unstable, fragile, and break easily. E2E tests are not UI tests; the focus is the flow and not the UI itself. We use the UI because we simulate real users, and users are using the UI, but if there is another simplest way to test the flow without the UI, we are fine. The concept of \u201cAPI first\u201d, making API a \u201cfirst-class citizen\u201d, and the UI, a simple consumer, can help us to bypass the UI layer and create a complete E2E flow based on the API layer. Removing the UI from the equation is not ideal by itself; it is a compromise to make E2E tests more affordable and more maintainable.","title":"Making E2E tests affordable: Removing the UI Layer"},{"location":"processes/#code-review-as-the-last-bastion-of-defense","text":"We talked earlier about the \u201cmerge to master\u201d as the point of no return and the importance for developers to test their feature branch in an on-demand environment. These environments can be very effective in checking that new functionalities are working as expected and verifying that the changes made in the codebase don\u2019t affect the overall working functionality (through regression tests). On the other hand, they are very limited in identifying bugs. Code review is the only way to significantly reduce the number of bugs before entering the production branch. In addition to being the most effective way to identify logical defects, it is also a valuable tool for maintaining code quality standards, education, and sharing knowledge in the team.","title":"Code Review as the last bastion of defense"},{"location":"processes/#code-review-starts-with-yourself","text":"My father, Claude Cohen z\u201dl (Cairo 1941- J\u00e9rusalem 2011), was a medicinal chemist and a pioneer in the \u201crational drug design\u201d field. In the late 1970s, he wrote many Fortran programs to model the geometry and properties of small molecules. The way to load software into computers was through a \u201cpunched card\u201d (see picture below), a piece of paper that holds digital data represented by the presence or absence of holes in predefined positions. My father regularly sent his code as \u201ccoding sheets\u201d to the IBM center in Paris by taxi. It was a 50-minute trip, where an IBM operator punched the actual deck using a keypunch machine, and the cards were returned to my father. When I asked him about bugs and typo errors, he told me it was infrequent since he carefully reviewed them.","title":"Code review starts with yourself"},{"location":"processes/#improving-the-code-review-process","text":"Code reviews are suboptimal. Everyone recognizes their importance, but everyone will add it in their new Year\u2019s resolution self-improvement. What\u2019s wrong with it? Like any other self-improvement, if you want to get better at something, you need to know where you stand and a way to quantify your progress, which is missing in today's code review process. We need metrics that will help us to self-improve. Such metrics can be based on the number of reviews done, the time spent on code review (time from the first comment and last comment), etc. The team retrospective meeting is an excellent framework to review the team scores. This meeting is precisely for that: it is an opportunity for a team to assess its performance and improve itself. Managers should not participate in these retrospective sessions; it will destroy them.","title":"Improving The Code Review Process"},{"location":"processes/#why-staging-and-production-should-be-and-cant-be-identical","text":"Why staging and production should be and can\u2019t be identical? They should be identical because experimentations done in staging are based on the extrapolation concept. If it is green in staging, it should be green also in production. This extrapolation is correct as the two environments are 100% identical, but this is not the case for two fundamental reasons: data and traffic. Data in production contains real customer data. These data could not generally be cloned in staging for compliance reasons. Data anonymization is often not doable due to the complex nature of the data, so the staging environment typically ends with synthetic data making the extrapolation less reliable. The second dissimilarity is on traffic, as the production environment is the only one receiving real traffic from customers.","title":"Why Staging and Production should be and can\u2019t be identical?"},{"location":"processes/#the-problem-of-environment-names","text":"The fact that each environment has a unique name is a source of trouble. If your staging DNS is working, does it imply that your production DNS is OK? Does the code below seem familiar to you? At first glance, the developer could have a good reason to write it; maybe he tries to minimize the risk in production by gradually rolling out some new process code. But make it clear that this code is an anti-pattern; It is the symptom of an underline DevOps issue. Gradual rolling out should be done only using a \u201cpropagation process strategy\u201d (will be presented in a few paragraphs), and if you need to test something in development, do it with a private branch. Conceptually, giving a name to an environment is in itself an issue. How many times did you recreate your production environment? Probably never, and when it happens, you end up with production2. Giving a name to something makes it permanent, unreplaceable. There is nothing special in the production environment; it should start from scratch regularly. We will discuss in the architecture chapter the concept of keeping the state apart, making the environment completely stateless, and the idea of an ephemeral environment doable. To promote the notion of an ephemeral and idempotent stack, we need to switch from environment name to environment ID and tag. A tag is not permanent and can point to something else.","title":"The problem of environment names"},{"location":"processes/#process-modelisation-and-implementation","text":"New DevOps engineers start their journey with EKS, terraform, Argo CD and barely understand the chance they have. I have made every single possible errors I can imagine. My first CI/CD process (JenkinsFile) was modeled very similarly to the one shown in the picture below. This image was part of the official Jenkins document (and was recently removed). What's wrong with it? It creates unnecessary coupling between components that are not dependent. Is CD dependent on CI? Is Production dependent on Staging? You cannot easily know what the desired state of the system is. Meaning you can check which version has been deployed in staging or production, but it is generally difficult to know which version will be deployed in the middle of the process. Let's make a comparison. Let's say there is a company that sells a product. In this company, there are two departments, the manufacturing department (CI) and the sales department (CD). Each department has its own internal processes. Does it make sense to couple the manufacturing and the sales processes together as we did in the previous Jenkins pipeline?. Does the sales department care about the internal manufacturing processes? If something goes wrong in the manufacturing process, it will block the whole process. The second problem with this coupling is the state. Can you quickly tell what the salesman should sell (the desired state)? It is not an easy task since it is not explicitly defined. Let's revisit our example, but now we have two distinct pipelines: the manufacturing department and the second for the sales department (yes, exactly decoupling). Since the sales department only cares about these two facts 1) what is the model they need to sell (the version to install), and 2) the availability of the model in the stock (is the new version already in the docker repo?). The last step of the manufacturing process will be to write on a shared google spreadsheet these two pieces of information. The new sales pipeline will now use this information in its own process. The processes are now decoupled, and you know exactly what version you need to sell (the desired state). From the salesman\u2019s perspective, this google spreadsheet represents its source of truth.","title":"Process Modelisation and Implementation"},{"location":"processes/#gitops","text":"if you understand the previous example, you understand GitOps. GitOps is only about decoupling and defining explicit states. The only difference with our last model is instead of using a google spreadsheet as the sole truth, it uses a cloud-based git repository. Using git as a source of truth is very judicious and smart but is only a detail. It is judicious since it makes things pretty simple: change your code and push it; the developer doesn\u2019t need to learn a new tool. From Git, you get traceability. Using a cloud-based git provider such as GitHub.com is smart since you get access control, ownership management, discussion, approval mechanism, and high availability.","title":"GitOps"},{"location":"processes/#a-more-practical-gitops-model","text":"The GitOps model based on version only is too simplistic to be helpful. If we examine all the services deployed in a single environment, many of them work together as an independent unit to form a feature or a functionality. Such units are often called functional domains. Functional domains have no direct or little dependency on each other. Consider each \u201cfunctional domain\u201d being developed by another sub-unit or even company. If you need to talk to another functional domain, it should be similar to the way you connect to an external service. Incorporating functional domains into our new GitOps model allows us to develop, build, deploy, and test each FD independently from each other. (when you have a complex situation, your first reflex should always to ask, \u201cCan we decompose it into multiple smaller independent parts?\u201d) The second abstraction layer needed in our new GitOps model is the packaging layer (or the Helm chart). Deployment of a single service often involves deploying dozens of k8s objects: secrets, volumes, services, pods, config maps, jobs, cron-job. A helm chart is nothing else than an installer program for Kubernetes. In the picture below, all services in the functional domain, FD-1, are deployed through two installers (helm-1 and helm-2). Let\u2019s now introduce our new GitOps model. Each service has its git repo describing how to build its docker image and a helm repo describing how to install it. In addition, we have the \u2018functional-domains\u2019 repo which contains one YAML file per environment. Each YAML file explains how to build all FDs of a specific environment. In the picture below, FD1 is deployed in production using helm chart H1 (release 1.2) and helm chart H2 (release 2.3). Service versions are hidden inside the installer package (the Helm chart). So if you make a change to your service, you will have to update your installer (helm chart) too. This inconvenience will be solved using some automated process in the next paragraph. In our new GitOps model, every environment is connected to its YAML file. A change in any YAML file triggers a change in its associated environment. The implementation details should consider the decoupling between functional domains, for example, by deploying one argoCD service per FD.","title":"A more practical Gitops model"},{"location":"processes/#make-it-fluid-with-automatic-propagation","text":"DevOps is all about process fluidity, and fluidity is translated by the passage of a set of versions of a given FD from one environment to another. Suppose we have a functional domain FD1 in the integration environment set to H1 (1.6) and H2 (2.3), and we have proof that this combination is good in integration. Fluidity means that we want to move this exact combination to the next environment in the chain, which is the staging one. This propagation should be triggered automatically using simple rules or decision gates (see next paragraph). Human intervention should be avoided or at least minimized. Services inside the same FD may have strong dependencies; Moving only a subset of the version validated in a given FD integration could compromise your staging environment. The fluidity could be modeled using a simple convention. For example, here (in the picture below), we define that for the functional domain, FD1 production is based on staging, and staging is based on integration, and integration is based on the master branch (* indicate a git branch). This simple file defines the routing of our release pipeline. A developer pushes a change to its service (merge to master), a new release (1.2.3) is created. An automatic process creates a new installer version (helm chart 1.6) for this new release. Since the integration test is based on the master branch, another process updates the \u201cintegration.yaml\u201d with the new helm chart version (1.6). The integration environment detects this change and automatically deploys the new helm chart. The new version will propagate to the testing environment when the decision gate of staging authorizes it.","title":"Make it Fluid With Automatic Propagation"},{"location":"processes/#manage-your-risk-by-adding-gates","text":"In the previous paragraph, we have introduced the routing concept to describe how the release pipeline propagates from one environment to another. This propagation is excellent, but we need to control it to be helpful. Decision gates or simply gates are the missing traffic light in these routes. If environments should be identical to each other, decision gates should not. They should reflect the \u201craison d\u2019etre\u201d of the environment. The closer we get to production, the more we demand in our progress criteria. Conceptually the gate can be viewed as a list of binary criteria to be satisfied to move on.","title":"Manage your risk by Adding Gates"},{"location":"processes/#make-the-fluidity-visible","text":"DevOps engineers should deal with process design, process implementation, integration, and less with application code. Retrospectively, most of the code I wrote in the past five years as a DevOps engineer was not 100% justified. I have seen many candidates telling me, \u201cI needed something simple, so I developed it\u201d. We always forget that the cost of a working prototype is only the visible part of the iceberg. DevOps engineers write code because they love it, miss it, and are frustrated with editing YAML files or declarative pipelines. One of the few exceptions where written application code was justified was to \u201cmake the fluidity visible\u201d. I have developed a simple release dashboard that visualizes the fluidity of the different services in the release pipeline. We have found that this dashboard is crucial for maintaining this fluidity and giving visibility to developers.","title":"Make the fluidity visible"},{"location":"processes/#is-fluidity-only-for-start-up","text":"large enterprises spend a lot of effort to maintain and improve their customer\u2019s \u201ctrust\u201d. They take their release process super-seriously; nothing is left to chance. Getting production access? Forget about it. Deploying a new version or a fix in production is a very rigid process using case management, release management, and change management, where changes are recorded, then evaluated, authorized, prioritized, planned, tested, implemented, documented, and reviewed in a controlled and consistent manner. Is fluidity only for start-ups and medium companies? Is the automatic propagation compatible with three releases a year strategy? Can large software companies embrace modern DevOps methodology while maintaining the integrity of their production environment? The following picture combines the fluidity mandatory for agility, creativity, and innovation and the trust committed to customers.","title":"Is Fluidity only for Start-Up?"},{"location":"simplicity/","text":"With Great Power, New Challenges \u00b6 Cloud providers such as AWS or Google Cloud give us the possibility in a few clicks or with a few lines of code to create complex systems. For example, this repo will create/deploy in less than 4 minutes: a VPC, 3 private networks, 3 public networks, a NAT gateway, an internet gateway, an ECS cluster with autoscaling and lauchconfiguration, a load balancers with listeners and target groups, and a lambda functions. Designing and implementing a similar system on an on-premises would undoubtedly have taken several weeks of work. However, these new powers come with new challenges in terms of management, architecture, troubleshooting, compliance, security, and monitoring. Poorly managed DevOps can quickly turn into a nightmare. What are the guidelines and best practices to avoid such a nightmare? Striving for simplicity at all layers \u00b6 the key factor to prevent DevOps from becoming a nightmare is to make simplicity a requirement at all levels. Isolate things to their pure essence \u00b6 What does simplicity mean? I have found this definition extremely well defined \"Simplicity is tackling the complexity of the world, and trying to distill ( isolate ) things to their pure essence.\" credits Isolating Things \u00b6 In software engineering, decomposing and isolating components is called decoupling and describes breaking apart highly dependent components into loosely coupled ones. The more tightly coupled these systems are, the more they will be affected by failures on the systems they depend on but more importantly (from a development point of view) the more they will be affected by change in the system they depend on. On the other hand having components that have little knowledge on the other parts of the system is the key for making scalable things. The benefit of having simple entities \u00b6 By having components with simple behavior, each part separately is easier to: build, deploy, test, repair, extend, explain, communicate, share, maintain and operate. The benefit of isolated entities \u00b6 What are the benefits of isolated entities? In one word: flexibility . Flexibility to: remove unnecessary components, to replace one element with another (for example, by changing its implementation), to scale out one part, to partition ownership in a manageable way, and to restart or update one component without touching the other (having a different life cycle). Simplicity doesn\u2019t mean simplistic \u00b6 It is important not to confuse simplicity with simplistic. Simplicity means decomposing complex problems into several parts. Simplicity doesn\u2019t mean things should not be complex, but such complexity should be modeled in a simple way. Decoupling price: \u00b6 Flexibility is great! But everything comes with a cost, and the cost of the decoupling is high. By decomposing complex components into several simple ones, we increase the system\u2019s overall complexity (law of conservation of energy). Decoupling is the transition from one musician to an orchestra. Still, you can make great music with one musician. In the next paragraph, we will try to understand the challenges of managing an orchestra. credits New challenges introduced by the decoupling \u00b6 The adoption of microservice architecture presents many new challenges. Communication challenges : how can different parts communicate with each other? Discovery challenges : how can parts dynamically discover each other? Dependency challenges : how to manage dependencies between parts? Versioning challenges : how do we ensure that nothing breaks when upgrading a part? Operational challenges : how to monitor & test, individual components, and make sure the whole things is working as - expected, how can the system continue to work despite the failure of one or more components? Security challenges : how can we secure the communication or share a secret between components? Monolith applications don't have any of these problems. The very high entry-level of the microservice approach makes it very questionable in itself. The Lego Era \u00b6 The decoupling and the microservice adoption don\u2019t represent a goal in themselves?. It\u2019s just the first mandatory step to reach the next phase of the software evolution and revolution: the lego era. The lego era embraces the reuse paradigm, the usage of ready-to-go building blocks at a run-time level: you do your shopping in a supermarket of services: a database, a vault, an authentication service, an authorization service, an automatic DNS registration service, a monitoring service, a logs services, a search engine, a web-server, a proxy. What else do you need? The interesting point is that most of the quality attributes used to describe an ideal system, such as: secure, auditable, resilient, scalable, stable, maintainable, flexible, traceable, manageable, portable, reliable, are no more related to your core application. It\u2019s all about the choice of the other building blocks and the way you assemble them. Developers can focus on their core business without wasting time reinventing the wheel or even integrating with third-party libraries. So If we ask the question, \u201cis microservice architecture worth it?\u201d The answer is \u201cyou don\u2019t have the choice\u201d. If you take only the first attribute, \u201csecure\u201d, there is no chance to get the \u201czero trusts\u201d (do not trust anyone inside or outside) easily using some python libraries. In the lego era, 90% of the musicians are free; In the lego era, the focus has moved from development to integration. DevOps engineers design complex architecture (Lego Builder) and manage it (Lego manager). credits The isolation and decoupling paradigm goes beyond microservices and applies to any system organization. In the next chapter, \u201cIt\u2019s all about processes\u201d, we will show how this concept is central to all DevOps processes. Doing one thing and doing it well \u00b6 The \u201csingle-responsibility principle\u201d stated for modules and classes which try to encapsulate functionalities into entities that \u201cshould have only one reason to change\u201d has never been so true. \"Do one thing and do it well\" is universal. It is true for lawyers, engineers, and doctors too Make it simple by Methodologies & Technologies \u00b6 Decoupling is challenging and requires considerable effort and time. But in recent years, new technologies, abstraction models, approaches, and methodologies have been developed to allow developers to create decoupling architecture predictably without too much effort. Some examples are given below: Object-Oriented : decoupling between interface and internal implementation Microservice : decoupling between business components REST & API First : decoupling between frontend & backend Serverless architecture : decoupling between code and hardware Message broker : decoupling between sender and the receiver Containers (Docker) : decoupling between applications and infrastructure Service mesh : decoupling between the application layer and networking layer As a service : decoupling between my problem and the service provider\u2019s problem The declarative way : decoupling between what you want and how to do it The Tagging way : decoupling between how and who (will be explained soon) Premature Optimization \u00b6 Simplicity means also focusing on the essential and rejecting the rest (use the word \u2018postpone\u2019 outside of your team). Spending time on something not sure is needed is called \u201cpremature optimization\u201d. It doesn\u2019t mean we should not deal with potential issues and their possible remediation in a design document but not implement them until these potential issues become real. Bottlenecks are often unpredictable, especially in their intensity. Keep in mind that optimization, even a good one, decreases the readability and maintainability of your code. Homework: In your next planning meeting, try to place \u201cThis is optimization, I suggest postponing it\u201d. Maintaining the cause and effect relationship \u00b6 Causation means that an event (the cause) leads to another event (the effect). An unambiguous way to prove this causation is to design a simple experiment where it is crystal clear that only this cause and no other factors are responsible for the effect. When writing a unit test and \u201ctesting one thing at a time\u201d in isolation (e.g., using mock), you are designing an experiment that tries to prove the relationship between a small unit of code and a small functionality. The isolation is needed to establish that no other factors are responsible for the effect. When you create a new integration environment, you design an experiment that tries to prove some relationship. When you maintain a continuous flow of small changes in your release pipeline, you try to keep the cause to effect relationship true in your process. Make it simple by Tagging \u00b6 Generic and dynamic are better than hard-coded and static, which is precisely what tags give you. Tags are your secret weapon for simplicity . It allows you to decouple your logic from the subjects (on whom do you want to apply the logic). You can use tags to control access to cloud resources based on your team name or add a tag \u201csensitive-data\u201d on an s3 bucket to make it disappear from all users. Use a tag (annotation) in your Kubernetes pod to easily retrieve credentials from vault without being vault aware (link). Use Github PR tag (label) to customize your CI process. For example, add a \u201cperformance\u201d label to include a performance test on your private branch. Use a tag (reactions) in your slack channel to create a light process using a bot or just to communicate effectively Make it simple by consistency \u00b6 Having consistent methods, processes, tools, tests, dashboards, and naming, improve efficiency, predictability, enhance clarity, lower the learning curve, facilitate onboarding of new people, allow to measure success and progress easier. In the chapter \u201coperation\u201d, we will discuss the facade pattern to make operations consistent. But beyond that, more important than being consistent is the search for consistency . Why is the deployment of the infrastructure-as-code and the application-code so different? Are they fundamentally different? Searching for consistency promotes and encourages the analysis, comparison, search of common patterns, and asking the right questions, which leads to a deeper understanding, and a willingness to unify, standardize, and make things more coherent and simple. credits Make it simple by conventions \u00b6 Conventions are all about User eXperience (UX), how easy and efficient the users (mainly developers) interact with processes and tools. Conventions simplify complex processes by making opinionated decisions or by reducing the degree of freedom of a system. By making decisions on behalf of developers, we keep them on the same path, thus increasing consistency. Because conventions don't have a solid and legitimate basis, it is essential to enforce them. Imagine what it would be if the convention of driving on the right were not reinforced by law? The picture below shows an example of a convention that can ensure developers don\u2019t push code to GitHub without having a valid ticket for their bug or user story. Make it simple by making compromises \u00b6 There are many similarities between \u201cmass casualty incident\u201d and DevOps (I was an EMT volunteer). In both cases, you're dealing with restricted resources and restricted personnel regarding reality. In both cases, prioritization is the key, and you need to stay focused on it. In both cases, you are making compromises and hard decisions. In the chapter \u201cit\u2019s all about agility (how to work smart)\u201d, we will try to understand these priorities. Compromise is the art of adapting the requirement to make the design simpler. Compromise is the art of negotiating with your PO or manager and making them understand the consequences of their choice in terms of time and money. If you can use an \u201cas a service\u201d solution and satisfy 80%-90% of your requirements, you have to fight for it! From my experience, even a hard requirement could become soft if you defend it well. Compromise is accepting that the word is imperfect, and you are comfortable with it.","title":"It\u2019s all about Simplicity"},{"location":"simplicity/#with-great-power-new-challenges","text":"Cloud providers such as AWS or Google Cloud give us the possibility in a few clicks or with a few lines of code to create complex systems. For example, this repo will create/deploy in less than 4 minutes: a VPC, 3 private networks, 3 public networks, a NAT gateway, an internet gateway, an ECS cluster with autoscaling and lauchconfiguration, a load balancers with listeners and target groups, and a lambda functions. Designing and implementing a similar system on an on-premises would undoubtedly have taken several weeks of work. However, these new powers come with new challenges in terms of management, architecture, troubleshooting, compliance, security, and monitoring. Poorly managed DevOps can quickly turn into a nightmare. What are the guidelines and best practices to avoid such a nightmare?","title":"With Great Power, New Challenges"},{"location":"simplicity/#striving-for-simplicity-at-all-layers","text":"the key factor to prevent DevOps from becoming a nightmare is to make simplicity a requirement at all levels.","title":"Striving for simplicity at all layers"},{"location":"simplicity/#isolate-things-to-their-pure-essence","text":"What does simplicity mean? I have found this definition extremely well defined \"Simplicity is tackling the complexity of the world, and trying to distill ( isolate ) things to their pure essence.\" credits","title":"Isolate things to their pure essence"},{"location":"simplicity/#isolating-things","text":"In software engineering, decomposing and isolating components is called decoupling and describes breaking apart highly dependent components into loosely coupled ones. The more tightly coupled these systems are, the more they will be affected by failures on the systems they depend on but more importantly (from a development point of view) the more they will be affected by change in the system they depend on. On the other hand having components that have little knowledge on the other parts of the system is the key for making scalable things.","title":"Isolating Things"},{"location":"simplicity/#the-benefit-of-having-simple-entities","text":"By having components with simple behavior, each part separately is easier to: build, deploy, test, repair, extend, explain, communicate, share, maintain and operate.","title":"The benefit of having simple entities"},{"location":"simplicity/#the-benefit-of-isolated-entities","text":"What are the benefits of isolated entities? In one word: flexibility . Flexibility to: remove unnecessary components, to replace one element with another (for example, by changing its implementation), to scale out one part, to partition ownership in a manageable way, and to restart or update one component without touching the other (having a different life cycle).","title":"The benefit of isolated entities"},{"location":"simplicity/#simplicity-doesnt-mean-simplistic","text":"It is important not to confuse simplicity with simplistic. Simplicity means decomposing complex problems into several parts. Simplicity doesn\u2019t mean things should not be complex, but such complexity should be modeled in a simple way.","title":"Simplicity doesn\u2019t mean simplistic"},{"location":"simplicity/#decoupling-price","text":"Flexibility is great! But everything comes with a cost, and the cost of the decoupling is high. By decomposing complex components into several simple ones, we increase the system\u2019s overall complexity (law of conservation of energy). Decoupling is the transition from one musician to an orchestra. Still, you can make great music with one musician. In the next paragraph, we will try to understand the challenges of managing an orchestra. credits","title":"Decoupling price:"},{"location":"simplicity/#new-challenges-introduced-by-the-decoupling","text":"The adoption of microservice architecture presents many new challenges. Communication challenges : how can different parts communicate with each other? Discovery challenges : how can parts dynamically discover each other? Dependency challenges : how to manage dependencies between parts? Versioning challenges : how do we ensure that nothing breaks when upgrading a part? Operational challenges : how to monitor & test, individual components, and make sure the whole things is working as - expected, how can the system continue to work despite the failure of one or more components? Security challenges : how can we secure the communication or share a secret between components? Monolith applications don't have any of these problems. The very high entry-level of the microservice approach makes it very questionable in itself.","title":"New challenges introduced by the decoupling"},{"location":"simplicity/#the-lego-era","text":"The decoupling and the microservice adoption don\u2019t represent a goal in themselves?. It\u2019s just the first mandatory step to reach the next phase of the software evolution and revolution: the lego era. The lego era embraces the reuse paradigm, the usage of ready-to-go building blocks at a run-time level: you do your shopping in a supermarket of services: a database, a vault, an authentication service, an authorization service, an automatic DNS registration service, a monitoring service, a logs services, a search engine, a web-server, a proxy. What else do you need? The interesting point is that most of the quality attributes used to describe an ideal system, such as: secure, auditable, resilient, scalable, stable, maintainable, flexible, traceable, manageable, portable, reliable, are no more related to your core application. It\u2019s all about the choice of the other building blocks and the way you assemble them. Developers can focus on their core business without wasting time reinventing the wheel or even integrating with third-party libraries. So If we ask the question, \u201cis microservice architecture worth it?\u201d The answer is \u201cyou don\u2019t have the choice\u201d. If you take only the first attribute, \u201csecure\u201d, there is no chance to get the \u201czero trusts\u201d (do not trust anyone inside or outside) easily using some python libraries. In the lego era, 90% of the musicians are free; In the lego era, the focus has moved from development to integration. DevOps engineers design complex architecture (Lego Builder) and manage it (Lego manager). credits The isolation and decoupling paradigm goes beyond microservices and applies to any system organization. In the next chapter, \u201cIt\u2019s all about processes\u201d, we will show how this concept is central to all DevOps processes.","title":"The Lego Era"},{"location":"simplicity/#doing-one-thing-and-doing-it-well","text":"The \u201csingle-responsibility principle\u201d stated for modules and classes which try to encapsulate functionalities into entities that \u201cshould have only one reason to change\u201d has never been so true. \"Do one thing and do it well\" is universal. It is true for lawyers, engineers, and doctors too","title":"Doing one thing and doing it well"},{"location":"simplicity/#make-it-simple-by-methodologies-technologies","text":"Decoupling is challenging and requires considerable effort and time. But in recent years, new technologies, abstraction models, approaches, and methodologies have been developed to allow developers to create decoupling architecture predictably without too much effort. Some examples are given below: Object-Oriented : decoupling between interface and internal implementation Microservice : decoupling between business components REST & API First : decoupling between frontend & backend Serverless architecture : decoupling between code and hardware Message broker : decoupling between sender and the receiver Containers (Docker) : decoupling between applications and infrastructure Service mesh : decoupling between the application layer and networking layer As a service : decoupling between my problem and the service provider\u2019s problem The declarative way : decoupling between what you want and how to do it The Tagging way : decoupling between how and who (will be explained soon)","title":"Make it simple by Methodologies &amp; Technologies"},{"location":"simplicity/#premature-optimization","text":"Simplicity means also focusing on the essential and rejecting the rest (use the word \u2018postpone\u2019 outside of your team). Spending time on something not sure is needed is called \u201cpremature optimization\u201d. It doesn\u2019t mean we should not deal with potential issues and their possible remediation in a design document but not implement them until these potential issues become real. Bottlenecks are often unpredictable, especially in their intensity. Keep in mind that optimization, even a good one, decreases the readability and maintainability of your code. Homework: In your next planning meeting, try to place \u201cThis is optimization, I suggest postponing it\u201d.","title":"Premature Optimization"},{"location":"simplicity/#maintaining-the-cause-and-effect-relationship","text":"Causation means that an event (the cause) leads to another event (the effect). An unambiguous way to prove this causation is to design a simple experiment where it is crystal clear that only this cause and no other factors are responsible for the effect. When writing a unit test and \u201ctesting one thing at a time\u201d in isolation (e.g., using mock), you are designing an experiment that tries to prove the relationship between a small unit of code and a small functionality. The isolation is needed to establish that no other factors are responsible for the effect. When you create a new integration environment, you design an experiment that tries to prove some relationship. When you maintain a continuous flow of small changes in your release pipeline, you try to keep the cause to effect relationship true in your process.","title":"Maintaining the cause and effect relationship"},{"location":"simplicity/#make-it-simple-by-tagging","text":"Generic and dynamic are better than hard-coded and static, which is precisely what tags give you. Tags are your secret weapon for simplicity . It allows you to decouple your logic from the subjects (on whom do you want to apply the logic). You can use tags to control access to cloud resources based on your team name or add a tag \u201csensitive-data\u201d on an s3 bucket to make it disappear from all users. Use a tag (annotation) in your Kubernetes pod to easily retrieve credentials from vault without being vault aware (link). Use Github PR tag (label) to customize your CI process. For example, add a \u201cperformance\u201d label to include a performance test on your private branch. Use a tag (reactions) in your slack channel to create a light process using a bot or just to communicate effectively","title":"Make it simple by Tagging"},{"location":"simplicity/#make-it-simple-by-consistency","text":"Having consistent methods, processes, tools, tests, dashboards, and naming, improve efficiency, predictability, enhance clarity, lower the learning curve, facilitate onboarding of new people, allow to measure success and progress easier. In the chapter \u201coperation\u201d, we will discuss the facade pattern to make operations consistent. But beyond that, more important than being consistent is the search for consistency . Why is the deployment of the infrastructure-as-code and the application-code so different? Are they fundamentally different? Searching for consistency promotes and encourages the analysis, comparison, search of common patterns, and asking the right questions, which leads to a deeper understanding, and a willingness to unify, standardize, and make things more coherent and simple. credits","title":"Make it simple by consistency"},{"location":"simplicity/#make-it-simple-by-conventions","text":"Conventions are all about User eXperience (UX), how easy and efficient the users (mainly developers) interact with processes and tools. Conventions simplify complex processes by making opinionated decisions or by reducing the degree of freedom of a system. By making decisions on behalf of developers, we keep them on the same path, thus increasing consistency. Because conventions don't have a solid and legitimate basis, it is essential to enforce them. Imagine what it would be if the convention of driving on the right were not reinforced by law? The picture below shows an example of a convention that can ensure developers don\u2019t push code to GitHub without having a valid ticket for their bug or user story.","title":"Make it simple by conventions"},{"location":"simplicity/#make-it-simple-by-making-compromises","text":"There are many similarities between \u201cmass casualty incident\u201d and DevOps (I was an EMT volunteer). In both cases, you're dealing with restricted resources and restricted personnel regarding reality. In both cases, prioritization is the key, and you need to stay focused on it. In both cases, you are making compromises and hard decisions. In the chapter \u201cit\u2019s all about agility (how to work smart)\u201d, we will try to understand these priorities. Compromise is the art of adapting the requirement to make the design simpler. Compromise is the art of negotiating with your PO or manager and making them understand the consequences of their choice in terms of time and money. If you can use an \u201cas a service\u201d solution and satisfy 80%-90% of your requirements, you have to fight for it! From my experience, even a hard requirement could become soft if you defend it well. Compromise is accepting that the word is imperfect, and you are comfortable with it.","title":"Make it simple by making compromises"}],"index":{"fieldVectors":[["title/",[0,5.24]],["text/",[1,3.938,2,3.129,3,1.528,4,2.652,5,3.525,6,3.938,7,3.217,8,2.522,9,3.938,10,3.938,11,1.299,12,2.766,13,3.938,14,3.938,15,3.938,16,3.938,17,3.938,18,1.87,19,3.938,20,3.938,21,2.437,22,2.971,23,1.964,24,3.938,25,2.591,26,2.301,27,2.766,28,2.437,29,2.591,30,3.457,31,2.066,32,0.632,33,2.178,34,2.591,35,2.971,36,0.997,37,3.217,38,3.217,39,2.066,40,4.077,41,1.7,42,2.178,43,2.301,44,2.591,45,2.766,46,3.217,47,2.971,48,4.214,49,0.684,50,2.066,51,2.178,52,3.217,53,2.178,54,3.938,55,2.437,56,3.938,57,2.066,58,3.938]],["title/#lessons-learned-as-a-devops-engineer",[1,3.005,2,1.86,3,0.908,4,1.427]],["text/#lessons-learned-as-a-devops-engineer",[2,2.481,3,1.211,4,2.428,6,4.009,7,3.275,8,2.551,9,4.009,10,4.009,11,1.322,12,2.816,13,4.009,14,4.009,15,4.009,16,4.009,17,4.009,18,1.903,19,4.009,20,4.009,21,2.481,22,3.024,23,1.999,24,4.009,25,2.637,26,2.342,27,2.816,28,2.481,29,2.637,30,3.486,31,2.103,32,0.639,33,2.217,34,2.637,35,3.024,36,1.015,37,3.275,38,3.275,39,2.103,40,4.088,41,1.731,42,2.217,43,2.342,44,2.637,45,2.816,46,3.275,47,3.024,48,4.25,49,0.696,50,2.103,51,2.217,52,3.275,53,2.217,54,4.009,55,2.481,56,4.009,57,2.103,58,4.009]],["title/operations/",[30,2.395,43,2.261]],["text/operations/",[59,6.268]],["title/processes/",[30,2.395,32,0.484]],["text/processes/",[2,0.379,3,1.012,4,1.28,5,4.068,7,0.262,8,1.209,11,1.387,12,0.225,18,0.643,21,0.545,22,0.664,23,0.97,25,0.403,26,0.792,27,0.225,28,1.09,29,1.159,30,0.198,31,1.11,32,0.681,33,1.075,34,0.403,36,1.209,37,0.262,40,0.198,41,1.218,42,1.075,43,0.358,44,0.403,45,0.225,47,0.85,48,0.462,49,0.887,50,0.592,51,1.34,52,0.262,53,0.866,55,0.839,57,0.822,60,0.891,61,0.371,62,0.371,63,1.022,64,0.5,65,1.015,66,0.698,67,0.617,68,1.287,69,0.242,70,0.371,71,0.835,72,0.592,73,1.1,74,0.371,75,0.613,76,0.788,77,1.159,78,0.462,79,0.613,80,0.462,81,0.698,82,0.579,83,1.491,84,0.881,85,1.211,86,0.287,87,1.282,88,0.287,89,0.579,90,1.211,91,1.058,92,0.371,93,1.046,94,0.659,95,0.371,96,1.022,97,0.242,98,0.85,99,1.107,100,1.309,101,1.02,102,0.719,103,1.03,104,0.85,105,0.579,106,0.32,107,0.32,108,0.664,109,1.107,110,0.742,111,0.613,112,0.462,113,0.32,114,0.719,115,0.32,116,0.32,117,0.719,118,0.242,119,0.32,120,0.548,121,0.788,122,0.262,123,0.242,124,0.85,125,0.839,126,0.32,127,0.32,128,0.32,129,0.548,130,0.262,131,0.242,132,1.496,133,0.921,134,0.462,135,0.548,136,0.32,137,0.462,138,0.32,139,0.262,140,0.548,141,0.548,142,0.548,143,0.719,144,0.839,145,0.548,146,0.32,147,1.136,148,0.969,149,0.548,150,0.97,151,0.548,152,0.548,153,0.32,154,0.32,155,0.839,156,0.32,157,0.32,158,0.792,159,0.548,160,1.1,161,0.32,162,1.148,163,0.548,164,0.792,165,1.209,166,0.32,167,0.548,168,0.915,169,0.32,170,1.09,171,0.788,172,0.32,173,0.719,174,0.937,175,0.749,176,0.242,177,0.462,178,0.548,179,0.788,180,1.773,181,0.548,182,0.548,183,0.592,184,0.881,185,1.491,186,0.32,187,0.613,188,0.43,189,0.32,190,0.32,191,0.32,192,0.32,193,0.32,194,0.32,195,0.32,196,0.32,197,0.974,198,0.43,199,1.1,200,0.32,201,0.32,202,0.262,203,0.262,204,0.915,205,0.85,206,1.02,207,0.32,208,0.548,209,0.32,210,0.891,211,0.548,212,0.915,213,0.839,214,0.462,215,0.839,216,0.32,217,0.262,218,1.022,219,0.462,220,0.97,221,0.32,222,1.136,223,0.923,224,0.619,225,0.952,226,0.548,227,1.193,228,1.362,229,0.32,230,0.969,231,1.149,232,0.32,233,0.32,234,0.548,235,0.32,236,1.193,237,1.136,238,1.258,239,1.575,240,0.619,241,0.719,242,0.792,243,0.891,244,0.187,245,1.03,246,0.32,247,0.676,248,0.32,249,0.32,250,0.32,251,0.579,252,0.32,253,0.579,254,0.619,255,0.242,256,0.32,257,0.957,258,1.33,259,0.788,260,0.462,261,1.282,262,0.548,263,1.159,264,0.548,265,0.548,266,0.32,267,0.548,268,0.32,269,0.462,270,0.891,271,0.839,272,0.32,273,0.719,274,0.32,275,0.974,276,0.32,277,1.03,278,0.952,279,0.619,280,0.32,281,0.548,282,0.32,283,0.788,284,1.6,285,1.359,286,0.548,287,0.792,288,0.698,289,0.969,290,0.225,291,0.262,292,1.447,293,0.43,294,0.719,295,1.485,296,0.788,297,1.588,298,0.262,299,0.839,300,0.32,301,1.238,302,0.619,303,0.32,304,0.548,305,0.921,306,0.719,307,0.719,308,0.719,309,1.625,310,0.32,311,0.969,312,1.587,313,1.022,314,0.32,315,1.933,316,0.719,317,0.32,318,1.609,319,0.85,320,0.85,321,0.749,322,0.462,323,1.465,324,1.48,325,0.548,326,0.613,327,0.619,328,0.403,329,0.462,330,0.32,331,0.969,332,0.792,333,0.32,334,0.32,335,0.915,336,0.462,337,0.462,338,0.548,339,0.742,340,0.742,341,0.548,342,0.32,343,1.345,344,1.09,345,1.1,346,0.613,347,0.974,348,1.03,349,0.788,350,0.839,351,0.32,352,0.744,353,0.462,354,0.619,355,0.32,356,0.32,357,0.924,358,0.548,359,1.292,360,0.719,361,1.485,362,1.075,363,0.937,364,1.407,365,0.915,366,0.32,367,0.32,368,1.009,369,0.839,370,0.548,371,1.345,372,0.548,373,0.719,374,0.32,375,0.32,376,1.09,377,0.709,378,0.262,379,0.915,380,0.719,381,0.548,382,0.85,383,0.891,384,0.32,385,1.03,386,0.262,387,0.32,388,0.43,389,0.262,390,0.32,391,0.548,392,0.613,393,0.32,394,0.792,395,0.262,396,0.262,397,0.579,398,0.32,399,0.548,400,0.548,401,0.32,402,1.279,403,0.462,404,0.969,405,0.548,406,0.548,407,0.32,408,0.462,409,0.32,410,0.262,411,0.921,412,1.03,413,0.548,414,0.43,415,0.619,416,0.32,417,0.32,418,0.792,419,0.32,420,0.548,421,0.548,422,0.43,423,0.548,424,0.32,425,0.32,426,0.242,427,0.262,428,0.5,429,0.548,430,0.613,431,0.613,432,0.952,433,0.613,434,0.921,435,0.788,436,0.698,437,0.32,438,0.32,439,0.32,440,0.32,441,0.262,442,0.32,443,0.32,444,0.32,445,0.548,446,1.009,447,0.85,448,0.548,449,1.075,450,0.742,451,0.262,452,1.03,453,0.85,454,0.32,455,0.32,456,0.32,457,0.613,458,0.32,459,0.792,460,0.548,461,0.32,462,0.32,463,0.462,464,0.659,465,1.193,466,0.262,467,0.32,468,0.548,469,0.262,470,0.32,471,0.891,472,0.32,473,0.788,474,0.548,475,0.242,476,0.548,477,0.32,478,1.16,479,0.262,480,0.792,481,0.32,482,0.32,483,0.579,484,1.009,485,0.262,486,0.915,487,1.1,488,0.788,489,0.32,490,0.85,491,0.85,492,0.85,493,0.32,494,0.403,495,0.32,496,0.32,497,0.32,498,0.32,499,1.745,500,0.719,501,0.32,502,0.579,503,0.32,504,0.32,505,0.613,506,0.262,507,0.545,508,0.719,509,0.32,510,1.181,511,0.5,512,0.32,513,0.32,514,0.262,515,0.32,516,0.548,517,0.32,518,0.32,519,0.32,520,0.32,521,0.548,522,0.32,523,0.32,524,0.32,525,0.32,526,0.32,527,0.742,528,0.719,529,0.32,530,0.262,531,0.32,532,0.32,533,0.32,534,0.32,535,0.32,536,0.788,537,0.32,538,0.262,539,0.462,540,0.85,541,0.32,542,0.548,543,0.32,544,0.32,545,0.462,546,0.921,547,0.32,548,0.719,549,0.85,550,1.181,551,0.891,552,0.719,553,2.115,554,0.719,555,0.719,556,1.366,557,0.43,558,0.548,559,0.32,560,0.262,561,0.664,562,0.32,563,0.548,564,0.548,565,0.242,566,0.548,567,0.548,568,0.664,569,0.613,570,0.32,571,0.32,572,0.32,573,0.32,574,0.32,575,0.5,576,0.32,577,0.719,578,0.32,579,0.613,580,0.32,581,0.462,582,0.32,583,0.32,584,0.613,585,0.32,586,0.32,587,0.32,588,0.32,589,0.548,590,0.742,591,0.32,592,0.32,593,0.32,594,0.32,595,0.32,596,0.32,597,0.262,598,0.613,599,0.32,600,0.32,601,0.32,602,0.242,603,0.788,604,0.262,605,0.262,606,0.32,607,0.32,608,0.613,609,0.719,610,0.32,611,0.32,612,0.32,613,0.32,614,1.107,615,0.619,616,0.462,617,0.788,618,0.613,619,0.262,620,1.107,621,0.613,622,0.262,623,0.881,624,0.548,625,0.32,626,0.32,627,1.022,628,0.32,629,0.613,630,0.548,631,0.32,632,0.32,633,0.32,634,0.32,635,0.548,636,0.462,637,0.32,638,0.32,639,0.32,640,0.32,641,0.462,642,0.32,643,0.788,644,1.181,645,0.462,646,0.32,647,0.32,648,0.32,649,0.32,650,0.262,651,0.619,652,0.32,653,0.32,654,0.32,655,0.659,656,0.742,657,0.548,658,0.32,659,0.262,660,0.32,661,0.32,662,0.881,663,0.32,664,0.32,665,0.242,666,0.262,667,0.548,668,0.32,669,0.32,670,0.32,671,0.32,672,0.32,673,0.242,674,0.462,675,0.262,676,0.548,677,0.32,678,0.32,679,0.548,680,0.32,681,0.548,682,0.548,683,1.279,684,0.788,685,0.548,686,0.781,687,0.32,688,0.548,689,0.32,690,0.32,691,0.32,692,0.262,693,0.32,694,0.262,695,0.32,696,0.32,697,0.262,698,0.619,699,0.839,700,0.32,701,0.32,702,0.548,703,0.242,704,0.168,705,0.613,706,0.548,707,0.32,708,0.548,709,0.664,710,0.32,711,0.613,712,1.762,713,0.32,714,1.577,715,0.613,716,0.32,717,0.719,718,0.32,719,0.664,720,0.613,721,0.32,722,0.891,723,0.262,724,0.32,725,0.32,726,0.32,727,0.719,728,0.32,729,0.974,730,0.32,731,0.462,732,0.32,733,0.32,734,0.32,735,0.262,736,0.32,737,0.32,738,0.262,739,0.32,740,1.107,741,1.022,742,0.32,743,0.32,744,0.32,745,0.32,746,0.32,747,0.545,748,0.548,749,0.85,750,0.5,751,0.548,752,0.32,753,0.32,754,0.32,755,0.32,756,0.32,757,0.32,758,0.32,759,0.32,760,0.32,761,0.85,762,0.32,763,0.548,764,0.32,765,0.32,766,0.548,767,0.619,768,2.169,769,0.891,770,0.32,771,0.32,772,0.43,773,0.32,774,0.262,775,0.32,776,0.32,777,0.32,778,1.5,779,0.32,780,0.32,781,0.32,782,0.262,783,0.262,784,0.32,785,0.32,786,0.32,787,0.32,788,0.262,789,0.32,790,0.262,791,0.262,792,0.32,793,0.262,794,0.32,795,0.881,796,0.32,797,0.32,798,0.32,799,0.32,800,0.32,801,0.32,802,0.32,803,0.32,804,0.32,805,0.32,806,0.32,807,0.32,808,0.548,809,0.32,810,0.548,811,0.32,812,0.32,813,0.613,814,0.613,815,0.32,816,0.32,817,0.32,818,0.32,819,0.32,820,0.32,821,0.32,822,0.548,823,0.32,824,0.613,825,0.32,826,0.32,827,0.32,828,0.32,829,0.32,830,0.32,831,0.32,832,0.32,833,0.32,834,0.32,835,0.32,836,0.32,837,0.613,838,0.32,839,0.262,840,0.32,841,0.32,842,0.32,843,0.262,844,1.03,845,0.32,846,0.32,847,0.462,848,0.32,849,0.32,850,0.613,851,0.32,852,0.788,853,0.5,854,0.32,855,0.32,856,0.262,857,0.32,858,0.32,859,0.548,860,0.881,861,0.613,862,0.32,863,0.548,864,0.32,865,0.262,866,0.32,867,0.548,868,0.32,869,0.32,870,0.32,871,0.262,872,0.32,873,0.262,874,0.32,875,0.32,876,0.5,877,0.32,878,0.32,879,0.32,880,0.613,881,0.613,882,0.32,883,0.32,884,1.238,885,0.262,886,0.548,887,0.32,888,0.32,889,0.262,890,0.32,891,0.613,892,0.32,893,0.32,894,0.462,895,0.262,896,0.32,897,0.32,898,0.32,899,0.32,900,0.32,901,0.32,902,0.32,903,0.32,904,0.32,905,0.32,906,0.462,907,0.262,908,0.32,909,0.32,910,0.32,911,0.32,912,0.613,913,0.262,914,0.32,915,0.262,916,0.881,917,0.32,918,0.262,919,1.127,920,1.944,921,1.566,922,0.32,923,0.262,924,0.262,925,0.548,926,0.32,927,0.32,928,0.32,929,0.613,930,0.562,931,1.439,932,0.548,933,0.32,934,0.32,935,0.262,936,0.788,937,0.32,938,1.595,939,0.32,940,0.32,941,0.32,942,0.613,943,0.5,944,0.548,945,0.262,946,0.32,947,0.462,948,0.32,949,0.242,950,0.881,951,0.719,952,0.32,953,2.036,954,0.32,955,0.32,956,0.242,957,0.225,958,1.577,959,0.32,960,0.32,961,0.548,962,0.225,963,0.32,964,0.262,965,0.613,966,2.295,967,1.893,968,0.32,969,0.32,970,0.242,971,0.32,972,0.262,973,0.32,974,0.32,975,0.32,976,1.213,977,1.279,978,0.32,979,0.788,980,0.548,981,0.32,982,0.548,983,0.32,984,0.462,985,0.462,986,0.32,987,0.32,988,0.579,989,0.32,990,0.32,991,0.32,992,0.32,993,0.32,994,0.32,995,0.32,996,0.788,997,0.32,998,0.32,999,0.792,1000,1.439,1001,0.262,1002,0.32,1003,0.32,1004,0.242,1005,0.32,1006,0.788,1007,0.32,1008,0.32,1009,0.32,1010,0.32,1011,0.462,1012,0.32,1013,0.262,1014,0.32,1015,0.32,1016,0.32,1017,0.613,1018,0.32,1019,0.262,1020,0.613,1021,0.32,1022,0.548,1023,0.32,1024,0.32,1025,0.32,1026,0.32,1027,0.32,1028,0.262,1029,0.32,1030,0.32,1031,0.32,1032,0.262,1033,0.262,1034,0.32,1035,0.5,1036,0.32,1037,0.32,1038,0.32,1039,0.32,1040,0.262,1041,0.225,1042,0.32,1043,0.32,1044,0.262,1045,0.242,1046,0.262,1047,0.32,1048,0.32]],["title/processes/#make-your-processes-as-first-citizen",[32,0.376,89,0.376,101,1.577,102,2.455]],["text/processes/#make-your-processes-as-first-citizen",[8,2.823,31,2.477,32,0.708,36,1.433,71,1.627,96,3.562,101,2.477,102,3.857,103,3.106,104,3.562,105,3.106,106,4.721,107,4.721,108,3.562,109,3.857,110,3.106,111,5.66,112,4.27,113,4.721,114,3.857,115,4.721,116,4.721,117,3.857,118,3.562,119,4.721,120,4.226]],["title/processes/#rca-processes-relationship",[32,0.376,121,2.69,123,2.267,1049,3.005]],["text/processes/#rca-processes-relationship",[11,1.525,32,0.578,41,1.996,42,2.557,66,2.861,73,3.247,94,2.701,121,5.003,124,3.488,125,3.459,126,4.623,127,4.623,128,4.623,129,4.139,130,3.777,131,3.488,132,3.041,133,4.566,134,3.488,135,4.139,136,4.623,137,3.488,138,4.623,139,3.777,140,4.139,141,4.139,142,4.139,143,3.777,144,2.861,145,4.139,146,4.623,147,2.701,148,2.861]],["title/processes/#devops-as-a-business-analyst-with-many-technical-skills",[3,0.742,31,1.289,149,2.199,150,1.225,151,2.199,152,2.199]],["text/processes/#devops-as-a-business-analyst-with-many-technical-skills",[3,1.659,4,2.608,8,2.241,11,1.482,31,3.113,32,0.562,33,2.485,51,2.485,137,3.39,147,2.625,149,4.022,151,4.022,152,4.022,153,4.493,154,4.493,155,3.399,156,4.493,157,4.493,158,3.156,159,4.022,160,3.156,161,4.493,162,1.088,163,4.022,164,2.625,165,2.241,166,4.493,167,4.022,168,2.625,169,4.493,170,2.78,171,4.022,172,4.493,173,3.67,174,1.852,175,2.485,176,3.39,177,3.39]],["title/processes/#bridging-the-gap-between-mentalities",[173,2.455,174,1.239,178,2.69,179,2.69]],["text/processes/#bridging-the-gap-between-mentalities",[3,1.31,11,1.43,18,2.059,32,0.672,36,1.098,49,0.753,53,2.398,60,2.852,68,1.43,87,1.708,91,1.562,100,2.683,108,4.054,117,3.542,171,4.81,173,3.542,174,1.788,178,3.881,179,4.81,180,3.535,181,3.881,182,3.881,183,2.275,184,5.839,185,2.972,186,4.336,187,5.373,188,3.046,189,4.336,190,4.336,191,4.336,192,4.336,193,4.336,194,4.336,195,4.336,196,4.336,197,2.398,198,3.046,199,3.046,200,4.336,201,4.336,202,3.542,203,3.542]],["title/processes/#tools-are-not-the-way-to-talk-about-processes",[32,0.376,91,1.083,204,1.756,205,2.267]],["text/processes/#tools-are-not-the-way-to-talk-about-processes",[18,2.28,32,0.6,89,0.763,90,1.98,93,2.073,150,2.395,177,3.623,204,3.34,206,2.52,207,4.802,208,4.299,209,4.802,210,3.159,211,4.299,212,3.34,213,2.972,214,3.623,215,3.538,216,4.802,217,3.923,218,3.623,219,3.623]],["title/processes/#understand-requirements",[212,2.261,220,1.93]],["text/processes/#understand-requirements",[32,0.781,36,1.175,49,0.806,89,0.58,90,2.31,197,2.568,212,3.273,220,2.315,221,4.642,222,3.273,223,2.857,224,3.261,225,3.261,226,4.156,227,2.436,228,2.004,229,4.642,230,2.873,231,1.749,232,4.642,233,4.642,234,4.156,235,4.642,236,2.436,237,2.712,238,2.568,239,2.712]],["title/processes/#performance-indicators",[238,2.14,239,2.261]],["text/processes/#performance-indicators",[18,2.116,28,3.382,31,2.339,32,0.771,94,2.604,148,2.758,160,3.131,205,3.363,223,2.116,230,2.758,238,3.023,239,3.454,240,3.131,241,3.641,242,3.131,243,2.932,244,2.604,245,2.932,246,4.457,247,2.726,248,4.457,249,4.457,250,4.457,251,2.932,252,4.457,253,2.932,254,3.131,255,3.363,256,4.457,257,2.017,258,2.017,259,4.893,260,3.363,261,2.153,262,3.99]],["title/processes/#wrong-mindset",[263,2.546,264,3.464]],["text/processes/#wrong-mindset",[3,1.233,28,3.516,32,0.51,33,2.258,36,1.034,48,3.08,63,3.08,67,1.608,68,1.346,83,2.258,87,1.608,93,1.762,99,1.762,110,2.685,124,3.08,125,2.526,132,2.685,133,3.335,135,3.654,144,2.526,147,2.385,150,2.036,197,2.258,206,2.142,237,2.385,238,3.142,239,3.319,259,3.654,260,3.08,261,2.238,263,2.685,264,3.654,265,3.654,266,4.082,267,3.654,268,4.082,269,3.08,270,3.404,271,2.526,272,4.082,273,3.335,274,4.082,275,2.258,276,4.082,277,2.685,278,2.867,279,2.867,280,4.082,281,3.654,282,4.082,283,3.654,284,2.142,285,1.081,286,3.654,287,2.867,288,2.526,289,2.526,290,2.867,291,3.335]],["title/processes/#process-1-from-code-to-development-environments",[32,0.338,36,0.684,41,1.167,49,0.469,292,0.748]],["text/processes/#process-1-from-code-to-development-environments",[11,1.346,21,2.526,23,2.036,32,0.747,36,1.594,49,1.037,63,3.08,68,1.346,76,3.654,83,2.258,89,0.647,99,1.762,103,2.685,165,2.036,183,2.715,223,1.938,230,3.202,275,2.258,284,2.142,285,1.37,292,1.653,293,2.867,294,3.335,295,1.762,296,3.654,297,2.038,298,3.335,299,2.526,300,4.082,301,2.867,302,2.867,303,4.082,304,3.654,305,4.227,306,3.335,307,3.335,308,3.335,309,2.258,310,4.082,311,2.526,312,3.202,313,3.08,314,4.082,315,2.685,316,3.335,317,4.082,318,1.683]],["title/processes/#merge-to-master-point-of-no-difficult-return",[168,1.579,301,1.899,312,1.673,319,2.039,320,2.039]],["text/processes/#merge-to-master-point-of-no-difficult-return",[11,1.936,18,2.083,32,0.548,41,1.894,49,0.762,57,2.302,91,1.58,134,3.31,162,1.062,164,2.563,170,2.715,211,3.927,213,2.715,215,2.715,261,2.132,301,3.081,306,3.584,312,2.715,318,2.231,319,3.31,321,2.426,322,3.31,323,2.188,324,2.84,325,3.927,326,5.412,327,3.081,328,2.886,329,3.31,330,4.387,331,2.715,332,3.081,333,4.387,334,4.387,335,3.162,336,3.31,337,3.31,338,3.927,339,2.886,340,2.886,341,3.927,342,4.387]],["title/processes/#process-1-feature-branch-as-the-source-of-truth",[32,0.307,41,1.06,318,1.013,343,1.289,344,1.52,345,1.725]],["text/processes/#process-1-feature-branch-as-the-source-of-truth",[2,2.276,22,2.775,23,1.835,26,2.826,29,2.42,32,0.718,34,2.42,36,1.369,41,2.089,49,0.84,67,1.449,68,1.596,85,1.517,89,0.605,91,1.325,93,1.588,99,1.588,162,1.482,227,1.93,231,1.385,234,3.293,261,1.449,265,3.293,285,0.974,292,1.496,295,1.588,311,2.276,318,1.994,321,2.034,343,1.93,344,2.276,345,2.584,346,4.838,347,2.034,348,2.42,349,4.331,350,2.994,351,3.678,352,1.746,353,3.65,354,2.584,355,3.678,356,3.678,357,1.93,358,3.293,359,1.161,360,3.005,361,3.398,362,2.034,363,1.517,364,2.994,365,2.149,366,3.678,367,3.678,368,3.293,369,2.276,370,3.293,371,1.93,372,3.293,373,3.005,374,3.678,375,3.678,376,2.276,377,1.665,378,3.005,379,2.149,380,3.005,381,3.293,382,2.775,383,2.42,384,3.678,385,2.42,386,3.005,387,3.678]],["title/processes/#dynamic-environment-as-a-new-paradigm",[162,0.727,292,0.831,388,2.111,389,2.455]],["text/processes/#dynamic-environment-as-a-new-paradigm",[3,1.19,36,1.28,41,1.7,42,2.178,44,2.591,49,0.684,57,2.066,76,3.525,87,1.551,91,1.822,100,3.457,103,2.591,120,3.525,143,3.217,162,1.224,174,1.624,212,2.301,231,1.905,236,2.066,247,1.964,273,3.217,275,2.178,292,1.687,295,1.7,309,2.178,318,2.085,331,2.437,340,2.591,343,2.066,347,2.178,364,2.437,388,2.766,390,3.938,391,3.525,392,5.057,393,3.938,394,2.301,395,3.217,396,3.217,397,2.591,398,3.938,399,3.525,400,3.525,401,3.938,402,3.327,403,2.971,404,2.437,405,3.525,406,3.525,407,3.938,408,2.971,409,3.938,410,3.217,411,3.217,412,2.591,413,3.525,414,2.766,415,2.766,416,3.938,417,3.938,418,2.766,419,3.938,420,3.525,421,3.525,422,2.766]],["title/processes/#process-1-environment-creation-easy-setup",[32,0.307,41,1.06,292,0.68,347,1.358,423,2.199,424,2.456]],["text/processes/#process-1-environment-creation-easy-setup",[23,2.036,32,0.51,36,1.31,41,1.762,52,3.335,87,2.038,89,0.51,141,3.654,162,1.252,225,2.867,231,1.949,257,2.341,261,1.608,278,3.99,279,2.867,292,1.705,295,1.762,297,1.608,305,3.335,311,3.202,318,2.133,335,2.385,340,2.685,343,2.142,347,2.258,350,2.526,359,1.289,361,2.867,371,2.142,411,3.335,423,3.654,425,4.082,426,3.08,427,3.335,428,4.227,429,3.654,430,5.174,431,5.174,432,3.634,433,5.174,434,4.227,435,3.654,436,2.526,437,4.082,438,4.082,439,4.082,440,4.082,441,3.335,442,4.082]],["title/processes/#model-extension-to-include-all-kinds-of-code",[49,0.469,228,1.167,418,1.899,443,2.703,444,2.703]],["text/processes/#model-extension-to-include-all-kinds-of-code",[29,3.319,36,1.277,41,1.694,42,2.79,44,2.581,49,0.968,68,1.294,77,2.581,100,3.122,105,3.319,162,1.35,227,2.059,228,1.694,231,1.9,243,2.581,258,1.776,278,2.756,279,2.756,292,1.629,295,2.178,297,1.546,312,3.451,318,2.511,324,2.926,343,2.647,359,1.968,369,2.428,376,2.428,377,1.776,420,3.513,429,3.513,435,4.517,445,3.513,446,4.517,447,2.96,448,3.513,449,2.17,450,2.581,451,3.206,452,2.581,453,2.96,454,3.924,455,3.924,456,3.924,457,5.045,458,3.924,459,3.544]],["title/processes/#make-your-codes-equal",[49,0.588,89,0.423,460,3.028]],["text/processes/#make-your-codes-equal",[36,1.461,49,1.103,65,1.99,67,1.663,72,2.215,91,1.521,100,3.27,170,2.612,174,1.74,228,1.822,236,2.773,247,2.105,277,2.777,285,1.117,292,1.168,295,2.282,297,2.452,306,3.448,318,1.74,324,2.215,343,2.215,360,3.448,362,2.334,385,2.777,394,2.466,452,2.777,460,3.779,461,4.221,462,4.221,463,3.184,464,2.466,465,2.215,466,3.448,467,4.221,468,3.779,469,3.448,470,4.221,471,3.476,472,4.221,473,3.779,474,3.779,475,3.184,476,3.779]],["title/processes/#design-your-architecture-up-to-your-ambition",[50,1.577,90,1.239,348,1.977,477,3.005]],["text/processes/#design-your-architecture-up-to-your-ambition",[29,2.98,50,2.896,89,0.744,114,3.7,165,2.259,198,3.181,236,2.377,247,2.259,258,2.05,288,2.803,292,1.527,301,4.182,318,2.454,343,2.377,344,2.803,345,3.181,347,2.505,364,2.803,371,2.377,377,2.05,382,3.417,414,3.181,471,2.98,478,2.498,479,3.7,480,3.181,481,4.529,482,4.529,483,2.98,484,4.055,485,3.7,486,2.646]],["title/processes/#process-2-the-release-management-process",[32,0.489,42,1.495,323,1.348,363,1.114]],["text/processes/#process-2-the-release-management-process",[3,1.024,4,1.609,11,1.117,18,1.609,26,1.979,31,1.778,32,0.695,57,1.778,68,1.511,87,1.335,98,3.455,99,1.977,162,1.448,165,1.69,174,1.397,175,1.874,185,1.874,218,3.455,220,1.69,227,1.778,230,2.097,231,1.276,237,1.979,239,1.979,253,2.229,261,1.335,270,2.229,287,2.38,289,2.097,292,0.937,295,1.463,297,1.335,312,2.097,318,1.397,323,1.69,339,2.229,359,1.446,363,1.397,364,3.592,365,1.979,376,2.097,399,3.033,404,2.097,418,3.217,436,2.097,447,2.556,450,2.229,452,2.229,453,2.556,464,1.979,486,1.979,487,2.38,488,3.033,489,3.388,490,2.556,491,2.556,492,2.556,493,3.388,494,2.229,495,3.388,496,3.388,497,3.388,498,3.388,499,2.533,500,2.768,501,3.388,502,2.229,503,3.388,504,3.388,505,4.579,506,2.768,507,2.097,508,2.768,509,3.388,510,2.556,511,3.741,512,3.388,513,3.388,514,2.768,515,3.388,516,3.033,517,3.388,518,3.388,519,3.388,520,3.388,521,3.033,522,3.388,523,3.388,524,3.388,525,3.388,526,3.388,527,2.229,528,2.768,529,3.388,530,2.768,531,3.388,532,3.388,533,3.388,534,3.388,535,3.388,536,3.033,537,3.388,538,2.768]],["title/processes/#working",[68,1.491]],["text/processes/#working",[3,1.22,8,2.014,11,1.332,65,1.935,68,1.962,83,2.233,89,0.505,91,1.455,98,3.046,158,3.609,174,1.665,206,2.119,222,2.359,231,1.521,240,2.836,254,2.836,258,1.827,273,3.299,285,1.575,289,2.499,292,1.117,295,1.743,297,1.591,299,2.499,313,3.046,359,1.275,412,2.656,478,1.827,499,2.233,527,2.656,539,3.046,540,3.046,541,4.038,542,3.615,543,4.038,544,4.038,545,3.046,546,4.198,547,4.038,548,3.299,549,3.046,550,3.046,551,3.38,552,3.299,553,3.122,554,3.299,555,3.299,556,2.836,557,2.836,558,3.615,559,4.038,560,3.299,561,3.046,562,4.038,563,3.615,564,3.615,565,3.046,566,3.615]],["title/processes/#healthy",[567,4.047]],["text/processes/#healthy",[3,1.173,48,2.93,51,2.148,78,2.93,82,2.554,89,0.485,114,3.172,144,2.403,155,2.403,168,2.928,197,2.148,218,2.93,261,1.53,297,1.53,321,2.148,352,1.844,362,2.772,382,2.93,406,3.476,465,2.038,487,2.728,502,2.554,516,3.476,556,3.52,567,3.476,568,2.93,569,5.011,570,3.883,571,3.883,572,3.883,573,3.883,574,3.883,575,4.094,576,3.883,577,3.172,578,3.883,579,5.011,580,3.883,581,2.93,582,3.883,583,3.883,584,5.011,585,3.883,586,3.883,587,3.883,588,3.883,589,3.476,590,3.297,591,3.883,592,3.883,593,3.883,594,3.883,595,3.883,596,3.883,597,3.172,598,5.011,599,3.883,600,3.883,601,3.883,602,2.93,603,3.476,604,3.172,605,3.172,606,3.883,607,3.883,608,5.011,609,3.172,610,3.883,611,3.883,612,3.883,613,3.883,614,3.172]],["title/processes/#stable",[615,3.175]],["text/processes/#stable",[11,1.263,23,1.91,49,0.863,68,1.638,71,1.32,82,2.519,84,3.83,85,1.579,87,1.957,89,0.479,99,1.654,162,0.927,197,2.118,231,1.442,238,2.118,239,2.902,240,2.69,241,3.129,245,2.519,258,1.733,261,2.298,270,2.519,271,2.37,285,1.459,292,1.06,302,2.69,347,2.118,352,1.818,357,2.606,359,1.209,365,2.237,379,2.237,405,3.428,499,2.118,546,3.129,552,3.129,553,2.606,568,3.747,615,2.69,616,2.889,617,4.446,618,4.967,619,3.129,620,4.058,621,4.967,622,3.129,623,5.512,624,3.428,625,3.83,626,3.83,627,2.889,628,3.83,629,4.967,630,3.428,631,3.83,632,3.83,633,3.83,634,3.83,635,3.428,636,2.889,637,3.83,638,3.83,639,3.83,640,3.83,641,2.889,642,3.83,643,3.428]],["title/processes/#resilience",[644,3.41]],["text/processes/#resilience",[3,1.059,4,2.675,8,1.748,11,1.545,23,2.337,32,0.438,41,1.513,42,1.938,51,1.938,53,1.938,57,1.839,66,2.169,67,1.381,68,1.545,83,3.116,99,1.513,103,2.306,125,2.169,132,2.306,147,2.048,204,2.048,206,2.458,220,1.748,237,2.048,245,3.082,285,0.928,292,0.97,316,2.863,320,2.644,322,2.644,328,2.306,336,2.644,344,2.169,352,1.664,358,3.138,359,1.666,365,2.048,377,1.586,382,2.644,394,2.048,404,2.169,415,2.462,450,2.306,510,2.644,528,2.863,548,2.863,549,2.644,551,2.306,552,2.863,554,2.863,555,2.863,615,2.462,644,4.43,645,2.644,646,3.505,647,3.505,648,3.505,649,3.505,650,2.863,651,3.291,652,3.505,653,3.505,654,3.505,655,3.083,656,2.306,657,3.138,658,3.505,659,2.863,660,3.505,661,3.505,662,5.278,663,3.505,664,3.505,665,2.644,666,2.863,667,3.138,668,3.505,669,3.505,670,3.505,671,3.505,672,3.505,673,2.644,674,2.644,675,2.863,676,3.138,677,3.505,678,3.505,679,3.138,680,3.505,681,3.138,682,3.138]],["title/processes/#why-companies-fail-in-their-e2e-strategy",[385,1.977,553,1.577,683,1.977,684,2.69]],["text/processes/#why-companies-fail-in-their-e2e-strategy",[36,1.446,57,1.905,66,2.247,68,1.582,89,0.454,90,1.497,150,1.811,155,2.247,160,2.55,162,0.879,165,2.392,170,2.247,174,1.497,183,1.905,185,2.652,206,1.905,208,3.25,213,2.247,222,2.802,239,2.121,243,2.388,245,3.155,271,2.247,275,2.008,284,2.818,285,1.647,297,2.116,299,2.247,302,2.55,305,2.966,321,2.008,323,1.811,324,1.905,335,2.121,348,2.388,350,2.247,363,1.497,377,1.643,379,2.121,381,3.25,404,2.247,412,2.388,471,2.388,478,2.17,483,2.388,540,2.739,545,2.739,549,2.739,553,2.818,555,2.966,558,3.25,627,3.618,683,2.388,684,4.293,685,3.25,686,1.811,687,3.63,688,3.25,689,3.63,690,3.63,691,3.63,692,2.966,693,3.63,694,2.966,695,3.63,696,3.63,697,2.966,698,2.55,699,2.247,700,3.63,701,3.63,702,3.25,703,2.739,704,1.905,705,4.796,706,3.25,707,3.63,708,3.25]],["title/processes/#there-is-no-replacement-for-the-e2e-test",[285,0.896,553,1.775,709,2.552]],["text/processes/#there-is-no-replacement-for-the-e2e-test",[68,1.246,71,1.302,89,0.616,90,1.558,93,2.364,94,2.207,96,2.85,104,2.85,162,0.915,199,2.654,220,1.884,225,2.654,228,1.631,238,2.089,242,2.654,263,2.485,284,2.583,285,1.633,299,2.338,327,2.654,380,3.086,383,2.485,412,2.485,436,2.338,449,2.089,453,2.85,486,2.207,491,2.85,492,2.85,553,2.583,556,3.847,577,3.086,589,3.382,609,3.086,683,2.485,709,3.714,710,3.778,711,4.923,712,6.283,713,3.778,714,3.382,715,4.923,716,3.778,717,4.474,718,3.778,719,2.85,720,4.923,721,3.778,722,2.485,723,3.086,724,3.778,725,3.778,726,3.778,727,3.086,728,3.778,729,2.089,730,3.778,731,2.85,732,3.778,733,3.778,734,3.778,735,3.086,736,3.778,737,3.778,738,3.086,739,3.778]],["title/processes/#getting-to-the-root-of-the-problem",[124,2.552,175,1.871,307,2.764]],["text/processes/#getting-to-the-root-of-the-problem",[23,2.014,32,0.505,49,1.067,53,3.126,75,4.038,83,2.233,89,0.642,90,2.118,99,1.743,103,2.656,124,3.046,125,2.499,147,2.359,155,2.499,160,2.836,164,2.359,206,2.119,223,1.917,257,2.325,262,3.615,263,2.656,283,4.6,285,1.626,297,1.591,327,2.836,354,2.836,385,2.656,459,2.836,486,2.359,507,2.499,539,3.046,553,3.295,620,4.198,651,2.836,731,3.046,740,4.617,741,3.877,742,4.038,743,4.038,744,4.038,745,4.038,746,4.038,747,2.499,748,3.615,749,3.046,750,4.198,751,3.615]],["title/processes/#making-testable-code",[49,0.588,89,0.423,740,2.764]],["text/processes/#making-testable-code",[25,2.537,36,1.263,49,0.96,73,2.709,85,1.59,89,0.624,90,2.411,93,1.665,99,1.665,185,3.234,197,2.759,199,3.504,223,1.831,227,2.023,231,1.452,242,3.504,254,2.709,285,1.726,313,2.909,321,2.133,339,2.537,343,2.618,349,3.452,354,2.709,436,2.387,445,3.452,465,2.023,478,2.503,483,2.537,500,3.15,553,3.068,557,2.709,564,3.452,617,3.452,645,2.909,674,2.909,722,2.537,727,3.15,740,3.15,747,2.387,752,3.856,753,3.856,754,3.856,755,3.856,756,3.856,757,3.856,758,3.856,759,3.856,760,3.856,761,4.172,762,3.856,763,3.452,764,3.856,765,3.856]],["title/processes/#making-e2e-tests-affordable-removing-the-ui-layer",[89,0.281,285,0.596,553,1.181,766,2.015,767,1.581,768,2.015,769,1.48]],["text/processes/#making-e2e-tests-affordable-removing-the-ui-layer",[64,3.275,71,1.382,83,2.217,89,0.639,91,1.444,101,2.684,102,3.275,188,2.816,210,3.365,214,3.024,215,2.481,218,3.024,223,1.903,225,2.816,231,1.51,258,1.814,275,2.217,277,2.637,285,1.659,331,2.481,357,2.684,359,1.615,362,2.217,465,2.684,490,4.25,551,3.365,553,3.113,554,3.275,685,3.589,686,1.999,708,3.589,749,4.25,766,3.589,767,2.816,768,5.876,769,3.365,770,4.009,771,4.009,772,2.816,773,4.009,774,3.275,775,4.009,776,4.009,777,4.009]],["title/processes/#code-review-as-the-last-bastion-of-defense",[49,0.469,237,1.579,682,2.42,778,1.673,779,2.703]],["text/processes/#code-review-as-the-last-bastion-of-defense",[11,1.356,36,1.041,49,0.903,63,3.102,68,1.715,87,1.62,91,1.873,104,3.102,158,2.888,162,0.995,164,2.402,165,2.593,168,2.402,170,2.545,185,2.274,204,2.402,205,3.102,206,2.158,269,3.102,285,1.376,292,1.438,308,3.359,309,2.875,312,2.545,318,2.143,319,3.102,320,3.102,332,3.651,335,3.037,343,2.158,394,2.402,397,2.705,471,2.705,556,2.888,624,3.681,627,3.102,630,3.681,643,4.653,679,3.681,686,2.051,778,2.545,780,4.112,781,4.112,782,3.359,783,3.359,784,4.112,785,4.112,786,4.112,787,4.112,788,3.359,789,4.112,790,3.359,791,3.359,792,4.112,793,3.359]],["title/processes/#code-review-starts-with-yourself",[49,0.522,227,1.577,778,1.86,794,3.005]],["text/processes/#code-review-starts-with-yourself",[7,3.206,8,1.957,43,2.293,49,0.876,51,2.17,90,1.618,91,1.414,96,2.96,150,1.957,163,3.513,170,2.428,181,3.513,213,2.428,228,1.694,270,2.581,281,3.513,304,3.513,320,2.96,332,2.756,359,1.239,412,2.581,449,2.17,468,3.513,508,3.206,549,2.96,577,3.206,590,2.581,636,2.96,641,2.96,667,3.513,729,2.17,778,2.428,795,5.577,796,3.924,797,3.924,798,3.924,799,3.924,800,3.924,801,3.924,802,3.924,803,3.924,804,3.924,805,3.924,806,3.924,807,3.924,808,3.513,809,3.924,810,3.513,811,3.924,812,3.924,813,5.045,814,5.045,815,3.924,816,3.924,817,3.924,818,3.924,819,3.924,820,3.924,821,3.924,822,3.513,823,3.924,824,5.045,825,3.924,826,3.924,827,3.924,828,3.924,829,3.924,830,3.924,831,3.924,832,3.924,833,3.924,834,3.924,835,3.924]],["title/processes/#improving-the-code-review-process",[32,0.376,33,1.662,49,0.522,778,1.86]],["text/processes/#improving-the-code-review-process",[32,0.501,33,3.281,49,0.978,63,3.024,73,2.816,81,2.481,85,2.109,91,1.444,101,2.103,109,3.275,147,2.342,162,0.97,185,3.115,210,2.637,237,2.342,238,2.217,258,1.814,261,2.015,263,2.637,277,2.637,288,2.481,363,1.653,391,3.589,394,2.342,447,3.024,484,5.043,548,3.275,603,4.579,681,3.589,778,3.793,836,4.009,837,5.115,838,4.009,839,3.275,840,4.009,841,4.009,842,4.009,843,3.275,844,2.637,845,4.009,846,4.009,847,3.024,848,4.009,849,4.009,850,5.115,851,4.009,852,4.579,853,4.178,854,4.009,855,4.009,856,3.275,857,4.009,858,4.009]],["title/processes/#why-staging-and-production-should-be-and-cant-be-identical",[11,0.991,315,1.977,550,2.267,859,2.69]],["text/processes/#why-staging-and-production-should-be-and-cant-be-identical",[11,1.975,51,3.543,65,1.549,72,2.158,73,2.888,83,2.875,89,0.514,110,2.705,132,3.42,258,1.861,275,2.274,289,3.217,292,1.577,315,4.064,331,3.217,360,3.359,362,2.274,463,3.102,486,2.402,487,2.888,510,4.3,540,3.102,546,3.359,550,4.3,698,2.888,859,3.681,860,5.7,861,5.198,862,4.112,863,3.681,864,4.112,865,3.359,866,4.112,867,3.681,868,4.112,869,4.112,870,4.112,871,3.359,872,4.112,873,3.359]],["title/processes/#the-problem-of-environment-names",[55,2.094,175,1.871,292,0.936]],["text/processes/#the-problem-of-environment-names",[3,1.03,11,1.837,25,2.242,32,0.575,36,1.164,40,2.109,49,0.904,50,1.789,55,3.447,68,1.124,73,2.394,85,1.896,89,0.651,101,1.789,133,2.785,150,1.7,162,0.825,168,1.991,210,2.242,219,2.572,222,1.991,225,2.394,227,1.789,251,3.025,261,1.343,271,2.109,285,0.902,292,1.724,294,2.785,315,2.242,318,1.405,331,2.109,344,2.109,348,2.242,359,1.076,362,1.885,371,1.789,379,2.686,380,2.785,385,2.242,402,2.242,404,2.846,408,2.572,413,3.051,422,2.394,446,4.116,450,2.242,476,3.051,491,2.572,492,2.572,494,2.242,500,2.785,527,2.242,528,2.785,540,2.572,656,2.242,676,3.051,699,2.109,719,3.469,729,1.885,763,3.051,822,3.051,844,3.423,867,3.051,874,3.409,875,3.409,876,3.757,877,3.409,878,3.409,879,3.409,880,4.598,881,4.598,882,3.409,883,3.409,884,2.394,885,2.785,886,3.051,887,3.409,888,3.409,889,2.785,890,3.409,891,4.598,892,3.409,893,3.409,894,2.572,895,2.785,896,3.409,897,3.409,898,3.409,899,3.409,900,3.409]],["title/processes/#process-modelisation-and-implementation",[32,0.423,478,1.531,901,3.383]],["text/processes/#process-modelisation-and-implementation",[3,0.842,4,1.323,11,1.542,26,1.628,28,2.474,29,3.074,32,0.766,37,2.277,41,1.203,42,1.541,65,1.05,79,2.787,85,1.648,89,0.5,93,1.203,96,2.103,101,1.462,104,2.103,109,3.818,132,3.359,145,2.495,148,1.725,162,1.131,165,1.39,174,1.149,175,1.541,199,1.958,213,1.725,220,1.39,222,1.628,224,1.958,227,1.462,228,2.018,231,1.05,236,2.452,237,1.628,257,1.261,263,2.629,275,1.541,294,2.277,295,1.726,301,1.958,313,3.016,315,2.629,324,2.452,337,2.103,344,1.725,345,1.958,347,1.541,350,1.725,352,1.323,359,0.88,368,4.184,371,1.462,373,2.277,376,1.725,377,1.261,397,1.833,402,3.359,415,1.958,432,2.808,449,1.541,452,1.833,474,2.495,480,1.958,487,2.808,499,2.989,508,2.277,536,3.578,542,2.495,556,1.958,561,3.016,614,3.818,635,2.495,655,1.628,683,2.629,714,5.036,729,1.541,741,3.526,767,1.958,772,1.958,844,1.833,902,2.787,903,2.787,904,2.787,905,2.787,906,2.103,907,2.277,908,2.787,909,2.787,910,2.787,911,2.787,912,3.997,913,2.277,914,2.787,915,2.277,916,4.673,917,2.787,918,2.277,919,5.105,920,5.927,921,5.625,922,2.787,923,2.277,924,2.277,925,2.495,926,2.787,927,2.787,928,2.787,929,3.997,930,1.994,931,2.277,932,2.495,933,2.787,934,2.787,935,2.277,936,3.578,937,2.787]],["title/processes/#gitops",[938,3.41]],["text/processes/#gitops",[2,2.554,21,3.224,36,1.045,49,0.717,60,2.715,67,1.626,71,1.423,81,2.554,85,1.702,87,1.626,89,0.516,148,2.554,162,0.999,165,2.058,204,2.411,220,2.599,228,1.782,237,2.411,253,2.715,257,1.868,258,2.358,267,3.695,299,2.554,311,2.554,344,2.554,345,3.66,359,1.893,361,4.212,363,1.702,402,2.715,403,3.114,421,3.695,432,2.899,452,2.715,464,2.411,507,2.554,566,3.695,894,3.114,930,2.058,932,3.695,936,3.695,938,3.931,939,4.127,940,4.127,941,4.127,942,5.21,943,4.256,944,3.695,945,3.372,946,4.127,947,3.114,948,4.127]],["title/processes/#a-more-practical-gitops-model",[23,1.499,228,1.297,357,1.577,938,2.267]],["text/processes/#a-more-practical-gitops-model",[11,0.849,26,1.504,27,1.809,32,0.322,36,0.956,41,1.629,42,1.424,65,1.421,68,0.849,72,1.351,81,1.593,85,1.556,87,1.76,89,0.322,91,0.928,93,1.112,101,1.351,117,2.103,129,2.305,132,1.694,140,2.305,150,1.284,160,2.651,162,1.191,164,1.504,170,1.593,174,1.062,199,1.809,205,1.943,228,2.261,230,1.593,236,1.351,257,1.165,258,1.165,277,1.694,285,0.682,292,1.449,293,1.809,295,2.363,297,2.331,309,3.273,316,2.103,323,1.882,325,2.305,343,1.351,359,1.191,361,1.809,364,1.593,365,1.504,369,2.336,370,2.305,371,2.872,373,2.103,376,2.765,383,2.939,411,3.083,434,2.103,449,2.087,453,1.943,465,1.98,473,3.379,478,1.165,480,2.651,486,1.504,487,1.809,488,3.379,499,2.087,502,1.694,590,1.694,614,2.103,616,1.943,620,2.103,627,1.943,656,1.694,683,1.694,688,2.305,699,1.593,729,2.087,747,1.593,769,2.483,810,2.305,930,1.284,931,4.279,938,3.951,944,2.305,949,1.943,950,4.468,951,3.65,952,2.575,953,5.192,954,2.575,955,2.575,956,1.943,957,1.809,958,4.404,959,2.575,960,2.575,961,2.305,962,1.809,963,2.575,964,2.103,965,3.774,966,5.297,967,4.9,968,2.575,969,2.575,970,1.943,971,2.575,972,2.103,973,2.575,974,2.575,975,2.575,976,4.404,977,4.019,978,2.575,979,2.305,980,2.305,981,2.575,982,2.305,983,2.575,984,1.943,985,1.943,986,2.575,987,2.575,988,1.694,989,2.575]],["title/processes/#make-it-fluid-with-automatic-propagation",[77,1.977,89,0.376,884,2.111,990,3.005]],["text/processes/#make-it-fluid-with-automatic-propagation",[3,0.933,11,1.019,22,3.242,32,0.618,36,0.782,65,1.619,71,1.704,77,3.251,87,1.693,148,2.659,162,1.408,180,3.515,182,2.764,215,1.911,228,1.333,231,1.619,236,1.62,239,1.804,243,2.827,257,1.397,258,2.418,284,3.131,285,1.138,288,1.911,292,1.609,295,1.333,297,1.693,309,2.377,311,1.911,312,3.059,315,3.695,318,2.038,319,2.33,323,2.465,324,1.62,329,2.33,352,1.466,359,1.357,361,2.169,400,2.764,412,2.031,434,2.523,449,1.708,459,2.169,465,2.255,491,2.33,499,3.107,527,2.031,609,2.523,699,1.911,702,2.764,706,2.764,722,2.827,729,1.708,748,2.764,884,3.018,931,2.523,953,3.847,958,4.425,966,4.425,967,4.425,977,2.523,979,3.847,980,2.764,982,2.764,984,2.33,985,2.33,988,2.827,991,3.088,992,3.088,993,3.088,994,3.088,995,3.088,996,3.847,997,3.088,998,3.088,999,3.018,1000,3.511,1001,2.523,1002,3.088,1003,3.088,1004,2.33,1005,3.088,1006,2.764,1007,3.088,1008,3.088,1009,3.088,1010,3.088,1011,2.33]],["title/processes/#manage-your-risk-by-adding-gates",[286,2.69,363,1.239,492,2.267,1000,2.455]],["text/processes/#manage-your-risk-by-adding-gates",[11,1.453,12,3.094,60,2.897,65,1.659,85,1.816,147,2.573,159,3.943,167,3.943,277,2.897,292,1.627,308,3.598,323,2.197,324,2.311,357,2.311,362,2.436,365,2.573,369,2.726,371,2.311,447,3.323,452,2.897,465,2.311,510,3.323,550,3.323,699,2.726,722,2.897,847,3.323,884,3.811,886,3.943,999,3.811,1000,5.014,1006,4.857,1012,4.404,1013,3.598,1014,4.404,1015,4.404,1016,4.404,1017,5.426,1018,4.404,1019,3.598]],["title/processes/#make-the-fluidity-visible",[47,2.552,89,0.423,180,2.225]],["text/processes/#make-the-fluidity-visible",[3,1.691,4,2.656,32,0.634,36,1.417,47,4.221,49,1.025,65,1.488,68,1.304,71,1.747,80,2.981,85,1.629,89,0.494,90,1.629,93,1.706,99,2.188,110,2.6,142,3.538,144,2.446,147,2.309,150,1.971,180,3.681,222,2.309,226,3.538,271,2.446,284,2.074,287,3.56,297,1.557,323,2.528,324,2.659,340,2.6,379,2.309,464,2.309,478,1.788,521,3.538,563,3.538,581,2.981,686,1.971,751,3.538,808,3.538,844,2.6,852,3.538,863,3.538,925,3.538,961,3.538,976,3.538,977,3.228,1020,5.068,1021,3.952,1022,3.538,1023,3.952,1024,3.952,1025,3.952,1026,3.952,1027,3.952,1028,3.228,1029,3.952,1030,3.952]],["title/processes/#is-fluidity-only-for-start-up",[180,2.225,227,1.775,348,2.225]],["text/processes/#is-fluidity-only-for-start-up",[3,1.169,8,1.93,11,1.827,32,0.625,33,2.14,45,2.718,60,2.546,77,2.546,87,1.97,103,2.546,143,3.161,144,2.395,162,0.937,165,1.93,180,3.289,224,2.718,227,2.03,241,3.161,284,2.03,285,1.024,289,2.395,292,1.071,295,1.671,296,4.476,307,3.161,323,2.763,338,3.464,339,2.546,341,3.464,348,2.546,359,1.222,363,2.284,372,3.464,385,2.546,448,3.464,449,2.14,478,1.751,499,2.14,656,2.546,657,3.464,683,3.289,686,2.494,698,2.718,727,3.161,761,2.919,778,2.395,884,2.718,906,2.919,947,2.919,996,3.464,1011,2.919,1022,3.464,1031,3.87,1032,3.161,1033,3.161,1034,3.87,1035,4.085,1036,3.87,1037,3.87,1038,3.87,1039,3.87,1040,3.161,1041,2.718,1042,3.87,1043,3.87,1044,3.161,1045,2.919,1046,3.161,1047,3.87,1048,3.87]],["title/simplicity/",[30,2.395,39,2.031]],["text/simplicity/",[2,0.512,3,0.851,4,1.162,5,4.456,8,0.738,12,0.581,18,1.162,21,1.244,23,0.412,25,0.974,26,0.483,27,0.581,28,0.512,30,0.916,31,0.777,32,0.455,33,0.457,34,1.61,35,1.117,36,0.921,38,0.676,39,2.113,40,1.244,43,1.43,44,0.974,45,0.581,46,0.676,49,0.631,50,1.642,51,0.457,53,1.557,55,0.916,57,0.777,60,0.544,64,1.209,65,1.729,66,1.244,67,1.586,68,0.807,69,1.517,71,1.444,72,2.017,77,0.544,78,1.117,80,1.117,81,1.515,82,1.322,83,0.457,85,1.009,86,0.74,87,0.964,88,0.74,89,0.632,90,1.402,91,1.127,93,1.57,94,1.43,97,1.517,98,0.624,99,1.216,100,0.916,101,1.055,105,2.059,108,0.624,110,0.544,112,1.117,118,1.117,122,2.0,123,1.847,125,1.515,130,0.676,131,1.117,134,0.624,137,0.624,139,0.676,144,0.512,148,0.512,150,0.738,155,0.916,158,0.581,162,0.88,164,0.865,165,0.738,168,0.865,174,1.893,175,1.354,176,1.117,177,0.624,183,2.276,185,0.819,188,1.04,197,1.112,198,1.04,202,0.676,203,0.676,204,0.865,206,1.055,210,0.544,212,1.645,213,0.512,214,0.624,215,1.743,217,0.676,219,0.624,220,1.221,222,0.483,223,1.337,224,0.581,228,0.639,230,0.512,231,0.922,236,1.478,238,0.819,240,0.581,242,0.581,243,0.544,244,1.828,245,0.544,247,1.561,251,2.528,253,0.974,254,0.581,255,1.117,257,1.274,258,0.374,260,0.624,261,1.233,269,0.624,270,0.544,271,0.916,275,0.457,278,0.581,279,0.581,284,1.055,285,0.829,287,0.581,288,0.916,289,0.512,290,1.412,291,0.676,292,0.229,293,1.04,295,0.357,297,1.586,298,0.676,299,0.512,302,0.581,309,1.112,311,0.512,318,0.341,321,1.112,322,1.117,323,0.412,324,0.434,327,0.581,328,1.852,329,0.624,331,0.512,332,0.581,335,1.828,336,0.624,337,1.117,339,0.544,340,0.974,347,0.457,350,0.916,352,1.614,353,1.117,354,0.581,357,1.908,359,1.271,362,0.457,363,1.584,364,0.512,365,0.483,369,0.916,371,1.055,376,0.512,377,1.896,378,0.676,379,0.865,383,1.322,386,1.209,388,1.04,389,1.209,394,0.865,395,0.676,396,0.676,397,0.974,402,0.544,403,0.624,404,0.916,408,0.624,410,0.676,414,1.04,415,0.581,418,0.581,422,1.04,426,1.117,427,1.209,428,0.676,432,0.581,436,0.916,441,0.676,449,0.457,450,0.974,451,0.676,459,0.581,463,0.624,464,1.43,465,0.777,466,0.676,469,0.676,471,0.544,475,1.117,478,1.108,479,0.676,480,0.581,483,0.974,485,0.676,486,0.483,490,0.624,494,1.322,499,0.457,502,0.974,506,0.676,507,1.244,511,0.676,514,0.676,527,0.544,530,0.676,538,0.676,539,1.117,545,0.624,551,1.61,557,1.04,560,0.676,561,0.624,565,1.517,568,0.624,575,0.676,581,0.624,590,0.974,597,0.676,602,1.117,604,0.676,605,0.676,615,0.581,616,0.624,619,0.676,622,1.642,636,0.624,641,1.517,644,0.624,645,0.624,650,0.676,651,1.04,655,2.353,656,0.544,659,0.676,665,1.117,666,0.676,673,1.117,674,0.624,675,0.676,686,1.404,692,0.676,694,0.676,697,0.676,698,1.412,699,0.512,703,1.117,704,2.017,709,0.624,717,0.676,719,0.624,722,0.544,723,0.676,729,0.819,731,0.624,735,0.676,738,0.676,741,1.117,747,1.244,749,0.624,750,0.676,761,0.624,767,0.581,769,1.322,772,1.04,774,0.676,782,1.209,783,0.676,788,1.209,790,0.676,791,0.676,793,0.676,839,1.209,843,0.676,844,0.544,847,0.624,853,0.676,856,0.676,865,0.676,871,0.676,873,0.676,876,0.676,885,0.676,889,0.676,894,0.624,895,0.676,906,0.624,907,0.676,913,0.676,915,0.676,918,0.676,923,0.676,924,0.676,930,2.558,935,0.676,943,0.676,945,0.676,947,0.624,949,1.117,951,1.209,956,1.117,957,1.412,962,1.412,964,0.676,970,1.117,972,0.676,984,0.624,985,0.624,988,1.61,999,1.412,1001,0.676,1004,2.361,1011,0.624,1013,0.676,1019,0.676,1028,0.676,1032,0.676,1033,1.209,1035,1.209,1040,0.676,1041,2.388,1044,0.676,1045,1.117,1046,0.676,1050,1.799,1051,0.827,1052,0.827,1053,0.827,1054,0.827,1055,1.799,1056,0.827,1057,0.827,1058,1.481,1059,0.827,1060,0.827,1061,0.827,1062,0.827,1063,0.827,1064,0.827,1065,0.827,1066,0.827,1067,0.827,1068,0.827,1069,1.642,1070,1.325,1071,1.325,1072,0.827,1073,0.827,1074,0.827,1075,1.799,1076,0.827,1077,0.827,1078,1.799,1079,1.642,1080,1.325,1081,0.827,1082,0.827,1083,0.827,1084,0.827,1085,0.827,1086,1.642,1087,1.847,1088,0.827,1089,0.827,1090,0.827,1091,2.3,1092,2.0,1093,0.827,1094,0.827,1095,0.827,1096,0.827,1097,0.827,1098,0.827,1099,0.827,1100,0.827,1101,1.325,1102,0.827,1103,0.827,1104,0.827,1105,1.799,1106,1.481,1107,0.827,1108,0.827,1109,4.298,1110,0.827,1111,0.827,1112,0.827,1113,0.827,1114,3.044,1115,2.521,1116,0.827,1117,0.827,1118,0.827,1119,0.827,1120,0.827,1121,0.827,1122,0.827,1123,0.827,1124,0.827,1125,0.827,1126,1.799,1127,0.827,1128,0.827,1129,2.191,1130,0.827,1131,0.827,1132,0.827,1133,0.827,1134,1.481,1135,0.827,1136,0.827,1137,1.481,1138,1.799,1139,0.827,1140,0.827,1141,0.827,1142,1.481,1143,0.827,1144,0.827,1145,0.827,1146,1.325,1147,0.827,1148,0.827,1149,0.827,1150,1.325,1151,1.325,1152,0.827,1153,0.827,1154,0.827,1155,0.827,1156,0.827,1157,0.827,1158,0.827,1159,0.827,1160,1.325,1161,0.827,1162,0.827,1163,0.827,1164,0.827,1165,0.827,1166,0.827,1167,0.827,1168,0.827,1169,0.827,1170,0.827,1171,1.325,1172,0.827,1173,1.481,1174,0.827,1175,0.827,1176,0.827,1177,0.827,1178,0.827,1179,0.827,1180,0.827,1181,0.827,1182,1.481,1183,0.827,1184,0.827,1185,0.827,1186,0.827,1187,1.799,1188,0.827,1189,1.325,1190,0.827,1191,0.827,1192,0.827,1193,0.827,1194,0.827,1195,0.827,1196,0.827,1197,0.827,1198,0.827,1199,0.827,1200,1.325,1201,0.827,1202,0.827,1203,0.827,1204,0.827,1205,0.827,1206,0.827,1207,0.827,1208,0.827,1209,0.827,1210,0.827,1211,0.827,1212,0.827,1213,0.827,1214,0.827,1215,0.827,1216,0.827,1217,0.827,1218,0.827,1219,0.827,1220,0.827,1221,0.827,1222,0.827,1223,0.827,1224,0.827,1225,0.827,1226,0.827,1227,0.827,1228,2.01,1229,0.827,1230,1.481,1231,0.827,1232,0.827,1233,0.827,1234,0.827,1235,1.481,1236,0.827,1237,0.827,1238,0.827,1239,0.827,1240,0.827,1241,0.827,1242,0.827,1243,0.827,1244,0.827]],["title/simplicity/#with-great-power-new-challenges",[112,2.267,162,0.727,183,1.577,1050,2.69]],["text/simplicity/#with-great-power-new-challenges",[3,1.19,21,3.129,23,1.964,44,3.327,46,3.217,49,0.684,50,2.066,53,2.178,68,1.299,72,2.066,81,3.129,82,2.591,90,1.624,110,2.591,112,2.971,139,3.217,162,1.224,183,2.066,231,1.483,257,1.782,270,2.591,271,3.129,299,2.437,309,2.178,336,2.971,350,2.437,363,2.085,376,2.437,379,2.301,415,2.766,422,2.766,432,2.766,478,1.782,605,3.217,636,2.971,655,2.954,697,3.217,735,3.217,738,3.217,865,3.217,956,2.971,1001,3.217,1051,3.938,1052,3.938,1053,3.938,1054,3.938,1055,4.527,1056,3.938,1057,3.938,1058,5.057,1059,3.938,1060,3.938,1061,3.938,1062,3.938,1063,3.938,1064,3.938,1065,3.938,1066,3.938,1067,3.938,1068,3.938,1069,3.217,1070,3.525,1071,3.525,1072,3.938,1073,3.938,1074,3.938,1075,4.527,1076,3.938]],["title/simplicity/#striving-for-simplicity-at-all-layers",[39,1.775,769,2.225,1077,3.383]],["text/simplicity/#striving-for-simplicity-at-all-layers",[3,1.566,39,2.719,89,0.648,134,3.909,212,3.027,290,3.639,321,2.866,1075,4.638,1078,4.638,1079,4.233]],["title/simplicity/#isolate-things-to-their-pure-essence",[67,1.184,255,2.267,704,1.577,1080,2.69]],["text/simplicity/#isolate-things-to-their-pure-essence",[18,2.351,39,3.055,67,1.951,72,2.598,94,2.893,148,3.064,244,2.893,254,3.478,255,3.736,352,2.351,395,4.045,581,3.736,619,4.045,704,2.598,1080,4.433,1081,4.951,1082,4.951,1083,4.951,1084,4.951]],["title/simplicity/#isolating-things",[67,1.525,704,2.031]],["text/simplicity/#isolating-things",[4,2.108,8,2.214,12,3.118,36,1.124,65,1.672,67,1.749,87,1.749,89,0.555,93,1.917,168,2.594,188,3.118,198,3.118,236,3.096,247,2.214,298,3.627,321,2.455,357,3.229,369,2.747,377,2.67,410,3.627,471,2.92,502,2.92,616,3.349,651,3.118,655,3.595,704,2.329,731,3.349,741,4.113,782,4.454,793,3.627,895,3.627,930,2.214,962,3.118,1085,4.439]],["title/simplicity/#the-benefit-of-having-simple-entities",[71,1.036,247,1.499,1086,2.455,1087,2.267]],["text/simplicity/#the-benefit-of-having-simple-entities",[43,2.919,71,1.722,93,2.157,247,2.492,285,1.323,293,3.509,295,2.157,371,2.621,377,2.261,383,3.286,397,3.286,451,4.081,686,2.492,703,3.769,1088,4.996,1089,4.996,1090,4.996,1091,4.081]],["title/simplicity/#the-benefit-of-isolated-entities",[704,1.775,1086,2.764,1087,2.552]],["text/simplicity/#the-benefit-of-isolated-entities",[65,2.35,69,3.488,87,1.821,91,1.666,93,1.996,97,3.488,223,2.195,247,2.306,257,2.092,260,3.488,363,1.906,377,2.529,403,3.488,464,2.701,465,2.426,478,2.092,704,2.426,709,3.488,719,3.488,767,3.247,915,3.777,985,3.488,1086,3.777,1087,3.488,1092,4.566,1093,4.623,1094,4.623,1095,4.623,1096,4.623,1097,4.623,1098,4.623]],["title/simplicity/#simplicity-doesnt-mean-simplistic",[39,1.577,352,1.427,507,1.86,949,2.267]],["text/simplicity/#simplicity-doesnt-mean-simplistic",[39,3.239,67,1.942,71,1.699,72,3.239,81,3.051,91,1.776,93,2.128,175,2.726,228,2.128,352,2.757,394,2.88,507,3.051,949,3.719,962,3.463,1069,4.027,1099,4.93]],["title/simplicity/#decoupling-price",[930,1.93,1100,3.87]],["text/simplicity/#decoupling-price",[18,2.159,65,2.246,71,1.568,72,2.903,89,0.569,98,3.431,183,2.386,220,2.268,244,2.657,253,2.992,340,3.64,363,1.875,377,2.058,475,3.431,560,3.715,699,2.814,783,3.715,930,2.76,962,3.194,988,2.992,1050,4.953,1069,3.715,1070,4.071,1092,3.715,1101,4.071,1102,4.548,1103,4.548,1104,4.548,1105,4.953,1106,5.533,1107,4.548,1108,4.548]],["title/simplicity/#new-challenges-introduced-by-the-decoupling",[162,0.727,183,1.577,365,1.756,930,1.499]],["text/simplicity/#new-challenges-introduced-by-the-decoupling",[43,2.277,50,2.045,53,2.778,57,2.045,65,1.468,66,2.412,67,1.535,68,1.657,82,2.563,89,0.628,93,2.535,99,1.682,105,3.304,122,3.183,150,1.943,158,2.737,162,0.943,165,2.505,174,2.071,175,2.155,183,3.321,188,2.737,210,2.563,236,2.635,253,2.563,285,1.032,353,2.94,357,2.045,363,1.607,371,2.635,377,2.515,378,3.183,388,2.737,397,2.563,414,2.737,436,2.412,464,2.277,483,2.563,499,2.155,538,3.183,557,2.737,650,3.183,651,2.737,655,2.277,656,2.563,885,3.183,924,3.183,970,2.94,1079,3.183,1091,4.541,1109,5.569,1110,3.897,1111,3.897,1112,3.897,1113,3.897]],["title/simplicity/#the-lego-era",[1114,3.464,1115,3.464]],["text/simplicity/#the-lego-era",[3,1.284,4,2.017,8,1.515,18,1.442,30,2.629,31,1.594,32,0.531,35,2.292,36,1.076,40,1.88,50,2.229,53,2.349,64,3.471,66,1.88,72,1.594,77,1.998,78,2.292,81,1.88,82,1.998,85,1.252,90,1.252,91,1.094,99,1.311,101,2.229,105,3.223,168,1.775,198,2.134,203,2.481,206,2.229,213,1.88,214,2.292,223,1.442,245,1.998,261,1.674,284,2.229,297,2.279,302,2.134,327,2.134,337,3.205,339,1.998,357,1.594,359,1.341,362,1.68,363,2.02,369,1.88,383,2.795,389,3.471,414,2.134,479,2.481,485,2.481,506,2.481,511,2.481,530,2.481,590,1.998,604,2.481,615,2.134,644,2.292,655,2.482,673,2.292,686,1.515,704,1.594,717,2.481,722,1.998,723,2.481,747,1.88,772,2.134,790,2.481,871,2.481,876,2.481,906,2.292,923,2.481,930,2.119,935,2.481,945,2.481,984,2.292,988,2.795,1011,2.292,1035,3.471,1044,2.481,1046,2.481,1079,2.481,1092,2.481,1105,2.719,1114,5.179,1115,4.75,1116,3.037,1117,3.037,1118,3.037,1119,3.037,1120,3.037,1121,3.037,1122,3.037,1123,3.037,1124,3.037,1125,3.037,1126,2.719,1127,3.037,1128,3.037,1129,2.719,1130,3.037,1131,3.037,1132,3.037,1133,3.037,1134,4.248,1135,3.037,1136,3.037,1137,4.248,1138,3.803,1139,3.037,1140,3.037,1141,3.037,1142,4.248,1143,3.037,1144,3.037,1145,3.037,1146,2.719,1147,3.037,1148,3.037,1149,3.037,1150,2.719,1151,2.719]],["title/simplicity/#doing-one-thing-and-doing-it-well",[65,1.018,67,1.065,94,1.579,539,2.95]],["text/simplicity/#doing-one-thing-and-doing-it-well",[4,2.32,65,2.176,67,1.925,87,1.925,94,2.855,197,2.702,244,2.855,309,2.702,331,3.024,402,3.215,480,3.432,565,4.358,597,3.992,674,3.687,774,3.992,889,3.992,1087,3.687,1152,4.886,1153,4.886,1154,4.886,1155,4.886]],["title/simplicity/#make-it-simple-by-methodologies-technologies",[71,0.932,89,0.338,176,2.039,1045,2.039,1049,2.703]],["text/simplicity/#make-it-simple-by-methodologies-technologies",[26,2.121,31,1.905,36,1.214,49,0.63,50,2.517,91,1.728,99,2.071,100,2.247,101,1.905,105,2.388,122,3.918,144,2.247,162,0.879,174,2.661,175,2.652,176,2.739,183,1.905,212,2.121,223,1.724,228,1.567,230,2.247,231,1.367,243,2.388,251,2.388,257,1.643,261,1.43,288,2.247,293,2.55,297,2.116,377,1.643,478,1.643,483,2.388,486,2.121,561,2.739,665,2.739,729,2.008,749,2.739,769,3.155,873,2.966,913,2.966,930,3.266,957,2.55,964,2.966,1028,2.966,1033,3.918,1045,2.739,1055,3.25,1109,5.777,1156,3.63,1157,3.63,1158,3.63,1159,3.63,1160,3.25,1161,3.63,1162,3.63,1163,3.63,1164,3.63,1165,3.63,1166,3.63,1167,3.63,1168,3.63,1169,3.63,1170,3.63]],["title/simplicity/#premature-optimization",[34,2.546,1171,3.464]],["text/simplicity/#premature-optimization",[34,3.808,39,2.232,49,0.739,65,1.602,80,3.209,83,2.352,85,1.754,90,1.754,97,3.209,131,3.209,155,2.632,185,2.352,224,2.987,244,2.485,261,1.676,290,2.987,350,2.632,352,2.521,359,1.343,386,4.338,404,3.286,436,2.632,478,1.925,494,2.798,502,2.798,507,2.632,527,2.798,666,3.475,675,3.475,686,2.121,692,3.475,747,2.632,750,3.475,761,3.209,844,2.798,853,3.475,988,2.798,1032,3.475,1146,3.807,1160,3.807,1171,3.807,1172,4.253,1173,5.309,1174,4.253,1175,4.253,1176,4.253,1177,4.253,1178,4.253,1179,4.253,1180,4.253,1181,4.253]],["title/simplicity/#maintaining-the-cause-and-effect-relationship",[123,2.267,125,1.86,335,1.756,686,1.499]],["text/simplicity/#maintaining-the-cause-and-effect-relationship",[32,0.503,49,0.699,57,2.111,65,1.515,67,1.585,71,1.387,85,1.659,87,1.585,90,2.326,91,1.449,118,3.035,123,4.257,125,3.492,162,0.974,174,1.659,197,2.835,219,3.035,222,2.35,231,1.515,244,2.35,261,1.585,284,2.111,285,1.357,292,1.113,309,2.225,322,3.868,323,2.007,324,2.111,328,3.712,335,3.471,352,1.91,359,1.27,441,3.287,450,3.372,465,2.111,490,3.035,494,2.647,565,3.035,622,4.609,641,4.257,686,2.007,704,2.69,951,4.188,1078,4.589,1182,5.127,1183,4.023,1184,4.023,1185,4.023,1186,4.023]],["title/simplicity/#make-it-simple-by-tagging",[71,1.166,89,0.423,251,2.225]],["text/simplicity/#make-it-simple-by-tagging",[21,2.403,27,2.728,28,2.403,32,0.627,35,2.93,39,2.038,49,0.674,51,2.148,55,2.403,60,2.554,69,2.93,89,0.485,164,2.269,185,2.148,223,1.844,231,1.463,238,2.772,251,4.16,257,1.757,258,1.757,275,2.148,278,2.728,279,2.728,285,1.028,288,2.403,289,2.403,318,1.601,335,2.269,359,1.916,379,2.269,388,2.728,396,3.172,418,2.728,422,2.728,426,2.93,427,4.094,428,3.172,551,2.554,568,2.93,659,3.172,772,2.728,788,4.094,839,4.094,843,3.172,856,3.172,930,1.937,947,2.93,957,2.728,970,2.93,972,3.172,1013,3.172,1091,3.172,1126,4.486,1187,3.476,1188,3.883,1189,3.476,1190,3.883,1191,3.883,1192,3.883,1193,3.883,1194,3.883,1195,3.883,1196,3.883,1197,3.883,1198,3.883,1199,3.883]],["title/simplicity/#make-it-simple-by-consistency",[71,1.166,89,0.423,1041,2.376]],["text/simplicity/#make-it-simple-by-consistency",[2,2.481,18,1.903,25,3.365,32,0.501,33,2.217,40,2.481,43,2.988,49,0.888,55,2.481,66,2.481,67,1.579,69,3.024,71,1.382,89,0.639,99,1.731,100,2.481,108,3.024,118,3.024,137,3.024,162,0.97,164,2.342,202,3.275,204,2.342,220,1.999,240,2.816,242,2.816,247,1.999,285,1.061,287,2.816,354,2.816,357,2.684,364,2.481,394,2.342,408,3.024,463,3.024,464,2.988,466,3.275,590,2.637,602,3.024,665,3.024,673,3.024,703,3.024,791,3.275,847,3.024,894,3.024,918,3.275,957,2.816,1041,4.305,1129,5.043,1200,3.589,1201,4.009,1202,4.009,1203,4.009,1204,4.009,1205,4.009,1206,4.009,1207,4.009,1208,4.009,1209,4.009,1210,4.009,1211,4.009]],["title/simplicity/#make-it-simple-by-conventions",[71,1.166,89,0.423,1004,2.552]],["text/simplicity/#make-it-simple-by-conventions",[32,0.653,36,1.448,49,0.719,72,2.174,89,0.653,155,2.564,204,2.42,206,2.174,217,3.384,223,1.967,247,2.066,257,1.875,269,3.125,291,3.384,311,2.564,328,2.725,329,3.125,332,2.91,347,2.291,353,3.125,426,3.125,449,2.291,459,2.91,469,3.384,475,3.125,494,2.725,545,3.125,551,3.763,557,2.91,602,3.125,655,2.42,694,3.384,729,2.291,907,3.384,999,3.668,1004,4.671,1041,2.91,1101,3.709,1151,3.709,1200,3.709,1212,4.143,1213,4.143,1214,4.143,1215,4.143,1216,4.143,1217,4.143,1218,4.143,1219,4.143,1220,4.143,1221,4.143,1222,4.143,1223,4.143,1224,4.143]],["title/simplicity/#make-it-simple-by-making-compromises",[71,1.036,89,0.527,215,1.86]],["text/simplicity/#make-it-simple-by-making-compromises",[3,1.181,38,3.194,40,2.42,45,2.747,68,1.29,78,2.95,80,2.95,85,1.612,86,3.501,88,3.501,89,0.696,90,1.612,94,2.285,97,2.95,130,3.194,131,2.95,150,1.95,174,1.612,177,2.95,212,3.253,215,3.638,220,2.511,244,2.285,261,1.541,290,2.747,297,1.541,321,2.163,328,2.572,359,1.234,363,1.612,514,3.194,575,3.194,645,2.95,698,3.911,747,2.42,943,3.194,956,2.95,999,2.747,1019,3.194,1040,3.194,1071,3.501,1138,3.501,1150,3.501,1187,4.506,1189,3.501,1225,3.91,1226,3.91,1227,3.91,1228,5.567,1229,3.91,1230,5.034,1231,3.91,1232,3.91,1233,3.91,1234,3.91,1235,5.034,1236,3.91,1237,3.91,1238,3.91,1239,3.91,1240,3.91,1241,3.91,1242,3.91,1243,3.91,1244,3.91]]],"fields":["title","text"],"invertedIndex":[["&",{"_index":122,"text":{"processes/":{},"simplicity/":{},"simplicity/#make-it-simple-by-methodologies-technologies":{},"simplicity/#new-challenges-introduced-by-the-decoupling":{}},"title":{}}],["(",{"_index":1083,"text":{"simplicity/":{},"simplicity/#isolate-things-to-their-pure-essence":{}},"title":{}}],["(*",{"_index":1005,"text":{"processes/":{},"processes/#make-it-fluid-with-automatic-propagation":{}},"title":{}}],["(1.2.3)",{"_index":1007,"text":{"processes/":{},"processes/#make-it-fluid-with-automatic-propagation":{}},"title":{}}],["(1.6)",{"_index":993,"text":{"processes/":{},"processes/#make-it-fluid-with-automatic-propagation":{}},"title":{}}],["(1.6).",{"_index":1010,"text":{"processes/":{},"processes/#make-it-fluid-with-automatic-propagation":{}},"title":{}}],["(2.3),",{"_index":994,"text":{"processes/":{},"processes/#make-it-fluid-with-automatic-propagation":{}},"title":{}}],["(e.g.,",{"_index":441,"text":{"processes/":{},"processes/#process-1-environment-creation-easy-setup":{},"simplicity/":{},"simplicity/#maintaining-the-cause-and-effect-relationship":{}},"title":{}}],[")",{"_index":1084,"text":{"simplicity/":{},"simplicity/#isolate-things-to-their-pure-essence":{}},"title":{}}],[".",{"_index":69,"text":{"processes/":{},"simplicity/":{},"simplicity/#make-it-simple-by-consistency":{},"simplicity/#make-it-simple-by-tagging":{},"simplicity/#the-benefit-of-isolated-entities":{}},"title":{}}],["1",{"_index":41,"text":{"":{},"#lessons-learned-as-a-devops-engineer":{},"processes/":{},"processes/#a-more-practical-gitops-model":{},"processes/#dynamic-environment-as-a-new-paradigm":{},"processes/#merge-to-master-point-of-no-difficult-return":{},"processes/#model-extension-to-include-all-kinds-of-code":{},"processes/#process-1-environment-creation-easy-setup":{},"processes/#process-1-feature-branch-as-the-source-of-truth":{},"processes/#process-modelisation-and-implementation":{},"processes/#rca-processes-relationship":{},"processes/#resilience":{}},"title":{"processes/#process-1-environment-creation-easy-setup":{},"processes/#process-1-feature-branch-as-the-source-of-truth":{},"processes/#process-1-from-code-to-development-environments":{}}}],["1.2)",{"_index":981,"text":{"processes/":{},"processes/#a-more-practical-gitops-model":{}},"title":{}}],["1.6)",{"_index":1008,"text":{"processes/":{},"processes/#make-it-fluid-with-automatic-propagation":{}},"title":{}}],["100",{"_index":863,"text":{"processes/":{},"processes/#make-the-fluidity-visible":{},"processes/#why-staging-and-production-should-be-and-cant-be-identical":{}},"title":{}}],["1941",{"_index":799,"text":{"processes/":{},"processes/#code-review-starts-with-yourself":{}},"title":{}}],["1970",{"_index":807,"text":{"processes/":{},"processes/#code-review-starts-with-yourself":{}},"title":{}}],["2",{"_index":42,"text":{"":{},"#lessons-learned-as-a-devops-engineer":{},"processes/":{},"processes/#a-more-practical-gitops-model":{},"processes/#dynamic-environment-as-a-new-paradigm":{},"processes/#model-extension-to-include-all-kinds-of-code":{},"processes/#process-modelisation-and-implementation":{},"processes/#rca-processes-relationship":{},"processes/#resilience":{}},"title":{"processes/#process-2-the-release-management-process":{}}}],["2.3).",{"_index":983,"text":{"processes/":{},"processes/#a-more-practical-gitops-model":{}},"title":{}}],["2011",{"_index":667,"text":{"processes/":{},"processes/#code-review-starts-with-yourself":{},"processes/#resilience":{}},"title":{}}],["3",{"_index":44,"text":{"":{},"#lessons-learned-as-a-devops-engineer":{},"processes/":{},"processes/#dynamic-environment-as-a-new-paradigm":{},"processes/#model-extension-to-include-all-kinds-of-code":{},"simplicity/":{},"simplicity/#with-great-power-new-challenges":{}},"title":{}}],["30",{"_index":721,"text":{"processes/":{},"processes/#there-is-no-replacement-for-the-e2e-test":{}},"title":{}}],["4",{"_index":46,"text":{"":{},"#lessons-learned-as-a-devops-engineer":{},"simplicity/":{},"simplicity/#with-great-power-new-challenges":{}},"title":{}}],["40",{"_index":138,"text":{"processes/":{},"processes/#rca-processes-relationship":{}},"title":{}}],["45",{"_index":146,"text":{"processes/":{},"processes/#rca-processes-relationship":{}},"title":{}}],["5",{"_index":48,"text":{"":{},"#lessons-learned-as-a-devops-engineer":{},"processes/":{},"processes/#healthy":{},"processes/#wrong-mindset":{}},"title":{}}],["50",{"_index":281,"text":{"processes/":{},"processes/#code-review-starts-with-yourself":{},"processes/#wrong-mindset":{}},"title":{}}],["56782",{"_index":430,"text":{"processes/":{},"processes/#process-1-environment-creation-easy-setup":{}},"title":{}}],["567850",{"_index":454,"text":{"processes/":{},"processes/#model-extension-to-include-all-kinds-of-code":{}},"title":{}}],["6",{"_index":52,"text":{"":{},"#lessons-learned-as-a-devops-engineer":{},"processes/":{},"processes/#process-1-environment-creation-easy-setup":{}},"title":{}}],["7",{"_index":54,"text":{"":{},"#lessons-learned-as-a-devops-engineer":{}},"title":{}}],["8",{"_index":56,"text":{"":{},"#lessons-learned-as-a-devops-engineer":{}},"title":{}}],["80",{"_index":514,"text":{"processes/":{},"processes/#process-2-the-release-management-process":{},"simplicity/":{},"simplicity/#make-it-simple-by-making-compromises":{}},"title":{}}],["9",{"_index":58,"text":{"":{},"#lessons-learned-as-a-devops-engineer":{}},"title":{}}],["90",{"_index":78,"text":{"processes/":{},"processes/#healthy":{},"simplicity/":{},"simplicity/#make-it-simple-by-making-compromises":{},"simplicity/#the-lego-era":{}},"title":{}}],[":",{"_index":1109,"text":{"simplicity/":{},"simplicity/#make-it-simple-by-methodologies-technologies":{},"simplicity/#new-challenges-introduced-by-the-decoupling":{}},"title":{}}],["@salesforce.com",{"_index":9,"text":{"":{},"#lessons-learned-as-a-devops-engineer":{}},"title":{}}],["abil",{"_index":445,"text":{"processes/":{},"processes/#making-testable-code":{},"processes/#model-extension-to-include-all-kinds-of-code":{}},"title":{}}],["abov",{"_index":765,"text":{"processes/":{},"processes/#making-testable-code":{}},"title":{}}],["absenc",{"_index":819,"text":{"processes/":{},"processes/#code-review-starts-with-yourself":{}},"title":{}}],["absolut",{"_index":599,"text":{"processes/":{},"processes/#healthy":{}},"title":{}}],["abstract",{"_index":964,"text":{"processes/":{},"processes/#a-more-practical-gitops-model":{},"simplicity/":{},"simplicity/#make-it-simple-by-methodologies-technologies":{}},"title":{}}],["accept",{"_index":1243,"text":{"simplicity/":{},"simplicity/#make-it-simple-by-making-compromises":{}},"title":{}}],["access",{"_index":947,"text":{"processes/":{},"processes/#gitops":{},"processes/#is-fluidity-only-for-start-up":{},"simplicity/":{},"simplicity/#make-it-simple-by-tagging":{}},"title":{}}],["achiev",{"_index":246,"text":{"processes/":{},"processes/#performance-indicators":{}},"title":{}}],["actor",{"_index":234,"text":{"processes/":{},"processes/#process-1-feature-branch-as-the-source-of-truth":{},"processes/#understand-requirements":{}},"title":{}}],["actual",{"_index":829,"text":{"processes/":{},"processes/#code-review-starts-with-yourself":{}},"title":{}}],["ad",{"_index":286,"text":{"processes/":{},"processes/#wrong-mindset":{}},"title":{"processes/#manage-your-risk-by-adding-gates":{}}}],["adapt",{"_index":645,"text":{"processes/":{},"processes/#making-testable-code":{},"processes/#resilience":{},"simplicity/":{},"simplicity/#make-it-simple-by-making-compromises":{}},"title":{}}],["add",{"_index":839,"text":{"processes/":{},"processes/#improving-the-code-review-process":{},"simplicity/":{},"simplicity/#make-it-simple-by-tagging":{}},"title":{}}],["addit",{"_index":627,"text":{"processes/":{},"processes/#a-more-practical-gitops-model":{},"processes/#code-review-as-the-last-bastion-of-defense":{},"processes/#stable":{},"processes/#why-companies-fail-in-their-e2e-strategy":{}},"title":{}}],["adopt",{"_index":414,"text":{"processes/":{},"processes/#design-your-architecture-up-to-your-ambition":{},"processes/#dynamic-environment-as-a-new-paradigm":{},"simplicity/":{},"simplicity/#new-challenges-introduced-by-the-decoupling":{},"simplicity/#the-lego-era":{}},"title":{}}],["advers",{"_index":647,"text":{"processes/":{},"processes/#resilience":{}},"title":{}}],["affect",{"_index":782,"text":{"processes/":{},"processes/#code-review-as-the-last-bastion-of-defense":{},"simplicity/":{},"simplicity/#isolating-things":{}},"title":{}}],["afford",{"_index":766,"text":{"processes/":{},"processes/#making-e2e-tests-affordable-removing-the-ui-layer":{}},"title":{"processes/#making-e2e-tests-affordable-removing-the-ui-layer":{}}}],["afraid",{"_index":680,"text":{"processes/":{},"processes/#resilience":{}},"title":{}}],["again",{"_index":135,"text":{"processes/":{},"processes/#rca-processes-relationship":{},"processes/#wrong-mindset":{}},"title":{}}],["agil",{"_index":45,"text":{"":{},"#lessons-learned-as-a-devops-engineer":{},"processes/":{},"processes/#is-fluidity-only-for-start-up":{},"simplicity/":{},"simplicity/#make-it-simple-by-making-compromises":{}},"title":{}}],["ago",{"_index":265,"text":{"processes/":{},"processes/#process-1-feature-branch-as-the-source-of-truth":{},"processes/#wrong-mindset":{}},"title":{}}],["aim",{"_index":351,"text":{"processes/":{},"processes/#process-1-feature-branch-as-the-source-of-truth":{}},"title":{}}],["allegori",{"_index":710,"text":{"processes/":{},"processes/#there-is-no-replacement-for-the-e2e-test":{}},"title":{}}],["allow",{"_index":957,"text":{"processes/":{},"processes/#a-more-practical-gitops-model":{},"simplicity/":{},"simplicity/#make-it-simple-by-consistency":{},"simplicity/#make-it-simple-by-methodologies-technologies":{},"simplicity/#make-it-simple-by-tagging":{}},"title":{}}],["alreadi",{"_index":934,"text":{"processes/":{},"processes/#process-modelisation-and-implementation":{}},"title":{}}],["altern",{"_index":757,"text":{"processes/":{},"processes/#making-testable-code":{}},"title":{}}],["alwai",{"_index":961,"text":{"processes/":{},"processes/#a-more-practical-gitops-model":{},"processes/#make-the-fluidity-visible":{}},"title":{}}],["ambit",{"_index":477,"text":{"processes/":{}},"title":{"processes/#design-your-architecture-up-to-your-ambition":{}}}],["ambul",{"_index":593,"text":{"processes/":{},"processes/#healthy":{}},"title":{}}],["amp",{"_index":1049,"text":{},"title":{"processes/#rca-processes-relationship":{},"simplicity/#make-it-simple-by-methodologies-technologies":{}}}],["analys",{"_index":126,"text":{"processes/":{},"processes/#rca-processes-relationship":{}},"title":{}}],["analysi",{"_index":137,"text":{"processes/":{},"processes/#devops-as-a-business-analyst-with-many-technical-skills":{},"processes/#rca-processes-relationship":{},"simplicity/":{},"simplicity/#make-it-simple-by-consistency":{}},"title":{}}],["analyst",{"_index":149,"text":{"processes/":{},"processes/#devops-as-a-business-analyst-with-many-technical-skills":{}},"title":{"processes/#devops-as-a-business-analyst-with-many-technical-skills":{}}}],["annot",{"_index":1193,"text":{"simplicity/":{},"simplicity/#make-it-simple-by-tagging":{}},"title":{}}],["anonym",{"_index":866,"text":{"processes/":{},"processes/#why-staging-and-production-should-be-and-cant-be-identical":{}},"title":{}}],["anoth",{"_index":465,"text":{"processes/":{},"processes/#a-more-practical-gitops-model":{},"processes/#healthy":{},"processes/#make-it-fluid-with-automatic-propagation":{},"processes/#make-your-codes-equal":{},"processes/#making-e2e-tests-affordable-removing-the-ui-layer":{},"processes/#making-testable-code":{},"processes/#manage-your-risk-by-adding-gates":{},"simplicity/":{},"simplicity/#maintaining-the-cause-and-effect-relationship":{},"simplicity/#the-benefit-of-isolated-entities":{}},"title":{}}],["answer",{"_index":245,"text":{"processes/":{},"processes/#performance-indicators":{},"processes/#resilience":{},"processes/#stable":{},"processes/#why-companies-fail-in-their-e2e-strategy":{},"simplicity/":{},"simplicity/#the-lego-era":{}},"title":{}}],["anti",{"_index":763,"text":{"processes/":{},"processes/#making-testable-code":{},"processes/#the-problem-of-environment-names":{}},"title":{}}],["anymor",{"_index":399,"text":{"processes/":{},"processes/#dynamic-environment-as-a-new-paradigm":{},"processes/#process-2-the-release-management-process":{}},"title":{}}],["anyon",{"_index":1145,"text":{"simplicity/":{},"simplicity/#the-lego-era":{}},"title":{}}],["apart",{"_index":895,"text":{"processes/":{},"processes/#the-problem-of-environment-names":{},"simplicity/":{},"simplicity/#isolating-things":{}},"title":{}}],["api",{"_index":749,"text":{"processes/":{},"processes/#getting-to-the-root-of-the-problem":{},"processes/#making-e2e-tests-affordable-removing-the-ui-layer":{},"simplicity/":{},"simplicity/#make-it-simple-by-methodologies-technologies":{}},"title":{}}],["appli",{"_index":35,"text":{"":{},"#lessons-learned-as-a-devops-engineer":{},"simplicity/":{},"simplicity/#make-it-simple-by-tagging":{},"simplicity/#the-lego-era":{}},"title":{}}],["applic",{"_index":99,"text":{"processes/":{},"processes/#getting-to-the-root-of-the-problem":{},"processes/#make-the-fluidity-visible":{},"processes/#making-testable-code":{},"processes/#process-1-feature-branch-as-the-source-of-truth":{},"processes/#process-1-from-code-to-development-environments":{},"processes/#process-2-the-release-management-process":{},"processes/#resilience":{},"processes/#stable":{},"processes/#wrong-mindset":{},"simplicity/":{},"simplicity/#make-it-simple-by-consistency":{},"simplicity/#make-it-simple-by-methodologies-technologies":{},"simplicity/#new-challenges-introduced-by-the-decoupling":{},"simplicity/#the-lego-era":{}},"title":{}}],["approach",{"_index":483,"text":{"processes/":{},"processes/#design-your-architecture-up-to-your-ambition":{},"processes/#making-testable-code":{},"processes/#why-companies-fail-in-their-e2e-strategy":{},"simplicity/":{},"simplicity/#make-it-simple-by-methodologies-technologies":{},"simplicity/#new-challenges-introduced-by-the-decoupling":{}},"title":{}}],["approv",{"_index":948,"text":{"processes/":{},"processes/#gitops":{}},"title":{}}],["aptitud",{"_index":156,"text":{"processes/":{},"processes/#devops-as-a-business-analyst-with-many-technical-skills":{}},"title":{}}],["architect",{"_index":701,"text":{"processes/":{},"processes/#why-companies-fail-in-their-e2e-strategy":{}},"title":{}}],["architectur",{"_index":50,"text":{"":{},"#lessons-learned-as-a-devops-engineer":{},"processes/":{},"processes/#design-your-architecture-up-to-your-ambition":{},"processes/#the-problem-of-environment-names":{},"simplicity/":{},"simplicity/#make-it-simple-by-methodologies-technologies":{},"simplicity/#new-challenges-introduced-by-the-decoupling":{},"simplicity/#the-lego-era":{},"simplicity/#with-great-power-new-challenges":{}},"title":{"processes/#design-your-architecture-up-to-your-ambition":{}}}],["argo",{"_index":904,"text":{"processes/":{},"processes/#process-modelisation-and-implementation":{}},"title":{}}],["argocd",{"_index":989,"text":{"processes/":{},"processes/#a-more-practical-gitops-model":{}},"title":{}}],["arriv",{"_index":579,"text":{"processes/":{},"processes/#healthy":{}},"title":{}}],["art",{"_index":1235,"text":{"simplicity/":{},"simplicity/#make-it-simple-by-making-compromises":{}},"title":{}}],["articl",{"_index":14,"text":{"":{},"#lessons-learned-as-a-devops-engineer":{}},"title":{}}],["artifici",{"_index":190,"text":{"processes/":{},"processes/#bridging-the-gap-between-mentalities":{}},"title":{}}],["ask",{"_index":590,"text":{"processes/":{},"processes/#a-more-practical-gitops-model":{},"processes/#code-review-starts-with-yourself":{},"processes/#healthy":{},"simplicity/":{},"simplicity/#make-it-simple-by-consistency":{},"simplicity/#the-lego-era":{}},"title":{}}],["assembl",{"_index":717,"text":{"processes/":{},"processes/#there-is-no-replacement-for-the-e2e-test":{},"simplicity/":{},"simplicity/#the-lego-era":{}},"title":{}}],["assess",{"_index":548,"text":{"processes/":{},"processes/#improving-the-code-review-process":{},"processes/#resilience":{},"processes/#working":{}},"title":{}}],["associ",{"_index":370,"text":{"processes/":{},"processes/#a-more-practical-gitops-model":{},"processes/#process-1-feature-branch-as-the-source-of-truth":{}},"title":{}}],["assumpt",{"_index":216,"text":{"processes/":{},"processes/#tools-are-not-the-way-to-talk-about-processes":{}},"title":{}}],["attent",{"_index":381,"text":{"processes/":{},"processes/#process-1-feature-branch-as-the-source-of-truth":{},"processes/#why-companies-fail-in-their-e2e-strategy":{}},"title":{}}],["attribut",{"_index":1134,"text":{"simplicity/":{},"simplicity/#the-lego-era":{}},"title":{}}],["audit",{"_index":1135,"text":{"simplicity/":{},"simplicity/#the-lego-era":{}},"title":{}}],["authent",{"_index":1127,"text":{"simplicity/":{},"simplicity/#the-lego-era":{}},"title":{}}],["author",{"_index":1011,"text":{"processes/":{},"processes/#is-fluidity-only-for-start-up":{},"processes/#make-it-fluid-with-automatic-propagation":{},"simplicity/":{},"simplicity/#the-lego-era":{}},"title":{}}],["autom",{"_index":117,"text":{"processes/":{},"processes/#a-more-practical-gitops-model":{},"processes/#bridging-the-gap-between-mentalities":{},"processes/#make-your-processes-as-first-citizen":{}},"title":{}}],["automat",{"_index":77,"text":{"processes/":{},"processes/#is-fluidity-only-for-start-up":{},"processes/#make-it-fluid-with-automatic-propagation":{},"processes/#model-extension-to-include-all-kinds-of-code":{},"simplicity/":{},"simplicity/#the-lego-era":{}},"title":{"processes/#make-it-fluid-with-automatic-propagation":{}}}],["autosc",{"_index":1061,"text":{"simplicity/":{},"simplicity/#with-great-power-new-challenges":{}},"title":{}}],["avail",{"_index":932,"text":{"processes/":{},"processes/#gitops":{},"processes/#process-modelisation-and-implementation":{}},"title":{}}],["averag",{"_index":259,"text":{"processes/":{},"processes/#performance-indicators":{},"processes/#wrong-mindset":{}},"title":{}}],["avoid",{"_index":1001,"text":{"processes/":{},"processes/#make-it-fluid-with-automatic-propagation":{},"simplicity/":{},"simplicity/#with-great-power-new-challenges":{}},"title":{}}],["aw",{"_index":1051,"text":{"simplicity/":{},"simplicity/#with-great-power-new-challenges":{}},"title":{}}],["awar",{"_index":1196,"text":{"simplicity/":{},"simplicity/#make-it-simple-by-tagging":{}},"title":{}}],["backend",{"_index":1162,"text":{"simplicity/":{},"simplicity/#make-it-simple-by-methodologies-technologies":{}},"title":{}}],["backup",{"_index":690,"text":{"processes/":{},"processes/#why-companies-fail-in-their-e2e-strategy":{}},"title":{}}],["balanc",{"_index":1063,"text":{"simplicity/":{},"simplicity/#with-great-power-new-challenges":{}},"title":{}}],["bare",{"_index":905,"text":{"processes/":{},"processes/#process-modelisation-and-implementation":{}},"title":{}}],["barrier",{"_index":191,"text":{"processes/":{},"processes/#bridging-the-gap-between-mentalities":{}},"title":{}}],["base",{"_index":258,"text":{"processes/":{},"processes/#a-more-practical-gitops-model":{},"processes/#design-your-architecture-up-to-your-ambition":{},"processes/#gitops":{},"processes/#improving-the-code-review-process":{},"processes/#make-it-fluid-with-automatic-propagation":{},"processes/#making-e2e-tests-affordable-removing-the-ui-layer":{},"processes/#model-extension-to-include-all-kinds-of-code":{},"processes/#performance-indicators":{},"processes/#stable":{},"processes/#why-staging-and-production-should-be-and-cant-be-identical":{},"processes/#working":{},"simplicity/":{},"simplicity/#make-it-simple-by-tagging":{}},"title":{}}],["baselin",{"_index":598,"text":{"processes/":{},"processes/#healthy":{}},"title":{}}],["basi",{"_index":1220,"text":{"simplicity/":{},"simplicity/#make-it-simple-by-conventions":{}},"title":{}}],["bastion",{"_index":779,"text":{"processes/":{}},"title":{"processes/#code-review-as-the-last-bastion-of-defense":{}}}],["be",{"_index":164,"text":{"processes/":{},"processes/#a-more-practical-gitops-model":{},"processes/#code-review-as-the-last-bastion-of-defense":{},"processes/#devops-as-a-business-analyst-with-many-technical-skills":{},"processes/#getting-to-the-root-of-the-problem":{},"processes/#merge-to-master-point-of-no-difficult-return":{},"simplicity/":{},"simplicity/#make-it-simple-by-consistency":{},"simplicity/#make-it-simple-by-tagging":{}},"title":{}}],["becom",{"_index":290,"text":{"processes/":{},"processes/#wrong-mindset":{},"simplicity/":{},"simplicity/#make-it-simple-by-making-compromises":{},"simplicity/#premature-optimization":{},"simplicity/#striving-for-simplicity-at-all-layers":{}},"title":{}}],["befor",{"_index":786,"text":{"processes/":{},"processes/#code-review-as-the-last-bastion-of-defense":{}},"title":{}}],["behalf",{"_index":1216,"text":{"simplicity/":{},"simplicity/#make-it-simple-by-conventions":{}},"title":{}}],["behavior",{"_index":1088,"text":{"simplicity/":{},"simplicity/#the-benefit-of-having-simple-entities":{}},"title":{}}],["belittl",{"_index":116,"text":{"processes/":{},"processes/#make-your-processes-as-first-citizen":{}},"title":{}}],["below",{"_index":729,"text":{"processes/":{},"processes/#a-more-practical-gitops-model":{},"processes/#code-review-starts-with-yourself":{},"processes/#make-it-fluid-with-automatic-propagation":{},"processes/#process-modelisation-and-implementation":{},"processes/#the-problem-of-environment-names":{},"processes/#there-is-no-replacement-for-the-e2e-test":{},"simplicity/":{},"simplicity/#make-it-simple-by-conventions":{},"simplicity/#make-it-simple-by-methodologies-technologies":{}},"title":{}}],["benefit",{"_index":1086,"text":{"simplicity/":{},"simplicity/#the-benefit-of-isolated-entities":{}},"title":{"simplicity/#the-benefit-of-having-simple-entities":{},"simplicity/#the-benefit-of-isolated-entities":{}}}],["best",{"_index":697,"text":{"processes/":{},"processes/#why-companies-fail-in-their-e2e-strategy":{},"simplicity/":{},"simplicity/#with-great-power-new-challenges":{}},"title":{}}],["better",{"_index":843,"text":{"processes/":{},"processes/#improving-the-code-review-process":{},"simplicity/":{},"simplicity/#make-it-simple-by-tagging":{}},"title":{}}],["between",{"_index":174,"text":{"processes/":{},"processes/#a-more-practical-gitops-model":{},"processes/#bridging-the-gap-between-mentalities":{},"processes/#devops-as-a-business-analyst-with-many-technical-skills":{},"processes/#dynamic-environment-as-a-new-paradigm":{},"processes/#make-your-codes-equal":{},"processes/#process-2-the-release-management-process":{},"processes/#process-modelisation-and-implementation":{},"processes/#why-companies-fail-in-their-e2e-strategy":{},"processes/#working":{},"simplicity/":{},"simplicity/#maintaining-the-cause-and-effect-relationship":{},"simplicity/#make-it-simple-by-making-compromises":{},"simplicity/#make-it-simple-by-methodologies-technologies":{},"simplicity/#new-challenges-introduced-by-the-decoupling":{}},"title":{"processes/#bridging-the-gap-between-mentalities":{}}}],["beyond",{"_index":673,"text":{"processes/":{},"processes/#resilience":{},"simplicity/":{},"simplicity/#make-it-simple-by-consistency":{},"simplicity/#the-lego-era":{}},"title":{}}],["binari",{"_index":1018,"text":{"processes/":{},"processes/#manage-your-risk-by-adding-gates":{}},"title":{}}],["block",{"_index":337,"text":{"processes/":{},"processes/#merge-to-master-point-of-no-difficult-return":{},"processes/#process-modelisation-and-implementation":{},"simplicity/":{},"simplicity/#the-lego-era":{}},"title":{}}],["board",{"_index":113,"text":{"processes/":{},"processes/#make-your-processes-as-first-citizen":{}},"title":{}}],["bob",{"_index":526,"text":{"processes/":{},"processes/#process-2-the-release-management-process":{}},"title":{}}],["boolean",{"_index":628,"text":{"processes/":{},"processes/#stable":{}},"title":{}}],["boss",{"_index":523,"text":{"processes/":{},"processes/#process-2-the-release-management-process":{}},"title":{}}],["bot",{"_index":428,"text":{"processes/":{},"processes/#process-1-environment-creation-easy-setup":{},"simplicity/":{},"simplicity/#make-it-simple-by-tagging":{}},"title":{}}],["both",{"_index":1228,"text":{"simplicity/":{},"simplicity/#make-it-simple-by-making-compromises":{}},"title":{}}],["bottleneck",{"_index":1176,"text":{"simplicity/":{},"simplicity/#premature-optimization":{}},"title":{}}],["branch",{"_index":318,"text":{"processes/":{},"processes/#code-review-as-the-last-bastion-of-defense":{},"processes/#design-your-architecture-up-to-your-ambition":{},"processes/#dynamic-environment-as-a-new-paradigm":{},"processes/#make-it-fluid-with-automatic-propagation":{},"processes/#make-your-codes-equal":{},"processes/#merge-to-master-point-of-no-difficult-return":{},"processes/#model-extension-to-include-all-kinds-of-code":{},"processes/#process-1-environment-creation-easy-setup":{},"processes/#process-1-feature-branch-as-the-source-of-truth":{},"processes/#process-1-from-code-to-development-environments":{},"processes/#process-2-the-release-management-process":{},"processes/#the-problem-of-environment-names":{},"simplicity/":{},"simplicity/#make-it-simple-by-tagging":{}},"title":{"processes/#process-1-feature-branch-as-the-source-of-truth":{}}}],["break",{"_index":188,"text":{"processes/":{},"processes/#bridging-the-gap-between-mentalities":{},"processes/#making-e2e-tests-affordable-removing-the-ui-layer":{},"simplicity/":{},"simplicity/#isolating-things":{},"simplicity/#new-challenges-introduced-by-the-decoupling":{}},"title":{}}],["breath",{"_index":584,"text":{"processes/":{},"processes/#healthy":{}},"title":{}}],["bridg",{"_index":173,"text":{"processes/":{},"processes/#bridging-the-gap-between-mentalities":{},"processes/#devops-as-a-business-analyst-with-many-technical-skills":{}},"title":{"processes/#bridging-the-gap-between-mentalities":{}}}],["broken",{"_index":250,"text":{"processes/":{},"processes/#performance-indicators":{}},"title":{}}],["broker",{"_index":1166,"text":{"simplicity/":{},"simplicity/#make-it-simple-by-methodologies-technologies":{}},"title":{}}],["bucket",{"_index":1192,"text":{"simplicity/":{},"simplicity/#make-it-simple-by-tagging":{}},"title":{}}],["bug",{"_index":332,"text":{"processes/":{},"processes/#code-review-as-the-last-bastion-of-defense":{},"processes/#code-review-starts-with-yourself":{},"processes/#merge-to-master-point-of-no-difficult-return":{},"simplicity/":{},"simplicity/#make-it-simple-by-conventions":{}},"title":{}}],["build",{"_index":383,"text":{"processes/":{},"processes/#a-more-practical-gitops-model":{},"processes/#process-1-feature-branch-as-the-source-of-truth":{},"processes/#there-is-no-replacement-for-the-e2e-test":{},"simplicity/":{},"simplicity/#the-benefit-of-having-simple-entities":{},"simplicity/#the-lego-era":{}},"title":{}}],["builder",{"_index":1149,"text":{"simplicity/":{},"simplicity/#the-lego-era":{}},"title":{}}],["built",{"_index":374,"text":{"processes/":{},"processes/#process-1-feature-branch-as-the-source-of-truth":{}},"title":{}}],["busi",{"_index":31,"text":{"":{},"#lessons-learned-as-a-devops-engineer":{},"processes/":{},"processes/#devops-as-a-business-analyst-with-many-technical-skills":{},"processes/#make-your-processes-as-first-citizen":{},"processes/#performance-indicators":{},"processes/#process-2-the-release-management-process":{},"simplicity/":{},"simplicity/#make-it-simple-by-methodologies-technologies":{},"simplicity/#the-lego-era":{}},"title":{"processes/#devops-as-a-business-analyst-with-many-technical-skills":{}}}],["bypass",{"_index":776,"text":{"processes/":{},"processes/#making-e2e-tests-affordable-removing-the-ui-layer":{}},"title":{}}],["cach",{"_index":384,"text":{"processes/":{},"processes/#process-1-feature-branch-as-the-source-of-truth":{}},"title":{}}],["cairo",{"_index":798,"text":{"processes/":{},"processes/#code-review-starts-with-yourself":{}},"title":{}}],["call",{"_index":502,"text":{"processes/":{},"processes/#a-more-practical-gitops-model":{},"processes/#healthy":{},"processes/#process-2-the-release-management-process":{},"simplicity/":{},"simplicity/#isolating-things":{},"simplicity/#premature-optimization":{}},"title":{}}],["candid",{"_index":563,"text":{"processes/":{},"processes/#make-the-fluidity-visible":{},"processes/#working":{}},"title":{}}],["can\u2019t",{"_index":859,"text":{"processes/":{},"processes/#why-staging-and-production-should-be-and-cant-be-identical":{}},"title":{"processes/#why-staging-and-production-should-be-and-cant-be-identical":{}}}],["card",{"_index":814,"text":{"processes/":{},"processes/#code-review-starts-with-yourself":{}},"title":{}}],["care",{"_index":313,"text":{"processes/":{},"processes/#making-testable-code":{},"processes/#process-1-from-code-to-development-environments":{},"processes/#process-modelisation-and-implementation":{},"processes/#working":{}},"title":{}}],["carefulli",{"_index":835,"text":{"processes/":{},"processes/#code-review-starts-with-yourself":{}},"title":{}}],["carri",{"_index":718,"text":{"processes/":{},"processes/#there-is-no-replacement-for-the-e2e-test":{}},"title":{}}],["case",{"_index":698,"text":{"processes/":{},"processes/#is-fluidity-only-for-start-up":{},"processes/#why-companies-fail-in-their-e2e-strategy":{},"processes/#why-staging-and-production-should-be-and-cant-be-identical":{},"simplicity/":{},"simplicity/#make-it-simple-by-making-compromises":{}},"title":{}}],["casualti",{"_index":1226,"text":{"simplicity/":{},"simplicity/#make-it-simple-by-making-compromises":{}},"title":{}}],["cataton",{"_index":401,"text":{"processes/":{},"processes/#dynamic-environment-as-a-new-paradigm":{}},"title":{}}],["caus",{"_index":125,"text":{"processes/":{},"processes/#getting-to-the-root-of-the-problem":{},"processes/#rca-processes-relationship":{},"processes/#resilience":{},"processes/#wrong-mindset":{},"simplicity/":{},"simplicity/#maintaining-the-cause-and-effect-relationship":{}},"title":{"simplicity/#maintaining-the-cause-and-effect-relationship":{}}}],["causat",{"_index":1182,"text":{"simplicity/":{},"simplicity/#maintaining-the-cause-and-effect-relationship":{}},"title":{}}],["cd",{"_index":29,"text":{"":{},"#lessons-learned-as-a-devops-engineer":{},"processes/":{},"processes/#design-your-architecture-up-to-your-ambition":{},"processes/#model-extension-to-include-all-kinds-of-code":{},"processes/#process-1-feature-branch-as-the-source-of-truth":{},"processes/#process-modelisation-and-implementation":{}},"title":{}}],["center",{"_index":825,"text":{"processes/":{},"processes/#code-review-starts-with-yourself":{}},"title":{}}],["central",{"_index":479,"text":{"processes/":{},"processes/#design-your-architecture-up-to-your-ambition":{},"simplicity/":{},"simplicity/#the-lego-era":{}},"title":{}}],["chain",{"_index":997,"text":{"processes/":{},"processes/#make-it-fluid-with-automatic-propagation":{}},"title":{}}],["challeng",{"_index":183,"text":{"processes/":{},"processes/#bridging-the-gap-between-mentalities":{},"processes/#process-1-from-code-to-development-environments":{},"processes/#why-companies-fail-in-their-e2e-strategy":{},"simplicity/":{},"simplicity/#decoupling-price":{},"simplicity/#make-it-simple-by-methodologies-technologies":{},"simplicity/#new-challenges-introduced-by-the-decoupling":{},"simplicity/#with-great-power-new-challenges":{}},"title":{"simplicity/#new-challenges-introduced-by-the-decoupling":{},"simplicity/#with-great-power-new-challenges":{}}}],["champion",{"_index":758,"text":{"processes/":{},"processes/#making-testable-code":{}},"title":{}}],["champion\u2019",{"_index":759,"text":{"processes/":{},"processes/#making-testable-code":{}},"title":{}}],["chanc",{"_index":906,"text":{"processes/":{},"processes/#is-fluidity-only-for-start-up":{},"processes/#process-modelisation-and-implementation":{},"simplicity/":{},"simplicity/#the-lego-era":{}},"title":{}}],["chang",{"_index":87,"text":{"processes/":{},"processes/#a-more-practical-gitops-model":{},"processes/#bridging-the-gap-between-mentalities":{},"processes/#code-review-as-the-last-bastion-of-defense":{},"processes/#dynamic-environment-as-a-new-paradigm":{},"processes/#gitops":{},"processes/#is-fluidity-only-for-start-up":{},"processes/#make-it-fluid-with-automatic-propagation":{},"processes/#process-1-environment-creation-easy-setup":{},"processes/#process-2-the-release-management-process":{},"processes/#stable":{},"processes/#wrong-mindset":{},"simplicity/":{},"simplicity/#doing-one-thing-and-doing-it-well":{},"simplicity/#isolating-things":{},"simplicity/#maintaining-the-cause-and-effect-relationship":{},"simplicity/#the-benefit-of-isolated-entities":{}},"title":{}}],["channel",{"_index":279,"text":{"processes/":{},"processes/#model-extension-to-include-all-kinds-of-code":{},"processes/#process-1-environment-creation-easy-setup":{},"processes/#wrong-mindset":{},"simplicity/":{},"simplicity/#make-it-simple-by-tagging":{}},"title":{}}],["chao",{"_index":669,"text":{"processes/":{},"processes/#resilience":{}},"title":{}}],["chaotic",{"_index":662,"text":{"processes/":{},"processes/#resilience":{}},"title":{}}],["chapter",{"_index":40,"text":{"":{},"#lessons-learned-as-a-devops-engineer":{},"processes/":{},"processes/#the-problem-of-environment-names":{},"simplicity/":{},"simplicity/#make-it-simple-by-consistency":{},"simplicity/#make-it-simple-by-making-compromises":{},"simplicity/#the-lego-era":{}},"title":{}}],["chart",{"_index":967,"text":{"processes/":{},"processes/#a-more-practical-gitops-model":{},"processes/#make-it-fluid-with-automatic-propagation":{}},"title":{}}],["check",{"_index":556,"text":{"processes/":{},"processes/#code-review-as-the-last-bastion-of-defense":{},"processes/#healthy":{},"processes/#process-modelisation-and-implementation":{},"processes/#there-is-no-replacement-for-the-e2e-test":{},"processes/#working":{}},"title":{}}],["chemist",{"_index":802,"text":{"processes/":{},"processes/#code-review-starts-with-yourself":{}},"title":{}}],["china",{"_index":716,"text":{"processes/":{},"processes/#there-is-no-replacement-for-the-e2e-test":{}},"title":{}}],["choic",{"_index":1138,"text":{"simplicity/":{},"simplicity/#make-it-simple-by-making-compromises":{},"simplicity/#the-lego-era":{}},"title":{}}],["choos",{"_index":631,"text":{"processes/":{},"processes/#stable":{}},"title":{}}],["chunk",{"_index":642,"text":{"processes/":{},"processes/#stable":{}},"title":{}}],["ci",{"_index":28,"text":{"":{},"#lessons-learned-as-a-devops-engineer":{},"processes/":{},"processes/#performance-indicators":{},"processes/#process-modelisation-and-implementation":{},"processes/#wrong-mindset":{},"simplicity/":{},"simplicity/#make-it-simple-by-tagging":{}},"title":{}}],["ci/cd",{"_index":908,"text":{"processes/":{},"processes/#process-modelisation-and-implementation":{}},"title":{}}],["citizen",{"_index":102,"text":{"processes/":{},"processes/#make-your-processes-as-first-citizen":{},"processes/#making-e2e-tests-affordable-removing-the-ui-layer":{}},"title":{"processes/#make-your-processes-as-first-citizen":{}}}],["clariti",{"_index":1202,"text":{"simplicity/":{},"simplicity/#make-it-simple-by-consistency":{}},"title":{}}],["class",{"_index":774,"text":{"processes/":{},"processes/#making-e2e-tests-affordable-removing-the-ui-layer":{},"simplicity/":{},"simplicity/#doing-one-thing-and-doing-it-well":{}},"title":{}}],["claud",{"_index":796,"text":{"processes/":{},"processes/#code-review-starts-with-yourself":{}},"title":{}}],["clear",{"_index":219,"text":{"processes/":{},"processes/#the-problem-of-environment-names":{},"processes/#tools-are-not-the-way-to-talk-about-processes":{},"simplicity/":{},"simplicity/#maintaining-the-cause-and-effect-relationship":{}},"title":{}}],["click",{"_index":1052,"text":{"simplicity/":{},"simplicity/#with-great-power-new-challenges":{}},"title":{}}],["clinic",{"_index":571,"text":{"processes/":{},"processes/#healthy":{}},"title":{}}],["clone",{"_index":864,"text":{"processes/":{},"processes/#why-staging-and-production-should-be-and-cant-be-identical":{}},"title":{}}],["closer",{"_index":1016,"text":{"processes/":{},"processes/#manage-your-risk-by-adding-gates":{}},"title":{}}],["cloud",{"_index":21,"text":{"":{},"#lessons-learned-as-a-devops-engineer":{},"processes/":{},"processes/#gitops":{},"processes/#process-1-from-code-to-development-environments":{},"simplicity/":{},"simplicity/#make-it-simple-by-tagging":{},"simplicity/#with-great-power-new-challenges":{}},"title":{}}],["cluster",{"_index":1060,"text":{"simplicity/":{},"simplicity/#with-great-power-new-challenges":{}},"title":{}}],["code",{"_index":49,"text":{"":{},"#lessons-learned-as-a-devops-engineer":{},"processes/":{},"processes/#bridging-the-gap-between-mentalities":{},"processes/#code-review-as-the-last-bastion-of-defense":{},"processes/#code-review-starts-with-yourself":{},"processes/#dynamic-environment-as-a-new-paradigm":{},"processes/#getting-to-the-root-of-the-problem":{},"processes/#gitops":{},"processes/#improving-the-code-review-process":{},"processes/#make-the-fluidity-visible":{},"processes/#make-your-codes-equal":{},"processes/#making-testable-code":{},"processes/#merge-to-master-point-of-no-difficult-return":{},"processes/#model-extension-to-include-all-kinds-of-code":{},"processes/#process-1-feature-branch-as-the-source-of-truth":{},"processes/#process-1-from-code-to-development-environments":{},"processes/#stable":{},"processes/#the-problem-of-environment-names":{},"processes/#understand-requirements":{},"simplicity/":{},"simplicity/#maintaining-the-cause-and-effect-relationship":{},"simplicity/#make-it-simple-by-consistency":{},"simplicity/#make-it-simple-by-conventions":{},"simplicity/#make-it-simple-by-methodologies-technologies":{},"simplicity/#make-it-simple-by-tagging":{},"simplicity/#premature-optimization":{},"simplicity/#with-great-power-new-challenges":{}},"title":{"processes/#code-review-as-the-last-bastion-of-defense":{},"processes/#code-review-starts-with-yourself":{},"processes/#improving-the-code-review-process":{},"processes/#make-your-codes-equal":{},"processes/#making-testable-code":{},"processes/#model-extension-to-include-all-kinds-of-code":{},"processes/#process-1-from-code-to-development-environments":{}}}],["codebas",{"_index":781,"text":{"processes/":{},"processes/#code-review-as-the-last-bastion-of-defense":{}},"title":{}}],["cohen",{"_index":7,"text":{"":{},"#lessons-learned-as-a-devops-engineer":{},"processes/":{},"processes/#code-review-starts-with-yourself":{}},"title":{}}],["coher",{"_index":466,"text":{"processes/":{},"processes/#make-your-codes-equal":{},"simplicity/":{},"simplicity/#make-it-simple-by-consistency":{}},"title":{}}],["colleagu",{"_index":513,"text":{"processes/":{},"processes/#process-2-the-release-management-process":{}},"title":{}}],["combin",{"_index":996,"text":{"processes/":{},"processes/#is-fluidity-only-for-start-up":{},"processes/#make-it-fluid-with-automatic-propagation":{}},"title":{}}],["come",{"_index":1070,"text":{"simplicity/":{},"simplicity/#decoupling-price":{},"simplicity/#with-great-power-new-challenges":{}},"title":{}}],["comfort",{"_index":1244,"text":{"simplicity/":{},"simplicity/#make-it-simple-by-making-compromises":{}},"title":{}}],["command",{"_index":355,"text":{"processes/":{},"processes/#process-1-feature-branch-as-the-source-of-truth":{}},"title":{}}],["comment",{"_index":850,"text":{"processes/":{},"processes/#improving-the-code-review-process":{}},"title":{}}],["commerc",{"_index":743,"text":{"processes/":{},"processes/#getting-to-the-root-of-the-problem":{}},"title":{}}],["commit",{"_index":372,"text":{"processes/":{},"processes/#is-fluidity-only-for-start-up":{},"processes/#process-1-feature-branch-as-the-source-of-truth":{}},"title":{}}],["common",{"_index":202,"text":{"processes/":{},"processes/#bridging-the-gap-between-mentalities":{},"simplicity/":{},"simplicity/#make-it-simple-by-consistency":{}},"title":{}}],["commun",{"_index":1091,"text":{"simplicity/":{},"simplicity/#make-it-simple-by-tagging":{},"simplicity/#new-challenges-introduced-by-the-decoupling":{},"simplicity/#the-benefit-of-having-simple-entities":{}},"title":{}}],["compani",{"_index":683,"text":{"processes/":{},"processes/#a-more-practical-gitops-model":{},"processes/#is-fluidity-only-for-start-up":{},"processes/#process-modelisation-and-implementation":{},"processes/#there-is-no-replacement-for-the-e2e-test":{},"processes/#why-companies-fail-in-their-e2e-strategy":{}},"title":{"processes/#why-companies-fail-in-their-e2e-strategy":{}}}],["compar",{"_index":637,"text":{"processes/":{},"processes/#stable":{}},"title":{}}],["comparison",{"_index":918,"text":{"processes/":{},"processes/#process-modelisation-and-implementation":{},"simplicity/":{},"simplicity/#make-it-simple-by-consistency":{}},"title":{}}],["compat",{"_index":727,"text":{"processes/":{},"processes/#is-fluidity-only-for-start-up":{},"processes/#making-testable-code":{},"processes/#there-is-no-replacement-for-the-e2e-test":{}},"title":{}}],["complain",{"_index":274,"text":{"processes/":{},"processes/#wrong-mindset":{}},"title":{}}],["complet",{"_index":225,"text":{"processes/":{},"processes/#making-e2e-tests-affordable-removing-the-ui-layer":{},"processes/#process-1-environment-creation-easy-setup":{},"processes/#the-problem-of-environment-names":{},"processes/#there-is-no-replacement-for-the-e2e-test":{},"processes/#understand-requirements":{}},"title":{}}],["complex",{"_index":72,"text":{"processes/":{},"processes/#a-more-practical-gitops-model":{},"processes/#make-your-codes-equal":{},"processes/#why-staging-and-production-should-be-and-cant-be-identical":{},"simplicity/":{},"simplicity/#decoupling-price":{},"simplicity/#isolate-things-to-their-pure-essence":{},"simplicity/#make-it-simple-by-conventions":{},"simplicity/#simplicity-doesnt-mean-simplistic":{},"simplicity/#the-lego-era":{},"simplicity/#with-great-power-new-challenges":{}},"title":{}}],["complianc",{"_index":865,"text":{"processes/":{},"processes/#why-staging-and-production-should-be-and-cant-be-identical":{},"simplicity/":{},"simplicity/#with-great-power-new-challenges":{}},"title":{}}],["compon",{"_index":377,"text":{"processes/":{},"processes/#design-your-architecture-up-to-your-ambition":{},"processes/#model-extension-to-include-all-kinds-of-code":{},"processes/#process-1-feature-branch-as-the-source-of-truth":{},"processes/#process-modelisation-and-implementation":{},"processes/#resilience":{},"processes/#why-companies-fail-in-their-e2e-strategy":{},"simplicity/":{},"simplicity/#decoupling-price":{},"simplicity/#isolating-things":{},"simplicity/#make-it-simple-by-methodologies-technologies":{},"simplicity/#new-challenges-introduced-by-the-decoupling":{},"simplicity/#the-benefit-of-having-simple-entities":{},"simplicity/#the-benefit-of-isolated-entities":{}},"title":{}}],["compromis",{"_index":215,"text":{"processes/":{},"processes/#make-it-fluid-with-automatic-propagation":{},"processes/#making-e2e-tests-affordable-removing-the-ui-layer":{},"processes/#merge-to-master-point-of-no-difficult-return":{},"processes/#tools-are-not-the-way-to-talk-about-processes":{},"simplicity/":{},"simplicity/#make-it-simple-by-making-compromises":{}},"title":{"simplicity/#make-it-simple-by-making-compromises":{}}}],["comput",{"_index":304,"text":{"processes/":{},"processes/#code-review-starts-with-yourself":{},"processes/#process-1-from-code-to-development-environments":{}},"title":{}}],["concept",{"_index":362,"text":{"processes/":{},"processes/#healthy":{},"processes/#make-your-codes-equal":{},"processes/#making-e2e-tests-affordable-removing-the-ui-layer":{},"processes/#manage-your-risk-by-adding-gates":{},"processes/#process-1-feature-branch-as-the-source-of-truth":{},"processes/#the-problem-of-environment-names":{},"processes/#why-staging-and-production-should-be-and-cant-be-identical":{},"simplicity/":{},"simplicity/#the-lego-era":{}},"title":{}}],["conceptu",{"_index":886,"text":{"processes/":{},"processes/#manage-your-risk-by-adding-gates":{},"processes/#the-problem-of-environment-names":{}},"title":{}}],["condit",{"_index":621,"text":{"processes/":{},"processes/#stable":{}},"title":{}}],["config",{"_index":973,"text":{"processes/":{},"processes/#a-more-practical-gitops-model":{}},"title":{}}],["confus",{"_index":1099,"text":{"simplicity/":{},"simplicity/#simplicity-doesnt-mean-simplistic":{}},"title":{}}],["connect",{"_index":411,"text":{"processes/":{},"processes/#a-more-practical-gitops-model":{},"processes/#dynamic-environment-as-a-new-paradigm":{},"processes/#process-1-environment-creation-easy-setup":{}},"title":{}}],["consequ",{"_index":1239,"text":{"simplicity/":{},"simplicity/#make-it-simple-by-making-compromises":{}},"title":{}}],["conserv",{"_index":1102,"text":{"simplicity/":{},"simplicity/#decoupling-price":{}},"title":{}}],["consid",{"_index":488,"text":{"processes/":{},"processes/#a-more-practical-gitops-model":{},"processes/#process-2-the-release-management-process":{}},"title":{}}],["consider",{"_index":1156,"text":{"simplicity/":{},"simplicity/#make-it-simple-by-methodologies-technologies":{}},"title":{}}],["consist",{"_index":1041,"text":{"processes/":{},"processes/#is-fluidity-only-for-start-up":{},"simplicity/":{},"simplicity/#make-it-simple-by-consistency":{},"simplicity/#make-it-simple-by-conventions":{}},"title":{"simplicity/#make-it-simple-by-consistency":{}}}],["constraint",{"_index":235,"text":{"processes/":{},"processes/#understand-requirements":{}},"title":{}}],["consum",{"_index":775,"text":{"processes/":{},"processes/#making-e2e-tests-affordable-removing-the-ui-layer":{}},"title":{}}],["contain",{"_index":486,"text":{"processes/":{},"processes/#a-more-practical-gitops-model":{},"processes/#design-your-architecture-up-to-your-ambition":{},"processes/#getting-to-the-root-of-the-problem":{},"processes/#process-2-the-release-management-process":{},"processes/#there-is-no-replacement-for-the-e2e-test":{},"processes/#why-staging-and-production-should-be-and-cant-be-identical":{},"simplicity/":{},"simplicity/#make-it-simple-by-methodologies-technologies":{}},"title":{}}],["continu",{"_index":57,"text":{"":{},"#lessons-learned-as-a-devops-engineer":{},"processes/":{},"processes/#dynamic-environment-as-a-new-paradigm":{},"processes/#merge-to-master-point-of-no-difficult-return":{},"processes/#process-2-the-release-management-process":{},"processes/#resilience":{},"processes/#why-companies-fail-in-their-e2e-strategy":{},"simplicity/":{},"simplicity/#maintaining-the-cause-and-effect-relationship":{},"simplicity/#new-challenges-introduced-by-the-decoupling":{}},"title":{}}],["contract",{"_index":558,"text":{"processes/":{},"processes/#why-companies-fail-in-their-e2e-strategy":{},"processes/#working":{}},"title":{}}],["control",{"_index":60,"text":{"processes/":{},"processes/#bridging-the-gap-between-mentalities":{},"processes/#gitops":{},"processes/#is-fluidity-only-for-start-up":{},"processes/#manage-your-risk-by-adding-gates":{},"simplicity/":{},"simplicity/#make-it-simple-by-tagging":{}},"title":{}}],["convent",{"_index":1004,"text":{"processes/":{},"processes/#make-it-fluid-with-automatic-propagation":{},"simplicity/":{},"simplicity/#make-it-simple-by-conventions":{}},"title":{"simplicity/#make-it-simple-by-conventions":{}}}],["convinc",{"_index":194,"text":{"processes/":{},"processes/#bridging-the-gap-between-mentalities":{}},"title":{}}],["cooker",{"_index":587,"text":{"processes/":{},"processes/#healthy":{}},"title":{}}],["core",{"_index":1137,"text":{"simplicity/":{},"simplicity/#the-lego-era":{}},"title":{}}],["correct",{"_index":862,"text":{"processes/":{},"processes/#why-staging-and-production-should-be-and-cant-be-identical":{}},"title":{}}],["correl",{"_index":638,"text":{"processes/":{},"processes/#stable":{}},"title":{}}],["cost",{"_index":340,"text":{"processes/":{},"processes/#dynamic-environment-as-a-new-paradigm":{},"processes/#make-the-fluidity-visible":{},"processes/#merge-to-master-point-of-no-difficult-return":{},"processes/#process-1-environment-creation-easy-setup":{},"simplicity/":{},"simplicity/#decoupling-price":{}},"title":{}}],["coupl",{"_index":741,"text":{"processes/":{},"processes/#getting-to-the-root-of-the-problem":{},"processes/#process-modelisation-and-implementation":{},"simplicity/":{},"simplicity/#isolating-things":{}},"title":{}}],["cours",{"_index":606,"text":{"processes/":{},"processes/#healthy":{}},"title":{}}],["cpu",{"_index":611,"text":{"processes/":{},"processes/#healthy":{}},"title":{}}],["crack",{"_index":696,"text":{"processes/":{},"processes/#why-companies-fail-in-their-e2e-strategy":{}},"title":{}}],["creat",{"_index":231,"text":{"processes/":{},"processes/#dynamic-environment-as-a-new-paradigm":{},"processes/#make-it-fluid-with-automatic-propagation":{},"processes/#making-e2e-tests-affordable-removing-the-ui-layer":{},"processes/#making-testable-code":{},"processes/#model-extension-to-include-all-kinds-of-code":{},"processes/#process-1-environment-creation-easy-setup":{},"processes/#process-1-feature-branch-as-the-source-of-truth":{},"processes/#process-2-the-release-management-process":{},"processes/#process-modelisation-and-implementation":{},"processes/#stable":{},"processes/#understand-requirements":{},"processes/#working":{},"simplicity/":{},"simplicity/#maintaining-the-cause-and-effect-relationship":{},"simplicity/#make-it-simple-by-methodologies-technologies":{},"simplicity/#make-it-simple-by-tagging":{},"simplicity/#with-great-power-new-challenges":{}},"title":{}}],["create/deploi",{"_index":1053,"text":{"simplicity/":{},"simplicity/#with-great-power-new-challenges":{}},"title":{}}],["creation",{"_index":423,"text":{"processes/":{},"processes/#process-1-environment-creation-easy-setup":{}},"title":{"processes/#process-1-environment-creation-easy-setup":{}}}],["creativ",{"_index":1047,"text":{"processes/":{},"processes/#is-fluidity-only-for-start-up":{}},"title":{}}],["credenti",{"_index":1195,"text":{"simplicity/":{},"simplicity/#make-it-simple-by-tagging":{}},"title":{}}],["credit",{"_index":18,"text":{"":{},"#lessons-learned-as-a-devops-engineer":{},"processes/":{},"processes/#bridging-the-gap-between-mentalities":{},"processes/#merge-to-master-point-of-no-difficult-return":{},"processes/#performance-indicators":{},"processes/#process-2-the-release-management-process":{},"processes/#tools-are-not-the-way-to-talk-about-processes":{},"simplicity/":{},"simplicity/#decoupling-price":{},"simplicity/#isolate-things-to-their-pure-essence":{},"simplicity/#make-it-simple-by-consistency":{},"simplicity/#the-lego-era":{}},"title":{}}],["criteria",{"_index":1017,"text":{"processes/":{},"processes/#manage-your-risk-by-adding-gates":{}},"title":{}}],["cron",{"_index":975,"text":{"processes/":{},"processes/#a-more-practical-gitops-model":{}},"title":{}}],["cross",{"_index":184,"text":{"processes/":{},"processes/#bridging-the-gap-between-mentalities":{}},"title":{}}],["crucial",{"_index":1030,"text":{"processes/":{},"processes/#make-the-fluidity-visible":{}},"title":{}}],["crystal",{"_index":1184,"text":{"simplicity/":{},"simplicity/#maintaining-the-cause-and-effect-relationship":{}},"title":{}}],["cultur",{"_index":24,"text":{"":{},"#lessons-learned-as-a-devops-engineer":{}},"title":{}}],["curv",{"_index":1204,"text":{"simplicity/":{},"simplicity/#make-it-simple-by-consistency":{}},"title":{}}],["custom",{"_index":289,"text":{"processes/":{},"processes/#is-fluidity-only-for-start-up":{},"processes/#process-2-the-release-management-process":{},"processes/#why-staging-and-production-should-be-and-cant-be-identical":{},"processes/#working":{},"processes/#wrong-mindset":{},"simplicity/":{},"simplicity/#make-it-simple-by-tagging":{}},"title":{}}],["customer\u2019",{"_index":1034,"text":{"processes/":{},"processes/#is-fluidity-only-for-start-up":{}},"title":{}}],["cycl",{"_index":260,"text":{"processes/":{},"processes/#performance-indicators":{},"processes/#wrong-mindset":{},"simplicity/":{},"simplicity/#the-benefit-of-isolated-entities":{}},"title":{}}],["dai",{"_index":737,"text":{"processes/":{},"processes/#there-is-no-replacement-for-the-e2e-test":{}},"title":{}}],["dashboard",{"_index":287,"text":{"processes/":{},"processes/#make-the-fluidity-visible":{},"processes/#process-2-the-release-management-process":{},"processes/#wrong-mindset":{},"simplicity/":{},"simplicity/#make-it-simple-by-consistency":{}},"title":{}}],["data",{"_index":51,"text":{"":{},"#lessons-learned-as-a-devops-engineer":{},"processes/":{},"processes/#code-review-starts-with-yourself":{},"processes/#devops-as-a-business-analyst-with-many-technical-skills":{},"processes/#healthy":{},"processes/#resilience":{},"processes/#why-staging-and-production-should-be-and-cant-be-identical":{},"simplicity/":{},"simplicity/#make-it-simple-by-tagging":{}},"title":{}}],["databas",{"_index":530,"text":{"processes/":{},"processes/#process-2-the-release-management-process":{},"simplicity/":{},"simplicity/#the-lego-era":{}},"title":{}}],["dba",{"_index":531,"text":{"processes/":{},"processes/#process-2-the-release-management-process":{}},"title":{}}],["deal",{"_index":80,"text":{"processes/":{},"processes/#make-the-fluidity-visible":{},"simplicity/":{},"simplicity/#make-it-simple-by-making-compromises":{},"simplicity/#premature-optimization":{}},"title":{}}],["dealt",{"_index":462,"text":{"processes/":{},"processes/#make-your-codes-equal":{}},"title":{}}],["decad",{"_index":367,"text":{"processes/":{},"processes/#process-1-feature-branch-as-the-source-of-truth":{}},"title":{}}],["decentr",{"_index":482,"text":{"processes/":{},"processes/#design-your-architecture-up-to-your-ambition":{}},"title":{}}],["decis",{"_index":999,"text":{"processes/":{},"processes/#make-it-fluid-with-automatic-propagation":{},"processes/#manage-your-risk-by-adding-gates":{},"simplicity/":{},"simplicity/#make-it-simple-by-conventions":{},"simplicity/#make-it-simple-by-making-compromises":{}},"title":{}}],["deck",{"_index":830,"text":{"processes/":{},"processes/#code-review-starts-with-yourself":{}},"title":{}}],["declar",{"_index":1028,"text":{"processes/":{},"processes/#make-the-fluidity-visible":{},"simplicity/":{},"simplicity/#make-it-simple-by-methodologies-technologies":{}},"title":{}}],["decompos",{"_index":962,"text":{"processes/":{},"processes/#a-more-practical-gitops-model":{},"simplicity/":{},"simplicity/#decoupling-price":{},"simplicity/#isolating-things":{},"simplicity/#simplicity-doesnt-mean-simplistic":{}},"title":{}}],["decoupl",{"_index":930,"text":{"processes/":{},"processes/#a-more-practical-gitops-model":{},"processes/#gitops":{},"processes/#process-modelisation-and-implementation":{},"simplicity/":{},"simplicity/#decoupling-price":{},"simplicity/#isolating-things":{},"simplicity/#make-it-simple-by-methodologies-technologies":{},"simplicity/#make-it-simple-by-tagging":{},"simplicity/#the-lego-era":{}},"title":{"simplicity/#decoupling-price":{},"simplicity/#new-challenges-introduced-by-the-decoupling":{}}}],["decreas",{"_index":692,"text":{"processes/":{},"processes/#why-companies-fail-in-their-e2e-strategy":{},"simplicity/":{},"simplicity/#premature-optimization":{}},"title":{}}],["dedic",{"_index":305,"text":{"processes/":{},"processes/#process-1-environment-creation-easy-setup":{},"processes/#process-1-from-code-to-development-environments":{},"processes/#why-companies-fail-in-their-e2e-strategy":{}},"title":{}}],["deeper",{"_index":1209,"text":{"simplicity/":{},"simplicity/#make-it-simple-by-consistency":{}},"title":{}}],["defect",{"_index":789,"text":{"processes/":{},"processes/#code-review-as-the-last-bastion-of-defense":{}},"title":{}}],["defend",{"_index":1242,"text":{"simplicity/":{},"simplicity/#make-it-simple-by-making-compromises":{}},"title":{}}],["defens",{"_index":682,"text":{"processes/":{},"processes/#resilience":{}},"title":{"processes/#code-review-as-the-last-bastion-of-defense":{}}}],["defin",{"_index":148,"text":{"processes/":{},"processes/#gitops":{},"processes/#make-it-fluid-with-automatic-propagation":{},"processes/#performance-indicators":{},"processes/#process-modelisation-and-implementation":{},"processes/#rca-processes-relationship":{},"simplicity/":{},"simplicity/#isolate-things-to-their-pure-essence":{}},"title":{}}],["definit",{"_index":254,"text":{"processes/":{},"processes/#making-testable-code":{},"processes/#performance-indicators":{},"processes/#working":{},"simplicity/":{},"simplicity/#isolate-things-to-their-pure-essence":{}},"title":{}}],["degrad",{"_index":633,"text":{"processes/":{},"processes/#stable":{}},"title":{}}],["degre",{"_index":1214,"text":{"simplicity/":{},"simplicity/#make-it-simple-by-conventions":{}},"title":{}}],["delet",{"_index":417,"text":{"processes/":{},"processes/#dynamic-environment-as-a-new-paradigm":{}},"title":{}}],["demand",{"_index":308,"text":{"processes/":{},"processes/#code-review-as-the-last-bastion-of-defense":{},"processes/#manage-your-risk-by-adding-gates":{},"processes/#process-1-from-code-to-development-environments":{}},"title":{}}],["depart",{"_index":920,"text":{"processes/":{},"processes/#process-modelisation-and-implementation":{}},"title":{}}],["depend",{"_index":236,"text":{"processes/":{},"processes/#a-more-practical-gitops-model":{},"processes/#design-your-architecture-up-to-your-ambition":{},"processes/#dynamic-environment-as-a-new-paradigm":{},"processes/#make-it-fluid-with-automatic-propagation":{},"processes/#make-your-codes-equal":{},"processes/#process-modelisation-and-implementation":{},"processes/#understand-requirements":{},"simplicity/":{},"simplicity/#isolating-things":{},"simplicity/#new-challenges-introduced-by-the-decoupling":{}},"title":{}}],["deploi",{"_index":295,"text":{"processes/":{},"processes/#a-more-practical-gitops-model":{},"processes/#dynamic-environment-as-a-new-paradigm":{},"processes/#is-fluidity-only-for-start-up":{},"processes/#make-it-fluid-with-automatic-propagation":{},"processes/#make-your-codes-equal":{},"processes/#model-extension-to-include-all-kinds-of-code":{},"processes/#process-1-environment-creation-easy-setup":{},"processes/#process-1-feature-branch-as-the-source-of-truth":{},"processes/#process-1-from-code-to-development-environments":{},"processes/#process-2-the-release-management-process":{},"processes/#process-modelisation-and-implementation":{},"processes/#working":{},"simplicity/":{},"simplicity/#the-benefit-of-having-simple-entities":{}},"title":{}}],["deploy",{"_index":364,"text":{"processes/":{},"processes/#a-more-practical-gitops-model":{},"processes/#design-your-architecture-up-to-your-ambition":{},"processes/#dynamic-environment-as-a-new-paradigm":{},"processes/#process-1-feature-branch-as-the-source-of-truth":{},"processes/#process-2-the-release-management-process":{},"simplicity/":{},"simplicity/#make-it-simple-by-consistency":{}},"title":{}}],["describ",{"_index":369,"text":{"processes/":{},"processes/#a-more-practical-gitops-model":{},"processes/#manage-your-risk-by-adding-gates":{},"processes/#model-extension-to-include-all-kinds-of-code":{},"processes/#process-1-feature-branch-as-the-source-of-truth":{},"simplicity/":{},"simplicity/#isolating-things":{},"simplicity/#the-lego-era":{}},"title":{}}],["descript",{"_index":161,"text":{"processes/":{},"processes/#devops-as-a-business-analyst-with-many-technical-skills":{}},"title":{}}],["design",{"_index":90,"text":{"processes/":{},"processes/#code-review-starts-with-yourself":{},"processes/#getting-to-the-root-of-the-problem":{},"processes/#make-the-fluidity-visible":{},"processes/#making-testable-code":{},"processes/#there-is-no-replacement-for-the-e2e-test":{},"processes/#tools-are-not-the-way-to-talk-about-processes":{},"processes/#understand-requirements":{},"processes/#why-companies-fail-in-their-e2e-strategy":{},"simplicity/":{},"simplicity/#maintaining-the-cause-and-effect-relationship":{},"simplicity/#make-it-simple-by-making-compromises":{},"simplicity/#premature-optimization":{},"simplicity/#the-lego-era":{},"simplicity/#with-great-power-new-challenges":{}},"title":{"processes/#design-your-architecture-up-to-your-ambition":{}}}],["desir",{"_index":916,"text":{"processes/":{},"processes/#process-modelisation-and-implementation":{}},"title":{}}],["despit",{"_index":650,"text":{"processes/":{},"processes/#resilience":{},"simplicity/":{},"simplicity/#new-challenges-introduced-by-the-decoupling":{}},"title":{}}],["destroi",{"_index":391,"text":{"processes/":{},"processes/#dynamic-environment-as-a-new-paradigm":{},"processes/#improving-the-code-review-process":{}},"title":{}}],["destruct",{"_index":439,"text":{"processes/":{},"processes/#process-1-environment-creation-easy-setup":{}},"title":{}}],["detail",{"_index":944,"text":{"processes/":{},"processes/#a-more-practical-gitops-model":{},"processes/#gitops":{}},"title":{}}],["detect",{"_index":706,"text":{"processes/":{},"processes/#make-it-fluid-with-automatic-propagation":{},"processes/#why-companies-fail-in-their-e2e-strategy":{}},"title":{}}],["develop",{"_index":36,"text":{"":{},"#lessons-learned-as-a-devops-engineer":{},"processes/":{},"processes/#a-more-practical-gitops-model":{},"processes/#bridging-the-gap-between-mentalities":{},"processes/#code-review-as-the-last-bastion-of-defense":{},"processes/#dynamic-environment-as-a-new-paradigm":{},"processes/#gitops":{},"processes/#make-it-fluid-with-automatic-propagation":{},"processes/#make-the-fluidity-visible":{},"processes/#make-your-codes-equal":{},"processes/#make-your-processes-as-first-citizen":{},"processes/#making-testable-code":{},"processes/#model-extension-to-include-all-kinds-of-code":{},"processes/#process-1-environment-creation-easy-setup":{},"processes/#process-1-feature-branch-as-the-source-of-truth":{},"processes/#process-1-from-code-to-development-environments":{},"processes/#the-problem-of-environment-names":{},"processes/#understand-requirements":{},"processes/#why-companies-fail-in-their-e2e-strategy":{},"processes/#wrong-mindset":{},"simplicity/":{},"simplicity/#isolating-things":{},"simplicity/#make-it-simple-by-conventions":{},"simplicity/#make-it-simple-by-methodologies-technologies":{},"simplicity/#the-lego-era":{}},"title":{"processes/#process-1-from-code-to-development-environments":{}}}],["devop",{"_index":3,"text":{"":{},"#lessons-learned-as-a-devops-engineer":{},"processes/":{},"processes/#bridging-the-gap-between-mentalities":{},"processes/#devops-as-a-business-analyst-with-many-technical-skills":{},"processes/#dynamic-environment-as-a-new-paradigm":{},"processes/#healthy":{},"processes/#is-fluidity-only-for-start-up":{},"processes/#make-it-fluid-with-automatic-propagation":{},"processes/#make-the-fluidity-visible":{},"processes/#process-2-the-release-management-process":{},"processes/#process-modelisation-and-implementation":{},"processes/#resilience":{},"processes/#the-problem-of-environment-names":{},"processes/#working":{},"processes/#wrong-mindset":{},"simplicity/":{},"simplicity/#make-it-simple-by-making-compromises":{},"simplicity/#striving-for-simplicity-at-all-layers":{},"simplicity/#the-lego-era":{},"simplicity/#with-great-power-new-challenges":{}},"title":{"#lessons-learned-as-a-devops-engineer":{},"processes/#devops-as-a-business-analyst-with-many-technical-skills":{}}}],["devops\u2019",{"_index":187,"text":{"processes/":{},"processes/#bridging-the-gap-between-mentalities":{}},"title":{}}],["differ",{"_index":464,"text":{"processes/":{},"processes/#gitops":{},"processes/#make-the-fluidity-visible":{},"processes/#make-your-codes-equal":{},"processes/#process-2-the-release-management-process":{},"simplicity/":{},"simplicity/#make-it-simple-by-consistency":{},"simplicity/#new-challenges-introduced-by-the-decoupling":{},"simplicity/#the-benefit-of-isolated-entities":{}},"title":{}}],["difficult",{"_index":301,"text":{"processes/":{},"processes/#design-your-architecture-up-to-your-ambition":{},"processes/#merge-to-master-point-of-no-difficult-return":{},"processes/#process-1-from-code-to-development-environments":{},"processes/#process-modelisation-and-implementation":{}},"title":{"processes/#merge-to-master-point-of-no-difficult-return":{}}}],["digit",{"_index":817,"text":{"processes/":{},"processes/#code-review-starts-with-yourself":{}},"title":{}}],["direct",{"_index":954,"text":{"processes/":{},"processes/#a-more-practical-gitops-model":{}},"title":{}}],["dirti",{"_index":342,"text":{"processes/":{},"processes/#merge-to-master-point-of-no-difficult-return":{}},"title":{}}],["disappear",{"_index":659,"text":{"processes/":{},"processes/#resilience":{},"simplicity/":{},"simplicity/#make-it-simple-by-tagging":{}},"title":{}}],["disciplin",{"_index":663,"text":{"processes/":{},"processes/#resilience":{}},"title":{}}],["discov",{"_index":378,"text":{"processes/":{},"processes/#process-1-feature-branch-as-the-source-of-truth":{},"simplicity/":{},"simplicity/#new-challenges-introduced-by-the-decoupling":{}},"title":{}}],["discoveri",{"_index":1110,"text":{"simplicity/":{},"simplicity/#new-challenges-introduced-by-the-decoupling":{}},"title":{}}],["discuss",{"_index":894,"text":{"processes/":{},"processes/#gitops":{},"processes/#the-problem-of-environment-names":{},"simplicity/":{},"simplicity/#make-it-simple-by-consistency":{}},"title":{}}],["diseas",{"_index":573,"text":{"processes/":{},"processes/#healthy":{}},"title":{}}],["dispatch",{"_index":591,"text":{"processes/":{},"processes/#healthy":{}},"title":{}}],["displai",{"_index":570,"text":{"processes/":{},"processes/#healthy":{}},"title":{}}],["dissimilar",{"_index":872,"text":{"processes/":{},"processes/#why-staging-and-production-should-be-and-cant-be-identical":{}},"title":{}}],["distil",{"_index":1082,"text":{"simplicity/":{},"simplicity/#isolate-things-to-their-pure-essence":{}},"title":{}}],["distinct",{"_index":635,"text":{"processes/":{},"processes/#process-modelisation-and-implementation":{},"processes/#stable":{}},"title":{}}],["distract",{"_index":208,"text":{"processes/":{},"processes/#tools-are-not-the-way-to-talk-about-processes":{},"processes/#why-companies-fail-in-their-e2e-strategy":{}},"title":{}}],["divers",{"_index":70,"text":{"processes/":{}},"title":{}}],["dn",{"_index":876,"text":{"processes/":{},"processes/#the-problem-of-environment-names":{},"simplicity/":{},"simplicity/#the-lego-era":{}},"title":{}}],["do",{"_index":539,"text":{"processes/":{},"processes/#getting-to-the-root-of-the-problem":{},"processes/#working":{},"simplicity/":{}},"title":{"simplicity/#doing-one-thing-and-doing-it-well":{}}}],["doabl",{"_index":867,"text":{"processes/":{},"processes/#the-problem-of-environment-names":{},"processes/#why-staging-and-production-should-be-and-cant-be-identical":{}},"title":{}}],["docker",{"_index":26,"text":{"":{},"#lessons-learned-as-a-devops-engineer":{},"processes/":{},"processes/#a-more-practical-gitops-model":{},"processes/#process-1-feature-branch-as-the-source-of-truth":{},"processes/#process-2-the-release-management-process":{},"processes/#process-modelisation-and-implementation":{},"simplicity/":{},"simplicity/#make-it-simple-by-methodologies-technologies":{}},"title":{}}],["doctor",{"_index":597,"text":{"processes/":{},"processes/#healthy":{},"simplicity/":{},"simplicity/#doing-one-thing-and-doing-it-well":{}},"title":{}}],["document",{"_index":224,"text":{"processes/":{},"processes/#is-fluidity-only-for-start-up":{},"processes/#process-modelisation-and-implementation":{},"processes/#understand-requirements":{},"simplicity/":{},"simplicity/#premature-optimization":{}},"title":{}}],["dod",{"_index":760,"text":{"processes/":{},"processes/#making-testable-code":{}},"title":{}}],["doesn't",{"_index":736,"text":{"processes/":{},"processes/#there-is-no-replacement-for-the-e2e-test":{}},"title":{}}],["doesn\u2019t",{"_index":507,"text":{"processes/":{},"processes/#getting-to-the-root-of-the-problem":{},"processes/#gitops":{},"processes/#process-2-the-release-management-process":{},"simplicity/":{},"simplicity/#premature-optimization":{},"simplicity/#simplicity-doesnt-mean-simplistic":{}},"title":{"simplicity/#simplicity-doesnt-mean-simplistic":{}}}],["domain",{"_index":953,"text":{"processes/":{},"processes/#a-more-practical-gitops-model":{},"processes/#make-it-fluid-with-automatic-propagation":{}},"title":{}}],["don't",{"_index":353,"text":{"processes/":{},"processes/#process-1-feature-branch-as-the-source-of-truth":{},"simplicity/":{},"simplicity/#make-it-simple-by-conventions":{},"simplicity/#new-challenges-introduced-by-the-decoupling":{}},"title":{}}],["done",{"_index":73,"text":{"processes/":{},"processes/#improving-the-code-review-process":{},"processes/#making-testable-code":{},"processes/#rca-processes-relationship":{},"processes/#the-problem-of-environment-names":{},"processes/#why-staging-and-production-should-be-and-cant-be-identical":{}},"title":{}}],["don\u2019t",{"_index":206,"text":{"processes/":{},"processes/#code-review-as-the-last-bastion-of-defense":{},"processes/#getting-to-the-root-of-the-problem":{},"processes/#resilience":{},"processes/#tools-are-not-the-way-to-talk-about-processes":{},"processes/#why-companies-fail-in-their-e2e-strategy":{},"processes/#working":{},"processes/#wrong-mindset":{},"simplicity/":{},"simplicity/#make-it-simple-by-conventions":{},"simplicity/#the-lego-era":{}},"title":{}}],["down",{"_index":189,"text":{"processes/":{},"processes/#bridging-the-gap-between-mentalities":{}},"title":{}}],["dozen",{"_index":968,"text":{"processes/":{},"processes/#a-more-practical-gitops-model":{}},"title":{}}],["drive",{"_index":1222,"text":{"simplicity/":{},"simplicity/#make-it-simple-by-conventions":{}},"title":{}}],["driver",{"_index":576,"text":{"processes/":{},"processes/#healthy":{}},"title":{}}],["drug",{"_index":804,"text":{"processes/":{},"processes/#code-review-starts-with-yourself":{}},"title":{}}],["due",{"_index":868,"text":{"processes/":{},"processes/#why-staging-and-production-should-be-and-cant-be-identical":{}},"title":{}}],["durat",{"_index":612,"text":{"processes/":{},"processes/#healthy":{}},"title":{}}],["dure",{"_index":141,"text":{"processes/":{},"processes/#process-1-environment-creation-easy-setup":{},"processes/#rca-processes-relationship":{}},"title":{}}],["dynam",{"_index":388,"text":{"processes/":{},"processes/#dynamic-environment-as-a-new-paradigm":{},"simplicity/":{},"simplicity/#make-it-simple-by-tagging":{},"simplicity/#new-challenges-introduced-by-the-decoupling":{}},"title":{"processes/#dynamic-environment-as-a-new-paradigm":{}}}],["d\u2019etre\u201d",{"_index":1015,"text":{"processes/":{},"processes/#manage-your-risk-by-adding-gates":{}},"title":{}}],["e",{"_index":742,"text":{"processes/":{},"processes/#getting-to-the-root-of-the-problem":{}},"title":{}}],["e2",{"_index":553,"text":{"processes/":{},"processes/#getting-to-the-root-of-the-problem":{},"processes/#making-e2e-tests-affordable-removing-the-ui-layer":{},"processes/#making-testable-code":{},"processes/#stable":{},"processes/#there-is-no-replacement-for-the-e2e-test":{},"processes/#why-companies-fail-in-their-e2e-strategy":{},"processes/#working":{}},"title":{"processes/#making-e2e-tests-affordable-removing-the-ui-layer":{},"processes/#there-is-no-replacement-for-the-e2e-test":{},"processes/#why-companies-fail-in-their-e2e-strategy":{}}}],["each",{"_index":371,"text":{"processes/":{},"processes/#a-more-practical-gitops-model":{},"processes/#design-your-architecture-up-to-your-ambition":{},"processes/#manage-your-risk-by-adding-gates":{},"processes/#process-1-environment-creation-easy-setup":{},"processes/#process-1-feature-branch-as-the-source-of-truth":{},"processes/#process-modelisation-and-implementation":{},"processes/#the-problem-of-environment-names":{},"simplicity/":{},"simplicity/#new-challenges-introduced-by-the-decoupling":{},"simplicity/#the-benefit-of-having-simple-entities":{}},"title":{}}],["earli",{"_index":705,"text":{"processes/":{},"processes/#why-companies-fail-in-their-e2e-strategy":{}},"title":{}}],["earlier",{"_index":780,"text":{"processes/":{},"processes/#code-review-as-the-last-bastion-of-defense":{}},"title":{}}],["easi",{"_index":347,"text":{"processes/":{},"processes/#design-your-architecture-up-to-your-ambition":{},"processes/#dynamic-environment-as-a-new-paradigm":{},"processes/#process-1-environment-creation-easy-setup":{},"processes/#process-1-feature-branch-as-the-source-of-truth":{},"processes/#process-modelisation-and-implementation":{},"processes/#stable":{},"simplicity/":{},"simplicity/#make-it-simple-by-conventions":{}},"title":{"processes/#process-1-environment-creation-easy-setup":{}}}],["easier",{"_index":703,"text":{"processes/":{},"processes/#why-companies-fail-in-their-e2e-strategy":{},"simplicity/":{},"simplicity/#make-it-simple-by-consistency":{},"simplicity/#the-benefit-of-having-simple-entities":{}},"title":{}}],["easili",{"_index":772,"text":{"processes/":{},"processes/#making-e2e-tests-affordable-removing-the-ui-layer":{},"processes/#process-modelisation-and-implementation":{},"simplicity/":{},"simplicity/#make-it-simple-by-tagging":{},"simplicity/#the-lego-era":{}},"title":{}}],["ec",{"_index":1059,"text":{"simplicity/":{},"simplicity/#with-great-power-new-challenges":{}},"title":{}}],["ecosystem",{"_index":300,"text":{"processes/":{},"processes/#process-1-from-code-to-development-environments":{}},"title":{}}],["edit",{"_index":1027,"text":{"processes/":{},"processes/#make-the-fluidity-visible":{}},"title":{}}],["educ",{"_index":792,"text":{"processes/":{},"processes/#code-review-as-the-last-bastion-of-defense":{}},"title":{}}],["effect",{"_index":335,"text":{"processes/":{},"processes/#code-review-as-the-last-bastion-of-defense":{},"processes/#merge-to-master-point-of-no-difficult-return":{},"processes/#process-1-environment-creation-easy-setup":{},"processes/#why-companies-fail-in-their-e2e-strategy":{},"simplicity/":{},"simplicity/#maintaining-the-cause-and-effect-relationship":{},"simplicity/#make-it-simple-by-tagging":{}},"title":{"simplicity/#maintaining-the-cause-and-effect-relationship":{}}}],["effici",{"_index":1200,"text":{"simplicity/":{},"simplicity/#make-it-simple-by-consistency":{},"simplicity/#make-it-simple-by-conventions":{}},"title":{}}],["effort",{"_index":1033,"text":{"processes/":{},"processes/#is-fluidity-only-for-start-up":{},"simplicity/":{},"simplicity/#make-it-simple-by-methodologies-technologies":{}},"title":{}}],["ego",{"_index":186,"text":{"processes/":{},"processes/#bridging-the-gap-between-mentalities":{}},"title":{}}],["einstein",{"_index":10,"text":{"":{},"#lessons-learned-as-a-devops-engineer":{}},"title":{}}],["ek",{"_index":903,"text":{"processes/":{},"processes/#process-modelisation-and-implementation":{}},"title":{}}],["elast",{"_index":654,"text":{"processes/":{},"processes/#resilience":{}},"title":{}}],["electr",{"_index":248,"text":{"processes/":{},"processes/#performance-indicators":{}},"title":{}}],["element",{"_index":1093,"text":{"simplicity/":{},"simplicity/#the-benefit-of-isolated-entities":{}},"title":{}}],["eli",{"_index":6,"text":{"":{},"#lessons-learned-as-a-devops-engineer":{}},"title":{}}],["embarrass",{"_index":596,"text":{"processes/":{},"processes/#healthy":{}},"title":{}}],["embrac",{"_index":1044,"text":{"processes/":{},"processes/#is-fluidity-only-for-start-up":{},"simplicity/":{},"simplicity/#the-lego-era":{}},"title":{}}],["emerg",{"_index":578,"text":{"processes/":{},"processes/#healthy":{}},"title":{}}],["empir",{"_index":543,"text":{"processes/":{},"processes/#working":{}},"title":{}}],["emt",{"_index":575,"text":{"processes/":{},"processes/#healthy":{},"simplicity/":{},"simplicity/#make-it-simple-by-making-compromises":{}},"title":{}}],["encapsul",{"_index":1153,"text":{"simplicity/":{},"simplicity/#doing-one-thing-and-doing-it-well":{}},"title":{}}],["encourag",{"_index":1208,"text":{"simplicity/":{},"simplicity/#make-it-simple-by-consistency":{}},"title":{}}],["end",{"_index":540,"text":{"processes/":{},"processes/#the-problem-of-environment-names":{},"processes/#why-companies-fail-in-their-e2e-strategy":{},"processes/#why-staging-and-production-should-be-and-cant-be-identical":{},"processes/#working":{}},"title":{}}],["energi",{"_index":1103,"text":{"simplicity/":{},"simplicity/#decoupling-price":{}},"title":{}}],["enforc",{"_index":1221,"text":{"simplicity/":{},"simplicity/#make-it-simple-by-conventions":{}},"title":{}}],["engin",{"_index":4,"text":{"":{},"#lessons-learned-as-a-devops-engineer":{},"processes/":{},"processes/#devops-as-a-business-analyst-with-many-technical-skills":{},"processes/#make-the-fluidity-visible":{},"processes/#process-2-the-release-management-process":{},"processes/#process-modelisation-and-implementation":{},"processes/#resilience":{},"simplicity/":{},"simplicity/#doing-one-thing-and-doing-it-well":{},"simplicity/#isolating-things":{},"simplicity/#the-lego-era":{}},"title":{"#lessons-learned-as-a-devops-engineer":{}}}],["enhanc",{"_index":1201,"text":{"simplicity/":{},"simplicity/#make-it-simple-by-consistency":{}},"title":{}}],["ensur",{"_index":557,"text":{"processes/":{},"processes/#making-testable-code":{},"processes/#working":{},"simplicity/":{},"simplicity/#make-it-simple-by-conventions":{},"simplicity/#new-challenges-introduced-by-the-decoupling":{}},"title":{}}],["enter",{"_index":787,"text":{"processes/":{},"processes/#code-review-as-the-last-bastion-of-defense":{}},"title":{}}],["enterpris",{"_index":1031,"text":{"processes/":{},"processes/#is-fluidity-only-for-start-up":{}},"title":{}}],["entir",{"_index":306,"text":{"processes/":{},"processes/#make-your-codes-equal":{},"processes/#merge-to-master-point-of-no-difficult-return":{},"processes/#process-1-from-code-to-development-environments":{}},"title":{}}],["entiti",{"_index":1087,"text":{"simplicity/":{},"simplicity/#doing-one-thing-and-doing-it-well":{},"simplicity/#the-benefit-of-isolated-entities":{}},"title":{"simplicity/#the-benefit-of-having-simple-entities":{},"simplicity/#the-benefit-of-isolated-entities":{}}}],["entri",{"_index":1113,"text":{"simplicity/":{},"simplicity/#new-challenges-introduced-by-the-decoupling":{}},"title":{}}],["environ",{"_index":292,"text":{"processes/":{},"processes/#a-more-practical-gitops-model":{},"processes/#code-review-as-the-last-bastion-of-defense":{},"processes/#design-your-architecture-up-to-your-ambition":{},"processes/#dynamic-environment-as-a-new-paradigm":{},"processes/#is-fluidity-only-for-start-up":{},"processes/#make-it-fluid-with-automatic-propagation":{},"processes/#make-your-codes-equal":{},"processes/#manage-your-risk-by-adding-gates":{},"processes/#model-extension-to-include-all-kinds-of-code":{},"processes/#process-1-environment-creation-easy-setup":{},"processes/#process-1-feature-branch-as-the-source-of-truth":{},"processes/#process-1-from-code-to-development-environments":{},"processes/#process-2-the-release-management-process":{},"processes/#resilience":{},"processes/#stable":{},"processes/#the-problem-of-environment-names":{},"processes/#why-staging-and-production-should-be-and-cant-be-identical":{},"processes/#working":{},"simplicity/":{},"simplicity/#maintaining-the-cause-and-effect-relationship":{}},"title":{"processes/#dynamic-environment-as-a-new-paradigm":{},"processes/#process-1-environment-creation-easy-setup":{},"processes/#process-1-from-code-to-development-environments":{},"processes/#the-problem-of-environment-names":{}}}],["ephemer",{"_index":446,"text":{"processes/":{},"processes/#model-extension-to-include-all-kinds-of-code":{},"processes/#the-problem-of-environment-names":{}},"title":{}}],["equal",{"_index":460,"text":{"processes/":{},"processes/#make-your-codes-equal":{}},"title":{"processes/#make-your-codes-equal":{}}}],["equat",{"_index":777,"text":{"processes/":{},"processes/#making-e2e-tests-affordable-removing-the-ui-layer":{}},"title":{}}],["era",{"_index":1115,"text":{"simplicity/":{},"simplicity/#the-lego-era":{}},"title":{"simplicity/#the-lego-era":{}}}],["error",{"_index":508,"text":{"processes/":{},"processes/#code-review-starts-with-yourself":{},"processes/#process-2-the-release-management-process":{},"processes/#process-modelisation-and-implementation":{}},"title":{}}],["especi",{"_index":1177,"text":{"simplicity/":{},"simplicity/#premature-optimization":{}},"title":{}}],["essenc",{"_index":1080,"text":{"simplicity/":{},"simplicity/#isolate-things-to-their-pure-essence":{}},"title":{"simplicity/#isolate-things-to-their-pure-essence":{}}}],["essenti",{"_index":155,"text":{"processes/":{},"processes/#devops-as-a-business-analyst-with-many-technical-skills":{},"processes/#getting-to-the-root-of-the-problem":{},"processes/#healthy":{},"processes/#why-companies-fail-in-their-e2e-strategy":{},"simplicity/":{},"simplicity/#make-it-simple-by-conventions":{},"simplicity/#premature-optimization":{}},"title":{}}],["establish",{"_index":1186,"text":{"simplicity/":{},"simplicity/#maintaining-the-cause-and-effect-relationship":{}},"title":{}}],["etc",{"_index":851,"text":{"processes/":{},"processes/#improving-the-code-review-process":{}},"title":{}}],["evalu",{"_index":241,"text":{"processes/":{},"processes/#is-fluidity-only-for-start-up":{},"processes/#performance-indicators":{},"processes/#stable":{}},"title":{}}],["even",{"_index":747,"text":{"processes/":{},"processes/#a-more-practical-gitops-model":{},"processes/#getting-to-the-root-of-the-problem":{},"processes/#making-testable-code":{},"simplicity/":{},"simplicity/#make-it-simple-by-making-compromises":{},"simplicity/#premature-optimization":{},"simplicity/#the-lego-era":{}},"title":{}}],["event",{"_index":322,"text":{"processes/":{},"processes/#merge-to-master-point-of-no-difficult-return":{},"processes/#resilience":{},"simplicity/":{},"simplicity/#maintaining-the-cause-and-effect-relationship":{}},"title":{}}],["eventu",{"_index":330,"text":{"processes/":{},"processes/#merge-to-master-point-of-no-difficult-return":{}},"title":{}}],["everyon",{"_index":837,"text":{"processes/":{},"processes/#improving-the-code-review-process":{}},"title":{}}],["everyth",{"_index":98,"text":{"processes/":{},"processes/#process-2-the-release-management-process":{},"processes/#working":{},"simplicity/":{},"simplicity/#decoupling-price":{}},"title":{}}],["evolut",{"_index":1119,"text":{"simplicity/":{},"simplicity/#the-lego-era":{}},"title":{}}],["exact",{"_index":702,"text":{"processes/":{},"processes/#make-it-fluid-with-automatic-propagation":{},"processes/#why-companies-fail-in-their-e2e-strategy":{}},"title":{}}],["exactli",{"_index":929,"text":{"processes/":{},"processes/#process-modelisation-and-implementation":{}},"title":{}}],["examin",{"_index":129,"text":{"processes/":{},"processes/#a-more-practical-gitops-model":{},"processes/#rca-processes-relationship":{}},"title":{}}],["exampl",{"_index":257,"text":{"processes/":{},"processes/#a-more-practical-gitops-model":{},"processes/#getting-to-the-root-of-the-problem":{},"processes/#gitops":{},"processes/#make-it-fluid-with-automatic-propagation":{},"processes/#performance-indicators":{},"processes/#process-1-environment-creation-easy-setup":{},"processes/#process-modelisation-and-implementation":{},"simplicity/":{},"simplicity/#make-it-simple-by-conventions":{},"simplicity/#make-it-simple-by-methodologies-technologies":{},"simplicity/#make-it-simple-by-tagging":{},"simplicity/#the-benefit-of-isolated-entities":{},"simplicity/#with-great-power-new-challenges":{}},"title":{}}],["excel",{"_index":447,"text":{"processes/":{},"processes/#improving-the-code-review-process":{},"processes/#manage-your-risk-by-adding-gates":{},"processes/#model-extension-to-include-all-kinds-of-code":{},"processes/#process-2-the-release-management-process":{}},"title":{}}],["except",{"_index":226,"text":{"processes/":{},"processes/#make-the-fluidity-visible":{},"processes/#understand-requirements":{}},"title":{}}],["exist",{"_index":435,"text":{"processes/":{},"processes/#model-extension-to-include-all-kinds-of-code":{},"processes/#process-1-environment-creation-easy-setup":{}},"title":{}}],["expect",{"_index":158,"text":{"processes/":{},"processes/#code-review-as-the-last-bastion-of-defense":{},"processes/#devops-as-a-business-analyst-with-many-technical-skills":{},"processes/#working":{},"simplicity/":{},"simplicity/#new-challenges-introduced-by-the-decoupling":{}},"title":{}}],["expens",{"_index":685,"text":{"processes/":{},"processes/#making-e2e-tests-affordable-removing-the-ui-layer":{},"processes/#why-companies-fail-in-their-e2e-strategy":{}},"title":{}}],["experi",{"_index":328,"text":{"processes/":{},"processes/#merge-to-master-point-of-no-difficult-return":{},"processes/#resilience":{},"simplicity/":{},"simplicity/#maintaining-the-cause-and-effect-relationship":{},"simplicity/#make-it-simple-by-conventions":{},"simplicity/#make-it-simple-by-making-compromises":{}},"title":{}}],["experiment",{"_index":546,"text":{"processes/":{},"processes/#stable":{},"processes/#why-staging-and-production-should-be-and-cant-be-identical":{},"processes/#working":{}},"title":{}}],["expertis",{"_index":157,"text":{"processes/":{},"processes/#devops-as-a-business-analyst-with-many-technical-skills":{}},"title":{}}],["explain",{"_index":293,"text":{"processes/":{},"processes/#a-more-practical-gitops-model":{},"processes/#process-1-from-code-to-development-environments":{},"simplicity/":{},"simplicity/#make-it-simple-by-methodologies-technologies":{},"simplicity/#the-benefit-of-having-simple-entities":{}},"title":{}}],["explicit",{"_index":939,"text":{"processes/":{},"processes/#gitops":{}},"title":{}}],["explicitli",{"_index":927,"text":{"processes/":{},"processes/#process-modelisation-and-implementation":{}},"title":{}}],["express",{"_index":13,"text":{"":{},"#lessons-learned-as-a-devops-engineer":{}},"title":{}}],["extend",{"_index":451,"text":{"processes/":{},"processes/#model-extension-to-include-all-kinds-of-code":{},"simplicity/":{},"simplicity/#the-benefit-of-having-simple-entities":{}},"title":{}}],["extens",{"_index":443,"text":{"processes/":{}},"title":{"processes/#model-extension-to-include-all-kinds-of-code":{}}}],["extern",{"_index":620,"text":{"processes/":{},"processes/#a-more-practical-gitops-model":{},"processes/#getting-to-the-root-of-the-problem":{},"processes/#stable":{}},"title":{}}],["extrapol",{"_index":860,"text":{"processes/":{},"processes/#why-staging-and-production-should-be-and-cant-be-identical":{}},"title":{}}],["extrem",{"_index":619,"text":{"processes/":{},"processes/#stable":{},"simplicity/":{},"simplicity/#isolate-things-to-their-pure-essence":{}},"title":{}}],["facad",{"_index":1207,"text":{"simplicity/":{},"simplicity/#make-it-simple-by-consistency":{}},"title":{}}],["face",{"_index":646,"text":{"processes/":{},"processes/#resilience":{}},"title":{}}],["facilit",{"_index":1205,"text":{"simplicity/":{},"simplicity/#make-it-simple-by-consistency":{}},"title":{}}],["fact",{"_index":294,"text":{"processes/":{},"processes/#process-1-from-code-to-development-environments":{},"processes/#process-modelisation-and-implementation":{},"processes/#the-problem-of-environment-names":{}},"title":{}}],["factor",{"_index":1078,"text":{"simplicity/":{},"simplicity/#maintaining-the-cause-and-effect-relationship":{},"simplicity/#striving-for-simplicity-at-all-layers":{}},"title":{}}],["factori",{"_index":715,"text":{"processes/":{},"processes/#there-is-no-replacement-for-the-e2e-test":{}},"title":{}}],["fail",{"_index":684,"text":{"processes/":{},"processes/#why-companies-fail-in-their-e2e-strategy":{}},"title":{"processes/#why-companies-fail-in-their-e2e-strategy":{}}}],["failur",{"_index":651,"text":{"processes/":{},"processes/#getting-to-the-root-of-the-problem":{},"processes/#resilience":{},"simplicity/":{},"simplicity/#isolating-things":{},"simplicity/#new-challenges-introduced-by-the-decoupling":{}},"title":{}}],["fall",{"_index":695,"text":{"processes/":{},"processes/#why-companies-fail-in-their-e2e-strategy":{}},"title":{}}],["familiar",{"_index":878,"text":{"processes/":{},"processes/#the-problem-of-environment-names":{}},"title":{}}],["fast",{"_index":349,"text":{"processes/":{},"processes/#making-testable-code":{},"processes/#process-1-feature-branch-as-the-source-of-truth":{}},"title":{}}],["father",{"_index":795,"text":{"processes/":{},"processes/#code-review-starts-with-yourself":{}},"title":{}}],["fd",{"_index":958,"text":{"processes/":{},"processes/#a-more-practical-gitops-model":{},"processes/#make-it-fluid-with-automatic-propagation":{}},"title":{}}],["fd1",{"_index":979,"text":{"processes/":{},"processes/#a-more-practical-gitops-model":{},"processes/#make-it-fluid-with-automatic-propagation":{}},"title":{}}],["fear",{"_index":691,"text":{"processes/":{},"processes/#why-companies-fail-in-their-e2e-strategy":{}},"title":{}}],["feasibl",{"_index":753,"text":{"processes/":{},"processes/#making-testable-code":{}},"title":{}}],["featur",{"_index":343,"text":{"processes/":{},"processes/#a-more-practical-gitops-model":{},"processes/#code-review-as-the-last-bastion-of-defense":{},"processes/#design-your-architecture-up-to-your-ambition":{},"processes/#dynamic-environment-as-a-new-paradigm":{},"processes/#make-your-codes-equal":{},"processes/#making-testable-code":{},"processes/#model-extension-to-include-all-kinds-of-code":{},"processes/#process-1-environment-creation-easy-setup":{},"processes/#process-1-feature-branch-as-the-source-of-truth":{}},"title":{"processes/#process-1-feature-branch-as-the-source-of-truth":{}}}],["feel",{"_index":356,"text":{"processes/":{},"processes/#process-1-feature-branch-as-the-source-of-truth":{}},"title":{}}],["few",{"_index":271,"text":{"processes/":{},"processes/#make-the-fluidity-visible":{},"processes/#stable":{},"processes/#the-problem-of-environment-names":{},"processes/#why-companies-fail-in-their-e2e-strategy":{},"processes/#wrong-mindset":{},"simplicity/":{},"simplicity/#with-great-power-new-challenges":{}},"title":{}}],["field",{"_index":805,"text":{"processes/":{},"processes/#code-review-starts-with-yourself":{}},"title":{}}],["fight",{"_index":1240,"text":{"simplicity/":{},"simplicity/#make-it-simple-by-making-compromises":{}},"title":{}}],["file",{"_index":977,"text":{"processes/":{},"processes/#a-more-practical-gitops-model":{},"processes/#make-it-fluid-with-automatic-propagation":{},"processes/#make-the-fluidity-visible":{}},"title":{}}],["filter",{"_index":519,"text":{"processes/":{},"processes/#process-2-the-release-management-process":{}},"title":{}}],["find",{"_index":601,"text":{"processes/":{},"processes/#healthy":{}},"title":{}}],["fine",{"_index":218,"text":{"processes/":{},"processes/#healthy":{},"processes/#making-e2e-tests-affordable-removing-the-ui-layer":{},"processes/#process-2-the-release-management-process":{},"processes/#tools-are-not-the-way-to-talk-about-processes":{}},"title":{}}],["first",{"_index":101,"text":{"processes/":{},"processes/#a-more-practical-gitops-model":{},"processes/#improving-the-code-review-process":{},"processes/#make-your-processes-as-first-citizen":{},"processes/#making-e2e-tests-affordable-removing-the-ui-layer":{},"processes/#process-modelisation-and-implementation":{},"processes/#the-problem-of-environment-names":{},"simplicity/":{},"simplicity/#make-it-simple-by-methodologies-technologies":{},"simplicity/#the-lego-era":{}},"title":{"processes/#make-your-processes-as-first-citizen":{}}}],["fit",{"_index":728,"text":{"processes/":{},"processes/#there-is-no-replacement-for-the-e2e-test":{}},"title":{}}],["five",{"_index":521,"text":{"processes/":{},"processes/#make-the-fluidity-visible":{},"processes/#process-2-the-release-management-process":{}},"title":{}}],["fix",{"_index":338,"text":{"processes/":{},"processes/#is-fluidity-only-for-start-up":{},"processes/#merge-to-master-point-of-no-difficult-return":{}},"title":{}}],["flexibl",{"_index":1092,"text":{"simplicity/":{},"simplicity/#decoupling-price":{},"simplicity/#the-benefit-of-isolated-entities":{},"simplicity/#the-lego-era":{}},"title":{}}],["flow",{"_index":490,"text":{"processes/":{},"processes/#making-e2e-tests-affordable-removing-the-ui-layer":{},"processes/#process-2-the-release-management-process":{},"simplicity/":{},"simplicity/#maintaining-the-cause-and-effect-relationship":{}},"title":{}}],["fluid",{"_index":990,"text":{"processes/":{}},"title":{"processes/#make-it-fluid-with-automatic-propagation":{}}}],["fluiditi",{"_index":180,"text":{"processes/":{},"processes/#bridging-the-gap-between-mentalities":{},"processes/#is-fluidity-only-for-start-up":{},"processes/#make-it-fluid-with-automatic-propagation":{},"processes/#make-the-fluidity-visible":{}},"title":{"processes/#is-fluidity-only-for-start-up":{},"processes/#make-the-fluidity-visible":{}}}],["fly",{"_index":392,"text":{"processes/":{},"processes/#dynamic-environment-as-a-new-paradigm":{}},"title":{}}],["focu",{"_index":64,"text":{"processes/":{},"processes/#making-e2e-tests-affordable-removing-the-ui-layer":{},"simplicity/":{},"simplicity/#the-lego-era":{}},"title":{}}],["focus",{"_index":131,"text":{"processes/":{},"processes/#rca-processes-relationship":{},"simplicity/":{},"simplicity/#make-it-simple-by-making-compromises":{},"simplicity/#premature-optimization":{}},"title":{}}],["folder",{"_index":472,"text":{"processes/":{},"processes/#make-your-codes-equal":{}},"title":{}}],["follow",{"_index":448,"text":{"processes/":{},"processes/#is-fluidity-only-for-start-up":{},"processes/#model-extension-to-include-all-kinds-of-code":{}},"title":{}}],["forget",{"_index":1022,"text":{"processes/":{},"processes/#is-fluidity-only-for-start-up":{},"processes/#make-the-fluidity-visible":{}},"title":{}}],["form",{"_index":952,"text":{"processes/":{},"processes/#a-more-practical-gitops-model":{}},"title":{}}],["forti",{"_index":520,"text":{"processes/":{},"processes/#process-2-the-release-management-process":{}},"title":{}}],["fortran",{"_index":809,"text":{"processes/":{},"processes/#code-review-starts-with-yourself":{}},"title":{}}],["found",{"_index":581,"text":{"processes/":{},"processes/#healthy":{},"processes/#make-the-fluidity-visible":{},"simplicity/":{},"simplicity/#isolate-things-to-their-pure-essence":{}},"title":{}}],["fragil",{"_index":771,"text":{"processes/":{},"processes/#making-e2e-tests-affordable-removing-the-ui-layer":{}},"title":{}}],["framework",{"_index":854,"text":{"processes/":{},"processes/#improving-the-code-review-process":{}},"title":{}}],["free",{"_index":1148,"text":{"simplicity/":{},"simplicity/#the-lego-era":{}},"title":{}}],["freedom",{"_index":1215,"text":{"simplicity/":{},"simplicity/#make-it-simple-by-conventions":{}},"title":{}}],["frontend",{"_index":1161,"text":{"simplicity/":{},"simplicity/#make-it-simple-by-methodologies-technologies":{}},"title":{}}],["frustrat",{"_index":1026,"text":{"processes/":{},"processes/#make-the-fluidity-visible":{}},"title":{}}],["full",{"_index":229,"text":{"processes/":{},"processes/#understand-requirements":{}},"title":{}}],["fulli",{"_index":76,"text":{"processes/":{},"processes/#dynamic-environment-as-a-new-paradigm":{},"processes/#process-1-from-code-to-development-environments":{}},"title":{}}],["function",{"_index":309,"text":{"processes/":{},"processes/#a-more-practical-gitops-model":{},"processes/#code-review-as-the-last-bastion-of-defense":{},"processes/#dynamic-environment-as-a-new-paradigm":{},"processes/#make-it-fluid-with-automatic-propagation":{},"processes/#process-1-from-code-to-development-environments":{},"simplicity/":{},"simplicity/#doing-one-thing-and-doing-it-well":{},"simplicity/#maintaining-the-cause-and-effect-relationship":{},"simplicity/#with-great-power-new-challenges":{}},"title":{}}],["fundament",{"_index":463,"text":{"processes/":{},"processes/#make-your-codes-equal":{},"processes/#why-staging-and-production-should-be-and-cant-be-identical":{},"simplicity/":{},"simplicity/#make-it-simple-by-consistency":{}},"title":{}}],["gap",{"_index":178,"text":{"processes/":{},"processes/#bridging-the-gap-between-mentalities":{}},"title":{"processes/#bridging-the-gap-between-mentalities":{}}}],["gate",{"_index":1000,"text":{"processes/":{},"processes/#make-it-fluid-with-automatic-propagation":{},"processes/#manage-your-risk-by-adding-gates":{}},"title":{"processes/#manage-your-risk-by-adding-gates":{}}}],["gatewai",{"_index":1058,"text":{"simplicity/":{},"simplicity/#with-great-power-new-challenges":{}},"title":{}}],["gener",{"_index":275,"text":{"processes/":{},"processes/#dynamic-environment-as-a-new-paradigm":{},"processes/#making-e2e-tests-affordable-removing-the-ui-layer":{},"processes/#process-1-from-code-to-development-environments":{},"processes/#process-modelisation-and-implementation":{},"processes/#why-companies-fail-in-their-e2e-strategy":{},"processes/#why-staging-and-production-should-be-and-cant-be-identical":{},"processes/#wrong-mindset":{},"simplicity/":{},"simplicity/#make-it-simple-by-tagging":{}},"title":{}}],["geometri",{"_index":811,"text":{"processes/":{},"processes/#code-review-starts-with-yourself":{}},"title":{}}],["get",{"_index":307,"text":{"processes/":{},"processes/#is-fluidity-only-for-start-up":{},"processes/#process-1-from-code-to-development-environments":{}},"title":{"processes/#getting-to-the-root-of-the-problem":{}}}],["git",{"_index":361,"text":{"processes/":{},"processes/#a-more-practical-gitops-model":{},"processes/#gitops":{},"processes/#make-it-fluid-with-automatic-propagation":{},"processes/#process-1-environment-creation-easy-setup":{},"processes/#process-1-feature-branch-as-the-source-of-truth":{}},"title":{}}],["github",{"_index":426,"text":{"processes/":{},"processes/#process-1-environment-creation-easy-setup":{},"simplicity/":{},"simplicity/#make-it-simple-by-conventions":{},"simplicity/#make-it-simple-by-tagging":{}},"title":{}}],["github.com",{"_index":946,"text":{"processes/":{},"processes/#gitops":{}},"title":{}}],["gitop",{"_index":938,"text":{"processes/":{},"processes/#a-more-practical-gitops-model":{},"processes/#gitops":{}},"title":{"processes/#a-more-practical-gitops-model":{},"processes/#gitops":{}}}],["give",{"_index":379,"text":{"processes/":{},"processes/#make-the-fluidity-visible":{},"processes/#process-1-feature-branch-as-the-source-of-truth":{},"processes/#stable":{},"processes/#the-problem-of-environment-names":{},"processes/#why-companies-fail-in-their-e2e-strategy":{},"simplicity/":{},"simplicity/#make-it-simple-by-tagging":{},"simplicity/#with-great-power-new-challenges":{}},"title":{}}],["given",{"_index":243,"text":{"processes/":{},"processes/#make-it-fluid-with-automatic-propagation":{},"processes/#model-extension-to-include-all-kinds-of-code":{},"processes/#performance-indicators":{},"processes/#why-companies-fail-in-their-e2e-strategy":{},"simplicity/":{},"simplicity/#make-it-simple-by-methodologies-technologies":{}},"title":{}}],["glanc",{"_index":879,"text":{"processes/":{},"processes/#the-problem-of-environment-names":{}},"title":{}}],["go",{"_index":327,"text":{"processes/":{},"processes/#getting-to-the-root-of-the-problem":{},"processes/#merge-to-master-point-of-no-difficult-return":{},"processes/#there-is-no-replacement-for-the-e2e-test":{},"simplicity/":{},"simplicity/#the-lego-era":{}},"title":{}}],["goal",{"_index":203,"text":{"processes/":{},"processes/#bridging-the-gap-between-mentalities":{},"simplicity/":{},"simplicity/#the-lego-era":{}},"title":{}}],["goe",{"_index":923,"text":{"processes/":{},"processes/#process-modelisation-and-implementation":{},"simplicity/":{},"simplicity/#the-lego-era":{}},"title":{}}],["good",{"_index":527,"text":{"processes/":{},"processes/#make-it-fluid-with-automatic-propagation":{},"processes/#process-2-the-release-management-process":{},"processes/#the-problem-of-environment-names":{},"processes/#working":{},"simplicity/":{},"simplicity/#premature-optimization":{}},"title":{}}],["googl",{"_index":432,"text":{"processes/":{},"processes/#gitops":{},"processes/#process-1-environment-creation-easy-setup":{},"processes/#process-modelisation-and-implementation":{},"simplicity/":{},"simplicity/#with-great-power-new-challenges":{}},"title":{}}],["govern",{"_index":61,"text":{"processes/":{}},"title":{}}],["gradual",{"_index":880,"text":{"processes/":{},"processes/#the-problem-of-environment-names":{}},"title":{}}],["grafana",{"_index":509,"text":{"processes/":{},"processes/#process-2-the-release-management-process":{}},"title":{}}],["great",{"_index":1050,"text":{"simplicity/":{},"simplicity/#decoupling-price":{}},"title":{"simplicity/#with-great-power-new-challenges":{}}}],["green",{"_index":861,"text":{"processes/":{},"processes/#why-staging-and-production-should-be-and-cant-be-identical":{}},"title":{}}],["group",{"_index":139,"text":{"processes/":{},"processes/#rca-processes-relationship":{},"simplicity/":{},"simplicity/#with-great-power-new-challenges":{}},"title":{}}],["gui",{"_index":532,"text":{"processes/":{},"processes/#process-2-the-release-management-process":{}},"title":{}}],["guid",{"_index":169,"text":{"processes/":{},"processes/#devops-as-a-business-analyst-with-many-technical-skills":{}},"title":{}}],["guidelin",{"_index":1076,"text":{"simplicity/":{},"simplicity/#with-great-power-new-challenges":{}},"title":{}}],["h1",{"_index":980,"text":{"processes/":{},"processes/#a-more-practical-gitops-model":{},"processes/#make-it-fluid-with-automatic-propagation":{}},"title":{}}],["h2",{"_index":982,"text":{"processes/":{},"processes/#a-more-practical-gitops-model":{},"processes/#make-it-fluid-with-automatic-propagation":{}},"title":{}}],["hand",{"_index":471,"text":{"processes/":{},"processes/#code-review-as-the-last-bastion-of-defense":{},"processes/#design-your-architecture-up-to-your-ambition":{},"processes/#make-your-codes-equal":{},"processes/#why-companies-fail-in-their-e2e-strategy":{},"simplicity/":{},"simplicity/#isolating-things":{}},"title":{}}],["happen",{"_index":133,"text":{"processes/":{},"processes/#rca-processes-relationship":{},"processes/#the-problem-of-environment-names":{},"processes/#wrong-mindset":{}},"title":{}}],["hard",{"_index":1187,"text":{"simplicity/":{},"simplicity/#make-it-simple-by-making-compromises":{},"simplicity/#make-it-simple-by-tagging":{}},"title":{}}],["hardwar",{"_index":1164,"text":{"simplicity/":{},"simplicity/#make-it-simple-by-methodologies-technologies":{}},"title":{}}],["have",{"_index":247,"text":{"processes/":{},"processes/#design-your-architecture-up-to-your-ambition":{},"processes/#dynamic-environment-as-a-new-paradigm":{},"processes/#make-your-codes-equal":{},"processes/#performance-indicators":{},"simplicity/":{},"simplicity/#isolating-things":{},"simplicity/#make-it-simple-by-consistency":{},"simplicity/#make-it-simple-by-conventions":{},"simplicity/#the-benefit-of-having-simple-entities":{},"simplicity/#the-benefit-of-isolated-entities":{}},"title":{"simplicity/#the-benefit-of-having-simple-entities":{}}}],["headquart",{"_index":725,"text":{"processes/":{},"processes/#there-is-no-replacement-for-the-e2e-test":{}},"title":{}}],["healthi",{"_index":567,"text":{"processes/":{},"processes/#healthy":{}},"title":{"processes/#healthy":{}}}],["heavili",{"_index":585,"text":{"processes/":{},"processes/#healthy":{}},"title":{}}],["helm",{"_index":966,"text":{"processes/":{},"processes/#a-more-practical-gitops-model":{},"processes/#make-it-fluid-with-automatic-propagation":{}},"title":{}}],["help",{"_index":277,"text":{"processes/":{},"processes/#a-more-practical-gitops-model":{},"processes/#improving-the-code-review-process":{},"processes/#make-your-codes-equal":{},"processes/#making-e2e-tests-affordable-removing-the-ui-layer":{},"processes/#manage-your-risk-by-adding-gates":{},"processes/#wrong-mindset":{}},"title":{}}],["here",{"_index":400,"text":{"processes/":{},"processes/#dynamic-environment-as-a-new-paradigm":{},"processes/#make-it-fluid-with-automatic-propagation":{}},"title":{}}],["heroku",{"_index":366,"text":{"processes/":{},"processes/#process-1-feature-branch-as-the-source-of-truth":{}},"title":{}}],["hidden",{"_index":316,"text":{"processes/":{},"processes/#a-more-practical-gitops-model":{},"processes/#process-1-from-code-to-development-environments":{},"processes/#resilience":{}},"title":{}}],["high",{"_index":253,"text":{"processes/":{},"processes/#gitops":{},"processes/#performance-indicators":{},"processes/#process-2-the-release-management-process":{},"simplicity/":{},"simplicity/#decoupling-price":{},"simplicity/#new-challenges-introduced-by-the-decoupling":{}},"title":{}}],["highli",{"_index":731,"text":{"processes/":{},"processes/#getting-to-the-root-of-the-problem":{},"processes/#there-is-no-replacement-for-the-e2e-test":{},"simplicity/":{},"simplicity/#isolating-things":{}},"title":{}}],["hold",{"_index":816,"text":{"processes/":{},"processes/#code-review-starts-with-yourself":{}},"title":{}}],["hole",{"_index":820,"text":{"processes/":{},"processes/#code-review-starts-with-yourself":{}},"title":{}}],["home",{"_index":0,"text":{},"title":{"":{}}}],["homework",{"_index":1180,"text":{"simplicity/":{},"simplicity/#premature-optimization":{}},"title":{}}],["hour",{"_index":442,"text":{"processes/":{},"processes/#process-1-environment-creation-easy-setup":{}},"title":{}}],["houston",{"_index":496,"text":{"processes/":{},"processes/#process-2-the-release-management-process":{}},"title":{}}],["human",{"_index":182,"text":{"processes/":{},"processes/#bridging-the-gap-between-mentalities":{},"processes/#make-it-fluid-with-automatic-propagation":{}},"title":{}}],["ibm",{"_index":824,"text":{"processes/":{},"processes/#code-review-starts-with-yourself":{}},"title":{}}],["iceberg",{"_index":1024,"text":{"processes/":{},"processes/#make-the-fluidity-visible":{}},"title":{}}],["id",{"_index":900,"text":{"processes/":{},"processes/#the-problem-of-environment-names":{}},"title":{}}],["idea",{"_index":528,"text":{"processes/":{},"processes/#process-2-the-release-management-process":{},"processes/#resilience":{},"processes/#the-problem-of-environment-names":{}},"title":{}}],["ideal",{"_index":214,"text":{"processes/":{},"processes/#making-e2e-tests-affordable-removing-the-ui-layer":{},"processes/#tools-are-not-the-way-to-talk-about-processes":{},"simplicity/":{},"simplicity/#the-lego-era":{}},"title":{}}],["idempot",{"_index":898,"text":{"processes/":{},"processes/#the-problem-of-environment-names":{}},"title":{}}],["ident",{"_index":550,"text":{"processes/":{},"processes/#manage-your-risk-by-adding-gates":{},"processes/#why-staging-and-production-should-be-and-cant-be-identical":{},"processes/#working":{}},"title":{"processes/#why-staging-and-production-should-be-and-cant-be-identical":{}}}],["identifi",{"_index":643,"text":{"processes/":{},"processes/#code-review-as-the-last-bastion-of-defense":{},"processes/#stable":{}},"title":{}}],["ignor",{"_index":677,"text":{"processes/":{},"processes/#resilience":{}},"title":{}}],["imag",{"_index":373,"text":{"processes/":{},"processes/#a-more-practical-gitops-model":{},"processes/#process-1-feature-branch-as-the-source-of-truth":{},"processes/#process-modelisation-and-implementation":{}},"title":{}}],["imagin",{"_index":907,"text":{"processes/":{},"processes/#process-modelisation-and-implementation":{},"simplicity/":{},"simplicity/#make-it-simple-by-conventions":{}},"title":{}}],["immedi",{"_index":589,"text":{"processes/":{},"processes/#healthy":{},"processes/#there-is-no-replacement-for-the-e2e-test":{}},"title":{}}],["immut",{"_index":409,"text":{"processes/":{},"processes/#dynamic-environment-as-a-new-paradigm":{}},"title":{}}],["impact",{"_index":84,"text":{"processes/":{},"processes/#stable":{}},"title":{}}],["imperfect",{"_index":88,"text":{"processes/":{},"simplicity/":{},"simplicity/#make-it-simple-by-making-compromises":{}},"title":{}}],["implement",{"_index":478,"text":{"processes/":{},"processes/#a-more-practical-gitops-model":{},"processes/#design-your-architecture-up-to-your-ambition":{},"processes/#is-fluidity-only-for-start-up":{},"processes/#make-the-fluidity-visible":{},"processes/#making-testable-code":{},"processes/#why-companies-fail-in-their-e2e-strategy":{},"processes/#working":{},"simplicity/":{},"simplicity/#make-it-simple-by-methodologies-technologies":{},"simplicity/#premature-optimization":{},"simplicity/#the-benefit-of-isolated-entities":{},"simplicity/#with-great-power-new-challenges":{}},"title":{"processes/#process-modelisation-and-implementation":{}}}],["impli",{"_index":413,"text":{"processes/":{},"processes/#dynamic-environment-as-a-new-paradigm":{},"processes/#the-problem-of-environment-names":{}},"title":{}}],["import",{"_index":394,"text":{"processes/":{},"processes/#code-review-as-the-last-bastion-of-defense":{},"processes/#dynamic-environment-as-a-new-paradigm":{},"processes/#improving-the-code-review-process":{},"processes/#make-your-codes-equal":{},"processes/#resilience":{},"simplicity/":{},"simplicity/#make-it-simple-by-consistency":{},"simplicity/#simplicity-doesnt-mean-simplistic":{}},"title":{}}],["importantli",{"_index":410,"text":{"processes/":{},"processes/#dynamic-environment-as-a-new-paradigm":{},"simplicity/":{},"simplicity/#isolating-things":{}},"title":{}}],["improv",{"_index":33,"text":{"":{},"#lessons-learned-as-a-devops-engineer":{},"processes/":{},"processes/#devops-as-a-business-analyst-with-many-technical-skills":{},"processes/#improving-the-code-review-process":{},"processes/#is-fluidity-only-for-start-up":{},"processes/#wrong-mindset":{},"simplicity/":{},"simplicity/#make-it-simple-by-consistency":{}},"title":{"processes/#improving-the-code-review-process":{}}}],["inact",{"_index":440,"text":{"processes/":{},"processes/#process-1-environment-creation-easy-setup":{}},"title":{}}],["incid",{"_index":130,"text":{"processes/":{},"processes/#rca-processes-relationship":{},"simplicity/":{},"simplicity/#make-it-simple-by-making-compromises":{}},"title":{}}],["includ",{"_index":418,"text":{"processes/":{},"processes/#dynamic-environment-as-a-new-paradigm":{},"processes/#process-2-the-release-management-process":{},"simplicity/":{},"simplicity/#make-it-simple-by-tagging":{}},"title":{"processes/#model-extension-to-include-all-kinds-of-code":{}}}],["incompat",{"_index":724,"text":{"processes/":{},"processes/#there-is-no-replacement-for-the-e2e-test":{}},"title":{}}],["inconveni",{"_index":986,"text":{"processes/":{},"processes/#a-more-practical-gitops-model":{}},"title":{}}],["incorpor",{"_index":325,"text":{"processes/":{},"processes/#a-more-practical-gitops-model":{},"processes/#merge-to-master-point-of-no-difficult-return":{}},"title":{}}],["increas",{"_index":475,"text":{"processes/":{},"processes/#make-your-codes-equal":{},"simplicity/":{},"simplicity/#decoupling-price":{},"simplicity/#make-it-simple-by-conventions":{}},"title":{}}],["independ",{"_index":950,"text":{"processes/":{},"processes/#a-more-practical-gitops-model":{}},"title":{}}],["indic",{"_index":239,"text":{"processes/":{},"processes/#make-it-fluid-with-automatic-propagation":{},"processes/#performance-indicators":{},"processes/#process-2-the-release-management-process":{},"processes/#stable":{},"processes/#understand-requirements":{},"processes/#why-companies-fail-in-their-e2e-strategy":{},"processes/#wrong-mindset":{}},"title":{"processes/#performance-indicators":{}}}],["individu",{"_index":1111,"text":{"simplicity/":{},"simplicity/#new-challenges-introduced-by-the-decoupling":{}},"title":{}}],["ineffect",{"_index":120,"text":{"processes/":{},"processes/#dynamic-environment-as-a-new-paradigm":{},"processes/#make-your-processes-as-first-citizen":{}},"title":{}}],["infect",{"_index":574,"text":{"processes/":{},"processes/#healthy":{}},"title":{}}],["influenc",{"_index":617,"text":{"processes/":{},"processes/#making-testable-code":{},"processes/#stable":{}},"title":{}}],["inform",{"_index":536,"text":{"processes/":{},"processes/#process-2-the-release-management-process":{},"processes/#process-modelisation-and-implementation":{}},"title":{}}],["infrastructur",{"_index":100,"text":{"processes/":{},"processes/#bridging-the-gap-between-mentalities":{},"processes/#dynamic-environment-as-a-new-paradigm":{},"processes/#make-your-codes-equal":{},"processes/#model-extension-to-include-all-kinds-of-code":{},"simplicity/":{},"simplicity/#make-it-simple-by-consistency":{},"simplicity/#make-it-simple-by-methodologies-technologies":{}},"title":{}}],["infrequ",{"_index":834,"text":{"processes/":{},"processes/#code-review-starts-with-yourself":{}},"title":{}}],["initi",{"_index":425,"text":{"processes/":{},"processes/#process-1-environment-creation-easy-setup":{}},"title":{}}],["inject",{"_index":458,"text":{"processes/":{},"processes/#model-extension-to-include-all-kinds-of-code":{}},"title":{}}],["innov",{"_index":1048,"text":{"processes/":{},"processes/#is-fluidity-only-for-start-up":{}},"title":{}}],["input",{"_index":232,"text":{"processes/":{},"processes/#understand-requirements":{}},"title":{}}],["insid",{"_index":984,"text":{"processes/":{},"processes/#a-more-practical-gitops-model":{},"processes/#make-it-fluid-with-automatic-propagation":{},"simplicity/":{},"simplicity/#the-lego-era":{}},"title":{}}],["instal",{"_index":931,"text":{"processes/":{},"processes/#a-more-practical-gitops-model":{},"processes/#make-it-fluid-with-automatic-propagation":{},"processes/#process-modelisation-and-implementation":{}},"title":{}}],["instanc",{"_index":382,"text":{"processes/":{},"processes/#design-your-architecture-up-to-your-ambition":{},"processes/#healthy":{},"processes/#process-1-feature-branch-as-the-source-of-truth":{},"processes/#resilience":{}},"title":{}}],["instanti",{"_index":416,"text":{"processes/":{},"processes/#dynamic-environment-as-a-new-paradigm":{}},"title":{}}],["instead",{"_index":940,"text":{"processes/":{},"processes/#gitops":{}},"title":{}}],["integr",{"_index":284,"text":{"processes/":{},"processes/#is-fluidity-only-for-start-up":{},"processes/#make-it-fluid-with-automatic-propagation":{},"processes/#make-the-fluidity-visible":{},"processes/#process-1-from-code-to-development-environments":{},"processes/#there-is-no-replacement-for-the-e2e-test":{},"processes/#why-companies-fail-in-their-e2e-strategy":{},"processes/#wrong-mindset":{},"simplicity/":{},"simplicity/#maintaining-the-cause-and-effect-relationship":{},"simplicity/#the-lego-era":{}},"title":{}}],["intens",{"_index":1178,"text":{"simplicity/":{},"simplicity/#premature-optimization":{}},"title":{}}],["intent",{"_index":314,"text":{"processes/":{},"processes/#process-1-from-code-to-development-environments":{}},"title":{}}],["interact",{"_index":1213,"text":{"simplicity/":{},"simplicity/#make-it-simple-by-conventions":{}},"title":{}}],["interest",{"_index":1133,"text":{"simplicity/":{},"simplicity/#the-lego-era":{}},"title":{}}],["interfac",{"_index":1159,"text":{"simplicity/":{},"simplicity/#make-it-simple-by-methodologies-technologies":{}},"title":{}}],["intern",{"_index":561,"text":{"processes/":{},"processes/#process-modelisation-and-implementation":{},"processes/#working":{},"simplicity/":{},"simplicity/#make-it-simple-by-methodologies-technologies":{}},"title":{}}],["internet",{"_index":735,"text":{"processes/":{},"processes/#there-is-no-replacement-for-the-e2e-test":{},"simplicity/":{},"simplicity/#with-great-power-new-challenges":{}},"title":{}}],["intervent",{"_index":748,"text":{"processes/":{},"processes/#getting-to-the-root-of-the-problem":{},"processes/#make-it-fluid-with-automatic-propagation":{}},"title":{}}],["introduc",{"_index":365,"text":{"processes/":{},"processes/#a-more-practical-gitops-model":{},"processes/#manage-your-risk-by-adding-gates":{},"processes/#process-1-feature-branch-as-the-source-of-truth":{},"processes/#process-2-the-release-management-process":{},"processes/#resilience":{},"processes/#stable":{},"simplicity/":{}},"title":{"simplicity/#new-challenges-introduced-by-the-decoupling":{}}}],["invest",{"_index":600,"text":{"processes/":{},"processes/#healthy":{}},"title":{}}],["involv",{"_index":140,"text":{"processes/":{},"processes/#a-more-practical-gitops-model":{},"processes/#rca-processes-relationship":{}},"title":{}}],["isol",{"_index":704,"text":{"processes/":{},"processes/#why-companies-fail-in-their-e2e-strategy":{},"simplicity/":{},"simplicity/#isolate-things-to-their-pure-essence":{},"simplicity/#isolating-things":{},"simplicity/#maintaining-the-cause-and-effect-relationship":{},"simplicity/#the-benefit-of-isolated-entities":{},"simplicity/#the-lego-era":{}},"title":{"simplicity/#isolate-things-to-their-pure-essence":{},"simplicity/#isolating-things":{},"simplicity/#the-benefit-of-isolated-entities":{}}}],["issu",{"_index":404,"text":{"processes/":{},"processes/#dynamic-environment-as-a-new-paradigm":{},"processes/#process-2-the-release-management-process":{},"processes/#resilience":{},"processes/#the-problem-of-environment-names":{},"processes/#why-companies-fail-in-their-e2e-strategy":{},"simplicity/":{},"simplicity/#premature-optimization":{}},"title":{}}],["itself",{"_index":210,"text":{"processes/":{},"processes/#improving-the-code-review-process":{},"processes/#making-e2e-tests-affordable-removing-the-ui-layer":{},"processes/#the-problem-of-environment-names":{},"processes/#tools-are-not-the-way-to-talk-about-processes":{},"simplicity/":{},"simplicity/#new-challenges-introduced-by-the-decoupling":{}},"title":{}}],["it\u2019",{"_index":30,"text":{"":{},"#lessons-learned-as-a-devops-engineer":{},"processes/":{},"simplicity/":{},"simplicity/#the-lego-era":{}},"title":{"operations/":{},"processes/":{},"simplicity/":{}}}],["jenkin",{"_index":912,"text":{"processes/":{},"processes/#process-modelisation-and-implementation":{}},"title":{}}],["jenkins/spinnak",{"_index":481,"text":{"processes/":{},"processes/#design-your-architecture-up-to-your-ambition":{}},"title":{}}],["jenkinsfil",{"_index":909,"text":{"processes/":{},"processes/#process-modelisation-and-implementation":{}},"title":{}}],["job",{"_index":160,"text":{"processes/":{},"processes/#a-more-practical-gitops-model":{},"processes/#devops-as-a-business-analyst-with-many-technical-skills":{},"processes/#getting-to-the-root-of-the-problem":{},"processes/#performance-indicators":{},"processes/#why-companies-fail-in-their-e2e-strategy":{}},"title":{}}],["journei",{"_index":902,"text":{"processes/":{},"processes/#process-modelisation-and-implementation":{}},"title":{}}],["judici",{"_index":942,"text":{"processes/":{},"processes/#gitops":{}},"title":{}}],["justifi",{"_index":1020,"text":{"processes/":{},"processes/#make-the-fluidity-visible":{}},"title":{}}],["j\u00e9rusalem",{"_index":800,"text":{"processes/":{},"processes/#code-review-starts-with-yourself":{}},"title":{}}],["k8",{"_index":969,"text":{"processes/":{},"processes/#a-more-practical-gitops-model":{}},"title":{}}],["keep",{"_index":494,"text":{"processes/":{},"processes/#process-2-the-release-management-process":{},"processes/#the-problem-of-environment-names":{},"simplicity/":{},"simplicity/#maintaining-the-cause-and-effect-relationship":{},"simplicity/#make-it-simple-by-conventions":{},"simplicity/#premature-optimization":{}},"title":{}}],["kei",{"_index":321,"text":{"processes/":{},"processes/#healthy":{},"processes/#making-testable-code":{},"processes/#merge-to-master-point-of-no-difficult-return":{},"processes/#process-1-feature-branch-as-the-source-of-truth":{},"processes/#why-companies-fail-in-their-e2e-strategy":{},"simplicity/":{},"simplicity/#isolating-things":{},"simplicity/#make-it-simple-by-making-compromises":{},"simplicity/#striving-for-simplicity-at-all-layers":{}},"title":{}}],["keypunch",{"_index":831,"text":{"processes/":{},"processes/#code-review-starts-with-yourself":{}},"title":{}}],["kind",{"_index":444,"text":{"processes/":{}},"title":{"processes/#model-extension-to-include-all-kinds-of-code":{}}}],["king",{"_index":106,"text":{"processes/":{},"processes/#make-your-processes-as-first-citizen":{}},"title":{}}],["kitchen",{"_index":276,"text":{"processes/":{},"processes/#wrong-mindset":{}},"title":{}}],["know",{"_index":109,"text":{"processes/":{},"processes/#improving-the-code-review-process":{},"processes/#make-your-processes-as-first-citizen":{},"processes/#process-modelisation-and-implementation":{}},"title":{}}],["knowledg",{"_index":793,"text":{"processes/":{},"processes/#code-review-as-the-last-bastion-of-defense":{},"simplicity/":{},"simplicity/#isolating-things":{}},"title":{}}],["kubernet",{"_index":27,"text":{"":{},"#lessons-learned-as-a-devops-engineer":{},"processes/":{},"processes/#a-more-practical-gitops-model":{},"simplicity/":{},"simplicity/#make-it-simple-by-tagging":{}},"title":{}}],["label",{"_index":427,"text":{"processes/":{},"processes/#process-1-environment-creation-easy-setup":{},"simplicity/":{},"simplicity/#make-it-simple-by-tagging":{}},"title":{}}],["lambda",{"_index":1066,"text":{"simplicity/":{},"simplicity/#with-great-power-new-challenges":{}},"title":{}}],["larg",{"_index":296,"text":{"processes/":{},"processes/#is-fluidity-only-for-start-up":{},"processes/#process-1-from-code-to-development-environments":{}},"title":{}}],["last",{"_index":237,"text":{"processes/":{},"processes/#gitops":{},"processes/#improving-the-code-review-process":{},"processes/#process-2-the-release-management-process":{},"processes/#process-modelisation-and-implementation":{},"processes/#resilience":{},"processes/#understand-requirements":{},"processes/#wrong-mindset":{}},"title":{"processes/#code-review-as-the-last-bastion-of-defense":{}}}],["late",{"_index":806,"text":{"processes/":{},"processes/#code-review-starts-with-yourself":{}},"title":{}}],["later",{"_index":273,"text":{"processes/":{},"processes/#dynamic-environment-as-a-new-paradigm":{},"processes/#working":{},"processes/#wrong-mindset":{}},"title":{}}],["lauchconfigur",{"_index":1062,"text":{"simplicity/":{},"simplicity/#with-great-power-new-challenges":{}},"title":{}}],["law",{"_index":1101,"text":{"simplicity/":{},"simplicity/#decoupling-price":{},"simplicity/#make-it-simple-by-conventions":{}},"title":{}}],["lawyer",{"_index":1155,"text":{"simplicity/":{},"simplicity/#doing-one-thing-and-doing-it-well":{}},"title":{}}],["layer",{"_index":769,"text":{"processes/":{},"processes/#a-more-practical-gitops-model":{},"processes/#making-e2e-tests-affordable-removing-the-ui-layer":{},"simplicity/":{},"simplicity/#make-it-simple-by-methodologies-technologies":{}},"title":{"processes/#making-e2e-tests-affordable-removing-the-ui-layer":{},"simplicity/#striving-for-simplicity-at-all-layers":{}}}],["lead",{"_index":118,"text":{"processes/":{},"processes/#make-your-processes-as-first-citizen":{},"simplicity/":{},"simplicity/#maintaining-the-cause-and-effect-relationship":{},"simplicity/#make-it-simple-by-consistency":{}},"title":{}}],["learn",{"_index":2,"text":{"":{},"#lessons-learned-as-a-devops-engineer":{},"processes/":{},"processes/#gitops":{},"processes/#process-1-feature-branch-as-the-source-of-truth":{},"simplicity/":{},"simplicity/#make-it-simple-by-consistency":{}},"title":{"#lessons-learned-as-a-devops-engineer":{}}}],["leav",{"_index":625,"text":{"processes/":{},"processes/#stable":{}},"title":{}}],["left",{"_index":1038,"text":{"processes/":{},"processes/#is-fluidity-only-for-start-up":{}},"title":{}}],["legitim",{"_index":1219,"text":{"simplicity/":{},"simplicity/#make-it-simple-by-conventions":{}},"title":{}}],["lego",{"_index":1114,"text":{"simplicity/":{},"simplicity/#the-lego-era":{}},"title":{"simplicity/#the-lego-era":{}}}],["less",{"_index":110,"text":{"processes/":{},"processes/#make-the-fluidity-visible":{},"processes/#make-your-processes-as-first-citizen":{},"processes/#why-staging-and-production-should-be-and-cant-be-identical":{},"processes/#wrong-mindset":{},"simplicity/":{},"simplicity/#with-great-power-new-challenges":{}},"title":{}}],["lesson",{"_index":1,"text":{"":{}},"title":{"#lessons-learned-as-a-devops-engineer":{}}}],["let'",{"_index":368,"text":{"processes/":{},"processes/#process-1-feature-branch-as-the-source-of-truth":{},"processes/#process-modelisation-and-implementation":{}},"title":{}}],["let\u2019",{"_index":453,"text":{"processes/":{},"processes/#a-more-practical-gitops-model":{},"processes/#model-extension-to-include-all-kinds-of-code":{},"processes/#process-2-the-release-management-process":{},"processes/#there-is-no-replacement-for-the-e2e-test":{}},"title":{}}],["level",{"_index":1079,"text":{"simplicity/":{},"simplicity/#new-challenges-introduced-by-the-decoupling":{},"simplicity/#striving-for-simplicity-at-all-layers":{},"simplicity/#the-lego-era":{}},"title":{}}],["librari",{"_index":1142,"text":{"simplicity/":{},"simplicity/#the-lego-era":{}},"title":{}}],["life",{"_index":1098,"text":{"simplicity/":{},"simplicity/#the-benefit-of-isolated-entities":{}},"title":{}}],["lifetim",{"_index":438,"text":{"processes/":{},"processes/#process-1-environment-creation-easy-setup":{}},"title":{}}],["light",{"_index":1013,"text":{"processes/":{},"processes/#manage-your-risk-by-adding-gates":{},"simplicity/":{},"simplicity/#make-it-simple-by-tagging":{}},"title":{}}],["limit",{"_index":679,"text":{"processes/":{},"processes/#code-review-as-the-last-bastion-of-defense":{},"processes/#resilience":{}},"title":{}}],["line",{"_index":336,"text":{"processes/":{},"processes/#merge-to-master-point-of-no-difficult-return":{},"processes/#resilience":{},"simplicity/":{},"simplicity/#with-great-power-new-challenges":{}},"title":{}}],["link",{"_index":1197,"text":{"simplicity/":{},"simplicity/#make-it-simple-by-tagging":{}},"title":{}}],["list",{"_index":167,"text":{"processes/":{},"processes/#devops-as-a-business-analyst-with-many-technical-skills":{},"processes/#manage-your-risk-by-adding-gates":{}},"title":{}}],["listen",{"_index":1064,"text":{"simplicity/":{},"simplicity/#with-great-power-new-challenges":{}},"title":{}}],["littl",{"_index":616,"text":{"processes/":{},"processes/#a-more-practical-gitops-model":{},"processes/#stable":{},"simplicity/":{},"simplicity/#isolating-things":{}},"title":{}}],["load",{"_index":636,"text":{"processes/":{},"processes/#code-review-starts-with-yourself":{},"processes/#stable":{},"simplicity/":{},"simplicity/#with-great-power-new-challenges":{}},"title":{}}],["local",{"_index":303,"text":{"processes/":{},"processes/#process-1-from-code-to-development-environments":{}},"title":{}}],["log",{"_index":506,"text":{"processes/":{},"processes/#process-2-the-release-management-process":{},"simplicity/":{},"simplicity/#the-lego-era":{}},"title":{}}],["logic",{"_index":788,"text":{"processes/":{},"processes/#code-review-as-the-last-bastion-of-defense":{},"simplicity/":{},"simplicity/#make-it-simple-by-tagging":{}},"title":{}}],["login",{"_index":433,"text":{"processes/":{},"processes/#process-1-environment-creation-easy-setup":{}},"title":{}}],["long",{"_index":166,"text":{"processes/":{},"processes/#devops-as-a-business-analyst-with-many-technical-skills":{}},"title":{}}],["look",{"_index":639,"text":{"processes/":{},"processes/#stable":{}},"title":{}}],["loop",{"_index":626,"text":{"processes/":{},"processes/#stable":{}},"title":{}}],["loos",{"_index":1085,"text":{"simplicity/":{},"simplicity/#isolating-things":{}},"title":{}}],["lose",{"_index":195,"text":{"processes/":{},"processes/#bridging-the-gap-between-mentalities":{}},"title":{}}],["lot",{"_index":341,"text":{"processes/":{},"processes/#is-fluidity-only-for-start-up":{},"processes/#merge-to-master-point-of-no-difficult-return":{}},"title":{}}],["love",{"_index":1025,"text":{"processes/":{},"processes/#make-the-fluidity-visible":{}},"title":{}}],["low",{"_index":252,"text":{"processes/":{},"processes/#performance-indicators":{}},"title":{}}],["lower",{"_index":1203,"text":{"simplicity/":{},"simplicity/#make-it-simple-by-consistency":{}},"title":{}}],["machin",{"_index":181,"text":{"processes/":{},"processes/#bridging-the-gap-between-mentalities":{},"processes/#code-review-starts-with-yourself":{}},"title":{}}],["made",{"_index":104,"text":{"processes/":{},"processes/#code-review-as-the-last-bastion-of-defense":{},"processes/#make-your-processes-as-first-citizen":{},"processes/#process-modelisation-and-implementation":{},"processes/#there-is-no-replacement-for-the-e2e-test":{}},"title":{}}],["mainli",{"_index":545,"text":{"processes/":{},"processes/#why-companies-fail-in-their-e2e-strategy":{},"processes/#working":{},"simplicity/":{},"simplicity/#make-it-simple-by-conventions":{}},"title":{}}],["mainstream",{"_index":326,"text":{"processes/":{},"processes/#merge-to-master-point-of-no-difficult-return":{}},"title":{}}],["maintain",{"_index":686,"text":{"processes/":{},"processes/#code-review-as-the-last-bastion-of-defense":{},"processes/#is-fluidity-only-for-start-up":{},"processes/#make-the-fluidity-visible":{},"processes/#making-e2e-tests-affordable-removing-the-ui-layer":{},"processes/#why-companies-fail-in-their-e2e-strategy":{},"simplicity/":{},"simplicity/#maintaining-the-cause-and-effect-relationship":{},"simplicity/#premature-optimization":{},"simplicity/#the-benefit-of-having-simple-entities":{},"simplicity/#the-lego-era":{}},"title":{"simplicity/#maintaining-the-cause-and-effect-relationship":{}}}],["make",{"_index":89,"text":{"processes/":{},"processes/#a-more-practical-gitops-model":{},"processes/#design-your-architecture-up-to-your-ambition":{},"processes/#getting-to-the-root-of-the-problem":{},"processes/#gitops":{},"processes/#healthy":{},"processes/#make-the-fluidity-visible":{},"processes/#making-e2e-tests-affordable-removing-the-ui-layer":{},"processes/#making-testable-code":{},"processes/#process-1-environment-creation-easy-setup":{},"processes/#process-1-feature-branch-as-the-source-of-truth":{},"processes/#process-1-from-code-to-development-environments":{},"processes/#process-modelisation-and-implementation":{},"processes/#stable":{},"processes/#the-problem-of-environment-names":{},"processes/#there-is-no-replacement-for-the-e2e-test":{},"processes/#tools-are-not-the-way-to-talk-about-processes":{},"processes/#understand-requirements":{},"processes/#why-companies-fail-in-their-e2e-strategy":{},"processes/#why-staging-and-production-should-be-and-cant-be-identical":{},"processes/#working":{},"simplicity/":{},"simplicity/#decoupling-price":{},"simplicity/#isolating-things":{},"simplicity/#make-it-simple-by-consistency":{},"simplicity/#make-it-simple-by-conventions":{},"simplicity/#make-it-simple-by-making-compromises":{},"simplicity/#make-it-simple-by-tagging":{},"simplicity/#new-challenges-introduced-by-the-decoupling":{},"simplicity/#striving-for-simplicity-at-all-layers":{}},"title":{"processes/#make-it-fluid-with-automatic-propagation":{},"processes/#make-the-fluidity-visible":{},"processes/#make-your-codes-equal":{},"processes/#make-your-processes-as-first-citizen":{},"processes/#making-e2e-tests-affordable-removing-the-ui-layer":{},"processes/#making-testable-code":{},"simplicity/#make-it-simple-by-consistency":{},"simplicity/#make-it-simple-by-conventions":{},"simplicity/#make-it-simple-by-making-compromises":{},"simplicity/#make-it-simple-by-methodologies-technologies":{},"simplicity/#make-it-simple-by-tagging":{}}}],["manag",{"_index":363,"text":{"processes/":{},"processes/#gitops":{},"processes/#improving-the-code-review-process":{},"processes/#is-fluidity-only-for-start-up":{},"processes/#process-1-feature-branch-as-the-source-of-truth":{},"processes/#process-2-the-release-management-process":{},"processes/#why-companies-fail-in-their-e2e-strategy":{},"simplicity/":{},"simplicity/#decoupling-price":{},"simplicity/#make-it-simple-by-making-compromises":{},"simplicity/#new-challenges-introduced-by-the-decoupling":{},"simplicity/#the-benefit-of-isolated-entities":{},"simplicity/#the-lego-era":{},"simplicity/#with-great-power-new-challenges":{}},"title":{"processes/#manage-your-risk-by-adding-gates":{},"processes/#process-2-the-release-management-process":{}}}],["mandatori",{"_index":1046,"text":{"processes/":{},"processes/#is-fluidity-only-for-start-up":{},"simplicity/":{},"simplicity/#the-lego-era":{}},"title":{}}],["mani",{"_index":150,"text":{"processes/":{},"processes/#a-more-practical-gitops-model":{},"processes/#code-review-starts-with-yourself":{},"processes/#make-the-fluidity-visible":{},"processes/#the-problem-of-environment-names":{},"processes/#tools-are-not-the-way-to-talk-about-processes":{},"processes/#why-companies-fail-in-their-e2e-strategy":{},"processes/#wrong-mindset":{},"simplicity/":{},"simplicity/#make-it-simple-by-making-compromises":{},"simplicity/#new-challenges-introduced-by-the-decoupling":{}},"title":{"processes/#devops-as-a-business-analyst-with-many-technical-skills":{}}}],["manner",{"_index":1042,"text":{"processes/":{},"processes/#is-fluidity-only-for-start-up":{}},"title":{}}],["manual",{"_index":75,"text":{"processes/":{},"processes/#getting-to-the-root-of-the-problem":{}},"title":{}}],["manufactur",{"_index":714,"text":{"processes/":{},"processes/#process-modelisation-and-implementation":{},"processes/#there-is-no-replacement-for-the-e2e-test":{}},"title":{}}],["map",{"_index":974,"text":{"processes/":{},"processes/#a-more-practical-gitops-model":{}},"title":{}}],["mass",{"_index":1225,"text":{"simplicity/":{},"simplicity/#make-it-simple-by-making-compromises":{}},"title":{}}],["master",{"_index":312,"text":{"processes/":{},"processes/#code-review-as-the-last-bastion-of-defense":{},"processes/#make-it-fluid-with-automatic-propagation":{},"processes/#merge-to-master-point-of-no-difficult-return":{},"processes/#model-extension-to-include-all-kinds-of-code":{},"processes/#process-1-from-code-to-development-environments":{},"processes/#process-2-the-release-management-process":{}},"title":{"processes/#merge-to-master-point-of-no-difficult-return":{}}}],["matter",{"_index":256,"text":{"processes/":{},"processes/#performance-indicators":{}},"title":{}}],["max",{"_index":534,"text":{"processes/":{},"processes/#process-2-the-release-management-process":{}},"title":{}}],["mayb",{"_index":676,"text":{"processes/":{},"processes/#resilience":{},"processes/#the-problem-of-environment-names":{}},"title":{}}],["mean",{"_index":352,"text":{"processes/":{},"processes/#healthy":{},"processes/#make-it-fluid-with-automatic-propagation":{},"processes/#process-1-feature-branch-as-the-source-of-truth":{},"processes/#process-modelisation-and-implementation":{},"processes/#resilience":{},"processes/#stable":{},"simplicity/":{},"simplicity/#isolate-things-to-their-pure-essence":{},"simplicity/#maintaining-the-cause-and-effect-relationship":{},"simplicity/#premature-optimization":{},"simplicity/#simplicity-doesnt-mean-simplistic":{}},"title":{"simplicity/#simplicity-doesnt-mean-simplistic":{}}}],["measur",{"_index":240,"text":{"processes/":{},"processes/#performance-indicators":{},"processes/#stable":{},"processes/#working":{},"simplicity/":{},"simplicity/#make-it-simple-by-consistency":{}},"title":{}}],["mechan",{"_index":421,"text":{"processes/":{},"processes/#dynamic-environment-as-a-new-paradigm":{},"processes/#gitops":{}},"title":{}}],["medic",{"_index":594,"text":{"processes/":{},"processes/#healthy":{}},"title":{}}],["medicin",{"_index":801,"text":{"processes/":{},"processes/#code-review-starts-with-yourself":{}},"title":{}}],["medium",{"_index":1043,"text":{"processes/":{},"processes/#is-fluidity-only-for-start-up":{}},"title":{}}],["meet",{"_index":853,"text":{"processes/":{},"processes/#improving-the-code-review-process":{},"simplicity/":{},"simplicity/#premature-optimization":{}},"title":{}}],["mental",{"_index":179,"text":{"processes/":{},"processes/#bridging-the-gap-between-mentalities":{}},"title":{"processes/#bridging-the-gap-between-mentalities":{}}}],["merg",{"_index":319,"text":{"processes/":{},"processes/#code-review-as-the-last-bastion-of-defense":{},"processes/#make-it-fluid-with-automatic-propagation":{},"processes/#merge-to-master-point-of-no-difficult-return":{}},"title":{"processes/#merge-to-master-point-of-no-difficult-return":{}}}],["mesh",{"_index":1168,"text":{"simplicity/":{},"simplicity/#make-it-simple-by-methodologies-technologies":{}},"title":{}}],["messag",{"_index":1165,"text":{"simplicity/":{},"simplicity/#make-it-simple-by-methodologies-technologies":{}},"title":{}}],["method",{"_index":354,"text":{"processes/":{},"processes/#getting-to-the-root-of-the-problem":{},"processes/#making-testable-code":{},"processes/#process-1-feature-branch-as-the-source-of-truth":{},"simplicity/":{},"simplicity/#make-it-simple-by-consistency":{}},"title":{}}],["methodolog",{"_index":1045,"text":{"processes/":{},"processes/#is-fluidity-only-for-start-up":{},"simplicity/":{},"simplicity/#make-it-simple-by-methodologies-technologies":{}},"title":{"simplicity/#make-it-simple-by-methodologies-technologies":{}}}],["metric",{"_index":603,"text":{"processes/":{},"processes/#healthy":{},"processes/#improving-the-code-review-process":{}},"title":{}}],["microservic",{"_index":105,"text":{"processes/":{},"processes/#make-your-processes-as-first-citizen":{},"processes/#model-extension-to-include-all-kinds-of-code":{},"simplicity/":{},"simplicity/#make-it-simple-by-methodologies-technologies":{},"simplicity/#new-challenges-introduced-by-the-decoupling":{},"simplicity/#the-lego-era":{}},"title":{}}],["middl",{"_index":917,"text":{"processes/":{},"processes/#process-modelisation-and-implementation":{}},"title":{}}],["mike",{"_index":512,"text":{"processes/":{},"processes/#process-2-the-release-management-process":{}},"title":{}}],["mind",{"_index":750,"text":{"processes/":{},"processes/#getting-to-the-root-of-the-problem":{},"simplicity/":{},"simplicity/#premature-optimization":{}},"title":{}}],["mindset",{"_index":264,"text":{"processes/":{},"processes/#wrong-mindset":{}},"title":{"processes/#wrong-mindset":{}}}],["mine",{"_index":15,"text":{"":{},"#lessons-learned-as-a-devops-engineer":{}},"title":{}}],["minim",{"_index":491,"text":{"processes/":{},"processes/#make-it-fluid-with-automatic-propagation":{},"processes/#process-2-the-release-management-process":{},"processes/#the-problem-of-environment-names":{},"processes/#there-is-no-replacement-for-the-e2e-test":{}},"title":{}}],["minut",{"_index":270,"text":{"processes/":{},"processes/#code-review-starts-with-yourself":{},"processes/#process-2-the-release-management-process":{},"processes/#stable":{},"processes/#wrong-mindset":{},"simplicity/":{},"simplicity/#with-great-power-new-challenges":{}},"title":{}}],["mislead",{"_index":153,"text":{"processes/":{},"processes/#devops-as-a-business-analyst-with-many-technical-skills":{}},"title":{}}],["miss",{"_index":147,"text":{"processes/":{},"processes/#devops-as-a-business-analyst-with-many-technical-skills":{},"processes/#getting-to-the-root-of-the-problem":{},"processes/#improving-the-code-review-process":{},"processes/#make-the-fluidity-visible":{},"processes/#manage-your-risk-by-adding-gates":{},"processes/#rca-processes-relationship":{},"processes/#resilience":{},"processes/#wrong-mindset":{}},"title":{}}],["mock",{"_index":1185,"text":{"simplicity/":{},"simplicity/#maintaining-the-cause-and-effect-relationship":{}},"title":{}}],["model",{"_index":228,"text":{"processes/":{},"processes/#a-more-practical-gitops-model":{},"processes/#code-review-starts-with-yourself":{},"processes/#gitops":{},"processes/#make-it-fluid-with-automatic-propagation":{},"processes/#make-your-codes-equal":{},"processes/#model-extension-to-include-all-kinds-of-code":{},"processes/#process-modelisation-and-implementation":{},"processes/#there-is-no-replacement-for-the-e2e-test":{},"processes/#understand-requirements":{},"simplicity/":{},"simplicity/#make-it-simple-by-methodologies-technologies":{},"simplicity/#simplicity-doesnt-mean-simplistic":{}},"title":{"processes/#a-more-practical-gitops-model":{},"processes/#model-extension-to-include-all-kinds-of-code":{}}}],["modelis",{"_index":901,"text":{"processes/":{}},"title":{"processes/#process-modelisation-and-implementation":{}}}],["modern",{"_index":103,"text":{"processes/":{},"processes/#dynamic-environment-as-a-new-paradigm":{},"processes/#getting-to-the-root-of-the-problem":{},"processes/#is-fluidity-only-for-start-up":{},"processes/#make-your-processes-as-first-citizen":{},"processes/#process-1-from-code-to-development-environments":{},"processes/#resilience":{}},"title":{}}],["modifi",{"_index":420,"text":{"processes/":{},"processes/#dynamic-environment-as-a-new-paradigm":{},"processes/#model-extension-to-include-all-kinds-of-code":{}},"title":{}}],["modul",{"_index":1152,"text":{"simplicity/":{},"simplicity/#doing-one-thing-and-doing-it-well":{}},"title":{}}],["molecul",{"_index":812,"text":{"processes/":{},"processes/#code-review-starts-with-yourself":{}},"title":{}}],["mondai",{"_index":497,"text":{"processes/":{},"processes/#process-2-the-release-management-process":{}},"title":{}}],["monei",{"_index":38,"text":{"":{},"#lessons-learned-as-a-devops-engineer":{},"simplicity/":{},"simplicity/#make-it-simple-by-making-compromises":{}},"title":{}}],["mongodb",{"_index":456,"text":{"processes/":{},"processes/#model-extension-to-include-all-kinds-of-code":{}},"title":{}}],["monitor",{"_index":82,"text":{"processes/":{},"processes/#healthy":{},"processes/#stable":{},"simplicity/":{},"simplicity/#new-challenges-introduced-by-the-decoupling":{},"simplicity/#the-lego-era":{},"simplicity/#with-great-power-new-challenges":{}},"title":{}}],["monkei",{"_index":670,"text":{"processes/":{},"processes/#resilience":{}},"title":{}}],["mono",{"_index":518,"text":{"processes/":{},"processes/#process-2-the-release-management-process":{}},"title":{}}],["monolith",{"_index":1112,"text":{"simplicity/":{},"simplicity/#new-challenges-introduced-by-the-decoupling":{}},"title":{}}],["month",{"_index":272,"text":{"processes/":{},"processes/#wrong-mindset":{}},"title":{}}],["more",{"_index":357,"text":{"processes/":{},"processes/#making-e2e-tests-affordable-removing-the-ui-layer":{},"processes/#manage-your-risk-by-adding-gates":{},"processes/#process-1-feature-branch-as-the-source-of-truth":{},"processes/#stable":{},"simplicity/":{},"simplicity/#isolating-things":{},"simplicity/#make-it-simple-by-consistency":{},"simplicity/#new-challenges-introduced-by-the-decoupling":{},"simplicity/#the-lego-era":{}},"title":{"processes/#a-more-practical-gitops-model":{}}}],["morn",{"_index":498,"text":{"processes/":{},"processes/#process-2-the-release-management-process":{}},"title":{}}],["mortem",{"_index":128,"text":{"processes/":{},"processes/#rca-processes-relationship":{}},"title":{}}],["motiv",{"_index":689,"text":{"processes/":{},"processes/#why-companies-fail-in-their-e2e-strategy":{}},"title":{}}],["move",{"_index":722,"text":{"processes/":{},"processes/#make-it-fluid-with-automatic-propagation":{},"processes/#making-testable-code":{},"processes/#manage-your-risk-by-adding-gates":{},"processes/#there-is-no-replacement-for-the-e2e-test":{},"simplicity/":{},"simplicity/#the-lego-era":{}},"title":{}}],["much",{"_index":1157,"text":{"simplicity/":{},"simplicity/#make-it-simple-by-methodologies-technologies":{}},"title":{}}],["multipl",{"_index":688,"text":{"processes/":{},"processes/#a-more-practical-gitops-model":{},"processes/#why-companies-fail-in-their-e2e-strategy":{}},"title":{}}],["music",{"_index":1108,"text":{"simplicity/":{},"simplicity/#decoupling-price":{}},"title":{}}],["musician",{"_index":1105,"text":{"simplicity/":{},"simplicity/#decoupling-price":{},"simplicity/#the-lego-era":{}},"title":{}}],["name",{"_index":55,"text":{"":{},"#lessons-learned-as-a-devops-engineer":{},"processes/":{},"processes/#the-problem-of-environment-names":{},"simplicity/":{},"simplicity/#make-it-simple-by-consistency":{},"simplicity/#make-it-simple-by-tagging":{}},"title":{"processes/#the-problem-of-environment-names":{}}}],["nat",{"_index":1057,"text":{"simplicity/":{},"simplicity/#with-great-power-new-challenges":{}},"title":{}}],["natur",{"_index":360,"text":{"processes/":{},"processes/#make-your-codes-equal":{},"processes/#process-1-feature-branch-as-the-source-of-truth":{},"processes/#why-staging-and-production-should-be-and-cant-be-identical":{}},"title":{}}],["necess",{"_index":390,"text":{"processes/":{},"processes/#dynamic-environment-as-a-new-paradigm":{}},"title":{}}],["necessari",{"_index":419,"text":{"processes/":{},"processes/#dynamic-environment-as-a-new-paradigm":{}},"title":{}}],["need",{"_index":85,"text":{"processes/":{},"processes/#a-more-practical-gitops-model":{},"processes/#gitops":{},"processes/#improving-the-code-review-process":{},"processes/#make-the-fluidity-visible":{},"processes/#making-testable-code":{},"processes/#manage-your-risk-by-adding-gates":{},"processes/#process-1-feature-branch-as-the-source-of-truth":{},"processes/#process-modelisation-and-implementation":{},"processes/#stable":{},"processes/#the-problem-of-environment-names":{},"simplicity/":{},"simplicity/#maintaining-the-cause-and-effect-relationship":{},"simplicity/#make-it-simple-by-making-compromises":{},"simplicity/#premature-optimization":{},"simplicity/#the-lego-era":{}},"title":{}}],["neg",{"_index":640,"text":{"processes/":{},"processes/#stable":{}},"title":{}}],["neglect",{"_index":310,"text":{"processes/":{},"processes/#process-1-from-code-to-development-environments":{}},"title":{}}],["negoti",{"_index":1237,"text":{"simplicity/":{},"simplicity/#make-it-simple-by-making-compromises":{}},"title":{}}],["netflix",{"_index":668,"text":{"processes/":{},"processes/#resilience":{}},"title":{}}],["network",{"_index":1055,"text":{"simplicity/":{},"simplicity/#make-it-simple-by-methodologies-technologies":{},"simplicity/#with-great-power-new-challenges":{}},"title":{}}],["never",{"_index":889,"text":{"processes/":{},"processes/#the-problem-of-environment-names":{},"simplicity/":{},"simplicity/#doing-one-thing-and-doing-it-well":{}},"title":{}}],["new",{"_index":162,"text":{"processes/":{},"processes/#a-more-practical-gitops-model":{},"processes/#code-review-as-the-last-bastion-of-defense":{},"processes/#devops-as-a-business-analyst-with-many-technical-skills":{},"processes/#dynamic-environment-as-a-new-paradigm":{},"processes/#gitops":{},"processes/#improving-the-code-review-process":{},"processes/#is-fluidity-only-for-start-up":{},"processes/#make-it-fluid-with-automatic-propagation":{},"processes/#merge-to-master-point-of-no-difficult-return":{},"processes/#model-extension-to-include-all-kinds-of-code":{},"processes/#process-1-environment-creation-easy-setup":{},"processes/#process-1-feature-branch-as-the-source-of-truth":{},"processes/#process-2-the-release-management-process":{},"processes/#process-modelisation-and-implementation":{},"processes/#stable":{},"processes/#the-problem-of-environment-names":{},"processes/#there-is-no-replacement-for-the-e2e-test":{},"processes/#why-companies-fail-in-their-e2e-strategy":{},"simplicity/":{},"simplicity/#maintaining-the-cause-and-effect-relationship":{},"simplicity/#make-it-simple-by-consistency":{},"simplicity/#make-it-simple-by-methodologies-technologies":{},"simplicity/#new-challenges-introduced-by-the-decoupling":{},"simplicity/#with-great-power-new-challenges":{}},"title":{"processes/#dynamic-environment-as-a-new-paradigm":{},"simplicity/#new-challenges-introduced-by-the-decoupling":{},"simplicity/#with-great-power-new-challenges":{}}}],["next",{"_index":988,"text":{"processes/":{},"processes/#a-more-practical-gitops-model":{},"processes/#make-it-fluid-with-automatic-propagation":{},"simplicity/":{},"simplicity/#decoupling-price":{},"simplicity/#premature-optimization":{},"simplicity/#the-lego-era":{}},"title":{}}],["neznanov",{"_index":20,"text":{"":{},"#lessons-learned-as-a-devops-engineer":{}},"title":{}}],["nightmar",{"_index":1075,"text":{"simplicity/":{},"simplicity/#striving-for-simplicity-at-all-layers":{},"simplicity/#with-great-power-new-challenges":{}},"title":{}}],["nine",{"_index":726,"text":{"processes/":{},"processes/#there-is-no-replacement-for-the-e2e-test":{}},"title":{}}],["nois",{"_index":588,"text":{"processes/":{},"processes/#healthy":{}},"title":{}}],["non",{"_index":114,"text":{"processes/":{},"processes/#design-your-architecture-up-to-your-ambition":{},"processes/#healthy":{},"processes/#make-your-processes-as-first-citizen":{}},"title":{}}],["normal",{"_index":660,"text":{"processes/":{},"processes/#resilience":{}},"title":{}}],["noth",{"_index":656,"text":{"processes/":{},"processes/#a-more-practical-gitops-model":{},"processes/#is-fluidity-only-for-start-up":{},"processes/#resilience":{},"processes/#the-problem-of-environment-names":{},"simplicity/":{},"simplicity/#new-challenges-introduced-by-the-decoupling":{}},"title":{}}],["notion",{"_index":897,"text":{"processes/":{},"processes/#the-problem-of-environment-names":{}},"title":{}}],["now",{"_index":614,"text":{"processes/":{},"processes/#a-more-practical-gitops-model":{},"processes/#healthy":{},"processes/#process-modelisation-and-implementation":{}},"title":{}}],["number",{"_index":63,"text":{"processes/":{},"processes/#code-review-as-the-last-bastion-of-defense":{},"processes/#improving-the-code-review-process":{},"processes/#process-1-from-code-to-development-environments":{},"processes/#wrong-mindset":{}},"title":{}}],["object",{"_index":230,"text":{"processes/":{},"processes/#a-more-practical-gitops-model":{},"processes/#performance-indicators":{},"processes/#process-1-from-code-to-development-environments":{},"processes/#process-2-the-release-management-process":{},"processes/#understand-requirements":{},"simplicity/":{},"simplicity/#make-it-simple-by-methodologies-technologies":{}},"title":{}}],["observ",{"_index":547,"text":{"processes/":{},"processes/#working":{}},"title":{}}],["occasion",{"_index":74,"text":{"processes/":{}},"title":{}}],["occur",{"_index":387,"text":{"processes/":{},"processes/#process-1-feature-branch-as-the-source-of-truth":{}},"title":{}}],["offici",{"_index":911,"text":{"processes/":{},"processes/#process-modelisation-and-implementation":{}},"title":{}}],["offlin",{"_index":746,"text":{"processes/":{},"processes/#getting-to-the-root-of-the-problem":{}},"title":{}}],["ok",{"_index":877,"text":{"processes/":{},"processes/#the-problem-of-environment-names":{}},"title":{}}],["okai",{"_index":613,"text":{"processes/":{},"processes/#healthy":{}},"title":{}}],["old",{"_index":407,"text":{"processes/":{},"processes/#dynamic-environment-as-a-new-paradigm":{}},"title":{}}],["older",{"_index":582,"text":{"processes/":{},"processes/#healthy":{}},"title":{}}],["on",{"_index":65,"text":{"processes/":{},"processes/#a-more-practical-gitops-model":{},"processes/#make-it-fluid-with-automatic-propagation":{},"processes/#make-the-fluidity-visible":{},"processes/#make-your-codes-equal":{},"processes/#manage-your-risk-by-adding-gates":{},"processes/#process-modelisation-and-implementation":{},"processes/#why-staging-and-production-should-be-and-cant-be-identical":{},"processes/#working":{},"simplicity/":{},"simplicity/#decoupling-price":{},"simplicity/#doing-one-thing-and-doing-it-well":{},"simplicity/#isolating-things":{},"simplicity/#maintaining-the-cause-and-effect-relationship":{},"simplicity/#new-challenges-introduced-by-the-decoupling":{},"simplicity/#premature-optimization":{},"simplicity/#the-benefit-of-isolated-entities":{}},"title":{"simplicity/#doing-one-thing-and-doing-it-well":{}}}],["onboard",{"_index":1206,"text":{"simplicity/":{},"simplicity/#make-it-simple-by-consistency":{}},"title":{}}],["onc",{"_index":733,"text":{"processes/":{},"processes/#there-is-no-replacement-for-the-e2e-test":{}},"title":{}}],["oper",{"_index":43,"text":{"":{},"#lessons-learned-as-a-devops-engineer":{},"processes/":{},"processes/#code-review-starts-with-yourself":{},"simplicity/":{},"simplicity/#make-it-simple-by-consistency":{},"simplicity/#new-challenges-introduced-by-the-decoupling":{},"simplicity/#the-benefit-of-having-simple-entities":{}},"title":{"operations/":{}}}],["opinion",{"_index":217,"text":{"processes/":{},"processes/#tools-are-not-the-way-to-talk-about-processes":{},"simplicity/":{},"simplicity/#make-it-simple-by-conventions":{}},"title":{}}],["opportun",{"_index":681,"text":{"processes/":{},"processes/#improving-the-code-review-process":{},"processes/#resilience":{}},"title":{}}],["optim",{"_index":34,"text":{"":{},"#lessons-learned-as-a-devops-engineer":{},"processes/":{},"processes/#process-1-feature-branch-as-the-source-of-truth":{},"simplicity/":{},"simplicity/#premature-optimization":{}},"title":{"simplicity/#premature-optimization":{}}}],["option",{"_index":398,"text":{"processes/":{},"processes/#dynamic-environment-as-a-new-paradigm":{}},"title":{}}],["orchestr",{"_index":95,"text":{"processes/":{}},"title":{}}],["orchestra",{"_index":1106,"text":{"simplicity/":{},"simplicity/#decoupling-price":{}},"title":{}}],["organ",{"_index":485,"text":{"processes/":{},"processes/#design-your-architecture-up-to-your-ambition":{},"simplicity/":{},"simplicity/#the-lego-era":{}},"title":{}}],["orient",{"_index":1158,"text":{"simplicity/":{},"simplicity/#make-it-simple-by-methodologies-technologies":{}},"title":{}}],["otherwis",{"_index":457,"text":{"processes/":{},"processes/#model-extension-to-include-all-kinds-of-code":{}},"title":{}}],["out",{"_index":719,"text":{"processes/":{},"processes/#the-problem-of-environment-names":{},"processes/#there-is-no-replacement-for-the-e2e-test":{},"simplicity/":{},"simplicity/#the-benefit-of-isolated-entities":{}},"title":{}}],["output",{"_index":233,"text":{"processes/":{},"processes/#understand-requirements":{}},"title":{}}],["outsid",{"_index":1146,"text":{"simplicity/":{},"simplicity/#premature-optimization":{},"simplicity/#the-lego-era":{}},"title":{}}],["outsourc",{"_index":564,"text":{"processes/":{},"processes/#making-testable-code":{},"processes/#working":{}},"title":{}}],["over",{"_index":618,"text":{"processes/":{},"processes/#stable":{}},"title":{}}],["overal",{"_index":783,"text":{"processes/":{},"processes/#code-review-as-the-last-bastion-of-defense":{},"simplicity/":{},"simplicity/#decoupling-price":{}},"title":{}}],["owner",{"_index":700,"text":{"processes/":{},"processes/#why-companies-fail-in-their-e2e-strategy":{}},"title":{}}],["ownership",{"_index":403,"text":{"processes/":{},"processes/#dynamic-environment-as-a-new-paradigm":{},"processes/#gitops":{},"simplicity/":{},"simplicity/#the-benefit-of-isolated-entities":{}},"title":{}}],["packag",{"_index":965,"text":{"processes/":{},"processes/#a-more-practical-gitops-model":{}},"title":{}}],["page",{"_index":495,"text":{"processes/":{},"processes/#process-2-the-release-management-process":{}},"title":{}}],["paper",{"_index":815,"text":{"processes/":{},"processes/#code-review-starts-with-yourself":{}},"title":{}}],["paradigm",{"_index":389,"text":{"processes/":{},"simplicity/":{},"simplicity/#the-lego-era":{}},"title":{"processes/#dynamic-environment-as-a-new-paradigm":{}}}],["paragraph",{"_index":699,"text":{"processes/":{},"processes/#a-more-practical-gitops-model":{},"processes/#make-it-fluid-with-automatic-propagation":{},"processes/#manage-your-risk-by-adding-gates":{},"processes/#the-problem-of-environment-names":{},"processes/#why-companies-fail-in-their-e2e-strategy":{},"simplicity/":{},"simplicity/#decoupling-price":{}},"title":{}}],["paramount",{"_index":393,"text":{"processes/":{},"processes/#dynamic-environment-as-a-new-paradigm":{}},"title":{}}],["pari",{"_index":826,"text":{"processes/":{},"processes/#code-review-starts-with-yourself":{}},"title":{}}],["part",{"_index":93,"text":{"processes/":{},"processes/#a-more-practical-gitops-model":{},"processes/#make-the-fluidity-visible":{},"processes/#making-testable-code":{},"processes/#process-1-feature-branch-as-the-source-of-truth":{},"processes/#process-modelisation-and-implementation":{},"processes/#there-is-no-replacement-for-the-e2e-test":{},"processes/#tools-are-not-the-way-to-talk-about-processes":{},"processes/#wrong-mindset":{},"simplicity/":{},"simplicity/#isolating-things":{},"simplicity/#new-challenges-introduced-by-the-decoupling":{},"simplicity/#simplicity-doesnt-mean-simplistic":{},"simplicity/#the-benefit-of-having-simple-entities":{},"simplicity/#the-benefit-of-isolated-entities":{}},"title":{}}],["parti",{"_index":1141,"text":{"simplicity/":{},"simplicity/#the-lego-era":{}},"title":{}}],["particip",{"_index":857,"text":{"processes/":{},"processes/#improving-the-code-review-process":{}},"title":{}}],["particular",{"_index":211,"text":{"processes/":{},"processes/#merge-to-master-point-of-no-difficult-return":{},"processes/#tools-are-not-the-way-to-talk-about-processes":{}},"title":{}}],["partit",{"_index":1095,"text":{"simplicity/":{},"simplicity/#the-benefit-of-isolated-entities":{}},"title":{}}],["pass",{"_index":522,"text":{"processes/":{},"processes/#process-2-the-release-management-process":{}},"title":{}}],["passag",{"_index":992,"text":{"processes/":{},"processes/#make-it-fluid-with-automatic-propagation":{}},"title":{}}],["past",{"_index":142,"text":{"processes/":{},"processes/#make-the-fluidity-visible":{},"processes/#rca-processes-relationship":{}},"title":{}}],["path",{"_index":1217,"text":{"simplicity/":{},"simplicity/#make-it-simple-by-conventions":{}},"title":{}}],["patient",{"_index":608,"text":{"processes/":{},"processes/#healthy":{}},"title":{}}],["pattern",{"_index":25,"text":{"":{},"#lessons-learned-as-a-devops-engineer":{},"processes/":{},"processes/#making-testable-code":{},"processes/#the-problem-of-environment-names":{},"simplicity/":{},"simplicity/#make-it-simple-by-consistency":{}},"title":{}}],["pavel",{"_index":19,"text":{"":{},"#lessons-learned-as-a-devops-engineer":{}},"title":{}}],["payment",{"_index":744,"text":{"processes/":{},"processes/#getting-to-the-root-of-the-problem":{}},"title":{}}],["peopl",{"_index":108,"text":{"processes/":{},"processes/#bridging-the-gap-between-mentalities":{},"processes/#make-your-processes-as-first-citizen":{},"simplicity/":{},"simplicity/#make-it-simple-by-consistency":{}},"title":{}}],["per",{"_index":473,"text":{"processes/":{},"processes/#a-more-practical-gitops-model":{},"processes/#make-your-codes-equal":{}},"title":{}}],["percept",{"_index":154,"text":{"processes/":{},"processes/#devops-as-a-business-analyst-with-many-technical-skills":{}},"title":{}}],["perform",{"_index":238,"text":{"processes/":{},"processes/#improving-the-code-review-process":{},"processes/#performance-indicators":{},"processes/#stable":{},"processes/#there-is-no-replacement-for-the-e2e-test":{},"processes/#understand-requirements":{},"processes/#wrong-mindset":{},"simplicity/":{},"simplicity/#make-it-simple-by-tagging":{}},"title":{"processes/#performance-indicators":{}}}],["perman",{"_index":891,"text":{"processes/":{},"processes/#the-problem-of-environment-names":{}},"title":{}}],["person",{"_index":583,"text":{"processes/":{},"processes/#healthy":{}},"title":{}}],["personnel",{"_index":1231,"text":{"simplicity/":{},"simplicity/#make-it-simple-by-making-compromises":{}},"title":{}}],["perspect",{"_index":542,"text":{"processes/":{},"processes/#process-modelisation-and-implementation":{},"processes/#working":{}},"title":{}}],["phase",{"_index":1118,"text":{"simplicity/":{},"simplicity/#the-lego-era":{}},"title":{}}],["pictur",{"_index":449,"text":{"processes/":{},"processes/#a-more-practical-gitops-model":{},"processes/#code-review-starts-with-yourself":{},"processes/#is-fluidity-only-for-start-up":{},"processes/#make-it-fluid-with-automatic-propagation":{},"processes/#model-extension-to-include-all-kinds-of-code":{},"processes/#process-modelisation-and-implementation":{},"processes/#there-is-no-replacement-for-the-e2e-test":{},"simplicity/":{},"simplicity/#make-it-simple-by-conventions":{}},"title":{}}],["piec",{"_index":96,"text":{"processes/":{},"processes/#code-review-starts-with-yourself":{},"processes/#make-your-processes-as-first-citizen":{},"processes/#process-modelisation-and-implementation":{},"processes/#there-is-no-replacement-for-the-e2e-test":{}},"title":{}}],["pioneer",{"_index":803,"text":{"processes/":{},"processes/#code-review-starts-with-yourself":{}},"title":{}}],["pipelin",{"_index":324,"text":{"processes/":{},"processes/#make-it-fluid-with-automatic-propagation":{},"processes/#make-the-fluidity-visible":{},"processes/#make-your-codes-equal":{},"processes/#manage-your-risk-by-adding-gates":{},"processes/#merge-to-master-point-of-no-difficult-return":{},"processes/#model-extension-to-include-all-kinds-of-code":{},"processes/#process-modelisation-and-implementation":{},"processes/#why-companies-fail-in-their-e2e-strategy":{},"simplicity/":{},"simplicity/#maintaining-the-cause-and-effect-relationship":{}},"title":{}}],["place",{"_index":675,"text":{"processes/":{},"processes/#resilience":{},"simplicity/":{},"simplicity/#premature-optimization":{}},"title":{}}],["plan",{"_index":761,"text":{"processes/":{},"processes/#is-fluidity-only-for-start-up":{},"processes/#making-testable-code":{},"simplicity/":{},"simplicity/#premature-optimization":{}},"title":{}}],["plate",{"_index":249,"text":{"processes/":{},"processes/#performance-indicators":{}},"title":{}}],["platform",{"_index":535,"text":{"processes/":{},"processes/#process-2-the-release-management-process":{}},"title":{}}],["po",{"_index":1238,"text":{"simplicity/":{},"simplicity/#make-it-simple-by-making-compromises":{}},"title":{}}],["pod",{"_index":972,"text":{"processes/":{},"processes/#a-more-practical-gitops-model":{},"simplicity/":{},"simplicity/#make-it-simple-by-tagging":{}},"title":{}}],["point",{"_index":168,"text":{"processes/":{},"processes/#code-review-as-the-last-bastion-of-defense":{},"processes/#devops-as-a-business-analyst-with-many-technical-skills":{},"processes/#healthy":{},"processes/#the-problem-of-environment-names":{},"simplicity/":{},"simplicity/#isolating-things":{},"simplicity/#the-lego-era":{}},"title":{"processes/#merge-to-master-point-of-no-difficult-return":{}}}],["poor",{"_index":119,"text":{"processes/":{},"processes/#make-your-processes-as-first-citizen":{}},"title":{}}],["poorli",{"_index":1073,"text":{"simplicity/":{},"simplicity/#with-great-power-new-challenges":{}},"title":{}}],["portabl",{"_index":1136,"text":{"simplicity/":{},"simplicity/#the-lego-era":{}},"title":{}}],["portion",{"_index":517,"text":{"processes/":{},"processes/#process-2-the-release-management-process":{}},"title":{}}],["posit",{"_index":163,"text":{"processes/":{},"processes/#code-review-starts-with-yourself":{},"processes/#devops-as-a-business-analyst-with-many-technical-skills":{}},"title":{}}],["possibl",{"_index":350,"text":{"processes/":{},"processes/#process-1-environment-creation-easy-setup":{},"processes/#process-1-feature-branch-as-the-source-of-truth":{},"processes/#process-modelisation-and-implementation":{},"processes/#why-companies-fail-in-their-e2e-strategy":{},"simplicity/":{},"simplicity/#premature-optimization":{},"simplicity/#with-great-power-new-challenges":{}},"title":{}}],["post",{"_index":127,"text":{"processes/":{},"processes/#rca-processes-relationship":{}},"title":{}}],["postgresql",{"_index":610,"text":{"processes/":{},"processes/#healthy":{}},"title":{}}],["postpon",{"_index":386,"text":{"processes/":{},"processes/#process-1-feature-branch-as-the-source-of-truth":{},"simplicity/":{},"simplicity/#premature-optimization":{}},"title":{}}],["potenti",{"_index":1173,"text":{"simplicity/":{},"simplicity/#premature-optimization":{}},"title":{}}],["power",{"_index":112,"text":{"processes/":{},"processes/#make-your-processes-as-first-citizen":{},"simplicity/":{},"simplicity/#with-great-power-new-challenges":{}},"title":{"simplicity/#with-great-power-new-challenges":{}}}],["pr",{"_index":1198,"text":{"simplicity/":{},"simplicity/#make-it-simple-by-tagging":{}},"title":{}}],["practic",{"_index":23,"text":{"":{},"#lessons-learned-as-a-devops-engineer":{},"processes/":{},"processes/#getting-to-the-root-of-the-problem":{},"processes/#process-1-environment-creation-easy-setup":{},"processes/#process-1-feature-branch-as-the-source-of-truth":{},"processes/#process-1-from-code-to-development-environments":{},"processes/#resilience":{},"processes/#stable":{},"simplicity/":{},"simplicity/#with-great-power-new-challenges":{}},"title":{"processes/#a-more-practical-gitops-model":{}}}],["precis",{"_index":856,"text":{"processes/":{},"processes/#improving-the-code-review-process":{},"simplicity/":{},"simplicity/#make-it-simple-by-tagging":{}},"title":{}}],["predefin",{"_index":821,"text":{"processes/":{},"processes/#code-review-starts-with-yourself":{}},"title":{}}],["predict",{"_index":665,"text":{"processes/":{},"processes/#resilience":{},"simplicity/":{},"simplicity/#make-it-simple-by-consistency":{},"simplicity/#make-it-simple-by-methodologies-technologies":{}},"title":{}}],["prematur",{"_index":1171,"text":{"simplicity/":{},"simplicity/#premature-optimization":{}},"title":{"simplicity/#premature-optimization":{}}}],["premis",{"_index":1067,"text":{"simplicity/":{},"simplicity/#with-great-power-new-challenges":{}},"title":{}}],["prepar",{"_index":59,"text":{"operations/":{}},"title":{}}],["presenc",{"_index":818,"text":{"processes/":{},"processes/#code-review-starts-with-yourself":{}},"title":{}}],["present",{"_index":885,"text":{"processes/":{},"processes/#the-problem-of-environment-names":{},"simplicity/":{},"simplicity/#new-challenges-introduced-by-the-decoupling":{}},"title":{}}],["press",{"_index":524,"text":{"processes/":{},"processes/#process-2-the-release-management-process":{}},"title":{}}],["pressur",{"_index":586,"text":{"processes/":{},"processes/#healthy":{}},"title":{}}],["pretti",{"_index":267,"text":{"processes/":{},"processes/#gitops":{},"processes/#wrong-mindset":{}},"title":{}}],["prevent",{"_index":134,"text":{"processes/":{},"processes/#merge-to-master-point-of-no-difficult-return":{},"processes/#rca-processes-relationship":{},"simplicity/":{},"simplicity/#striving-for-simplicity-at-all-layers":{}},"title":{}}],["previou",{"_index":452,"text":{"processes/":{},"processes/#gitops":{},"processes/#make-your-codes-equal":{},"processes/#manage-your-risk-by-adding-gates":{},"processes/#model-extension-to-include-all-kinds-of-code":{},"processes/#process-2-the-release-management-process":{},"processes/#process-modelisation-and-implementation":{}},"title":{}}],["price",{"_index":1100,"text":{"simplicity/":{}},"title":{"simplicity/#decoupling-price":{}}}],["primari",{"_index":489,"text":{"processes/":{},"processes/#process-2-the-release-management-process":{}},"title":{}}],["principl",{"_index":674,"text":{"processes/":{},"processes/#making-testable-code":{},"processes/#resilience":{},"simplicity/":{},"simplicity/#doing-one-thing-and-doing-it-well":{}},"title":{}}],["priorit",{"_index":1040,"text":{"processes/":{},"processes/#is-fluidity-only-for-start-up":{},"simplicity/":{},"simplicity/#make-it-simple-by-making-compromises":{}},"title":{}}],["prioriti",{"_index":1234,"text":{"simplicity/":{},"simplicity/#make-it-simple-by-making-compromises":{}},"title":{}}],["privat",{"_index":422,"text":{"processes/":{},"processes/#dynamic-environment-as-a-new-paradigm":{},"processes/#the-problem-of-environment-names":{},"simplicity/":{},"simplicity/#make-it-simple-by-tagging":{},"simplicity/#with-great-power-new-challenges":{}},"title":{}}],["probabl",{"_index":888,"text":{"processes/":{},"processes/#the-problem-of-environment-names":{}},"title":{}}],["problem",{"_index":175,"text":{"processes/":{},"processes/#devops-as-a-business-analyst-with-many-technical-skills":{},"processes/#process-2-the-release-management-process":{},"processes/#process-modelisation-and-implementation":{},"simplicity/":{},"simplicity/#make-it-simple-by-methodologies-technologies":{},"simplicity/#new-challenges-introduced-by-the-decoupling":{},"simplicity/#simplicity-doesnt-mean-simplistic":{}},"title":{"processes/#getting-to-the-root-of-the-problem":{},"processes/#the-problem-of-environment-names":{}}}],["process",{"_index":32,"text":{"":{},"#lessons-learned-as-a-devops-engineer":{},"processes/":{},"processes/#a-more-practical-gitops-model":{},"processes/#bridging-the-gap-between-mentalities":{},"processes/#devops-as-a-business-analyst-with-many-technical-skills":{},"processes/#getting-to-the-root-of-the-problem":{},"processes/#improving-the-code-review-process":{},"processes/#is-fluidity-only-for-start-up":{},"processes/#make-it-fluid-with-automatic-propagation":{},"processes/#make-the-fluidity-visible":{},"processes/#make-your-processes-as-first-citizen":{},"processes/#merge-to-master-point-of-no-difficult-return":{},"processes/#performance-indicators":{},"processes/#process-1-environment-creation-easy-setup":{},"processes/#process-1-feature-branch-as-the-source-of-truth":{},"processes/#process-1-from-code-to-development-environments":{},"processes/#process-2-the-release-management-process":{},"processes/#process-modelisation-and-implementation":{},"processes/#rca-processes-relationship":{},"processes/#resilience":{},"processes/#the-problem-of-environment-names":{},"processes/#tools-are-not-the-way-to-talk-about-processes":{},"processes/#understand-requirements":{},"processes/#wrong-mindset":{},"simplicity/":{},"simplicity/#maintaining-the-cause-and-effect-relationship":{},"simplicity/#make-it-simple-by-consistency":{},"simplicity/#make-it-simple-by-conventions":{},"simplicity/#make-it-simple-by-tagging":{},"simplicity/#the-lego-era":{}},"title":{"processes/":{},"processes/#improving-the-code-review-process":{},"processes/#make-your-processes-as-first-citizen":{},"processes/#process-1-environment-creation-easy-setup":{},"processes/#process-1-feature-branch-as-the-source-of-truth":{},"processes/#process-1-from-code-to-development-environments":{},"processes/#process-2-the-release-management-process":{},"processes/#process-modelisation-and-implementation":{},"processes/#rca-processes-relationship":{},"processes/#tools-are-not-the-way-to-talk-about-processes":{}}}],["product",{"_index":11,"text":{"":{},"#lessons-learned-as-a-devops-engineer":{},"processes/":{},"processes/#a-more-practical-gitops-model":{},"processes/#bridging-the-gap-between-mentalities":{},"processes/#code-review-as-the-last-bastion-of-defense":{},"processes/#devops-as-a-business-analyst-with-many-technical-skills":{},"processes/#is-fluidity-only-for-start-up":{},"processes/#make-it-fluid-with-automatic-propagation":{},"processes/#manage-your-risk-by-adding-gates":{},"processes/#merge-to-master-point-of-no-difficult-return":{},"processes/#process-1-from-code-to-development-environments":{},"processes/#process-2-the-release-management-process":{},"processes/#process-modelisation-and-implementation":{},"processes/#rca-processes-relationship":{},"processes/#resilience":{},"processes/#stable":{},"processes/#the-problem-of-environment-names":{},"processes/#why-staging-and-production-should-be-and-cant-be-identical":{},"processes/#working":{}},"title":{"processes/#why-staging-and-production-should-be-and-cant-be-identical":{}}}],["production2",{"_index":890,"text":{"processes/":{},"processes/#the-problem-of-environment-names":{}},"title":{}}],["profession",{"_index":503,"text":{"processes/":{},"processes/#process-2-the-release-management-process":{}},"title":{}}],["program",{"_index":810,"text":{"processes/":{},"processes/#a-more-practical-gitops-model":{},"processes/#code-review-starts-with-yourself":{}},"title":{}}],["progress",{"_index":847,"text":{"processes/":{},"processes/#improving-the-code-review-process":{},"processes/#manage-your-risk-by-adding-gates":{},"simplicity/":{},"simplicity/#make-it-simple-by-consistency":{}},"title":{}}],["promot",{"_index":408,"text":{"processes/":{},"processes/#dynamic-environment-as-a-new-paradigm":{},"processes/#the-problem-of-environment-names":{},"simplicity/":{},"simplicity/#make-it-simple-by-consistency":{}},"title":{}}],["proof",{"_index":995,"text":{"processes/":{},"processes/#make-it-fluid-with-automatic-propagation":{}},"title":{}}],["propag",{"_index":884,"text":{"processes/":{},"processes/#is-fluidity-only-for-start-up":{},"processes/#make-it-fluid-with-automatic-propagation":{},"processes/#manage-your-risk-by-adding-gates":{},"processes/#the-problem-of-environment-names":{}},"title":{"processes/#make-it-fluid-with-automatic-propagation":{}}}],["properti",{"_index":549,"text":{"processes/":{},"processes/#code-review-starts-with-yourself":{},"processes/#resilience":{},"processes/#why-companies-fail-in-their-e2e-strategy":{},"processes/#working":{}},"title":{}}],["protect",{"_index":317,"text":{"processes/":{},"processes/#process-1-from-code-to-development-environments":{}},"title":{}}],["prototyp",{"_index":1023,"text":{"processes/":{},"processes/#make-the-fluidity-visible":{}},"title":{}}],["proud",{"_index":268,"text":{"processes/":{},"processes/#wrong-mindset":{}},"title":{}}],["prove",{"_index":622,"text":{"processes/":{},"processes/#stable":{},"simplicity/":{},"simplicity/#maintaining-the-cause-and-effect-relationship":{}},"title":{}}],["provid",{"_index":299,"text":{"processes/":{},"processes/#gitops":{},"processes/#process-1-from-code-to-development-environments":{},"processes/#there-is-no-replacement-for-the-e2e-test":{},"processes/#why-companies-fail-in-their-e2e-strategy":{},"processes/#working":{},"simplicity/":{},"simplicity/#with-great-power-new-challenges":{}},"title":{}}],["provider\u2019",{"_index":1169,"text":{"simplicity/":{},"simplicity/#make-it-simple-by-methodologies-technologies":{}},"title":{}}],["proxi",{"_index":1132,"text":{"simplicity/":{},"simplicity/#the-lego-era":{}},"title":{}}],["public",{"_index":1056,"text":{"simplicity/":{},"simplicity/#with-great-power-new-challenges":{}},"title":{}}],["pull",{"_index":515,"text":{"processes/":{},"processes/#process-2-the-release-management-process":{}},"title":{}}],["punch",{"_index":813,"text":{"processes/":{},"processes/#code-review-starts-with-yourself":{}},"title":{}}],["pure",{"_index":255,"text":{"processes/":{},"processes/#performance-indicators":{},"simplicity/":{},"simplicity/#isolate-things-to-their-pure-essence":{}},"title":{"simplicity/#isolate-things-to-their-pure-essence":{}}}],["push",{"_index":311,"text":{"processes/":{},"processes/#gitops":{},"processes/#make-it-fluid-with-automatic-propagation":{},"processes/#process-1-environment-creation-easy-setup":{},"processes/#process-1-feature-branch-as-the-source-of-truth":{},"processes/#process-1-from-code-to-development-environments":{},"simplicity/":{},"simplicity/#make-it-simple-by-conventions":{}},"title":{}}],["python",{"_index":1147,"text":{"simplicity/":{},"simplicity/#the-lego-era":{}},"title":{}}],["quadrupl",{"_index":282,"text":{"processes/":{},"processes/#wrong-mindset":{}},"title":{}}],["qualiti",{"_index":790,"text":{"processes/":{},"processes/#code-review-as-the-last-bastion-of-defense":{},"simplicity/":{},"simplicity/#the-lego-era":{}},"title":{}}],["quantifi",{"_index":846,"text":{"processes/":{},"processes/#improving-the-code-review-process":{}},"title":{}}],["queen",{"_index":111,"text":{"processes/":{},"processes/#make-your-processes-as-first-citizen":{}},"title":{}}],["question",{"_index":66,"text":{"processes/":{},"processes/#rca-processes-relationship":{},"processes/#resilience":{},"processes/#why-companies-fail-in-their-e2e-strategy":{},"simplicity/":{},"simplicity/#make-it-simple-by-consistency":{},"simplicity/#new-challenges-introduced-by-the-decoupling":{},"simplicity/#the-lego-era":{}},"title":{}}],["queue",{"_index":262,"text":{"processes/":{},"processes/#getting-to-the-root-of-the-problem":{},"processes/#performance-indicators":{}},"title":{}}],["quick",{"_index":136,"text":{"processes/":{},"processes/#rca-processes-relationship":{}},"title":{}}],["quickli",{"_index":415,"text":{"processes/":{},"processes/#dynamic-environment-as-a-new-paradigm":{},"processes/#process-modelisation-and-implementation":{},"processes/#resilience":{},"simplicity/":{},"simplicity/#with-great-power-new-challenges":{}},"title":{}}],["raison",{"_index":1014,"text":{"processes/":{},"processes/#manage-your-risk-by-adding-gates":{}},"title":{}}],["random",{"_index":664,"text":{"processes/":{},"processes/#resilience":{}},"title":{}}],["randomli",{"_index":671,"text":{"processes/":{},"processes/#resilience":{}},"title":{}}],["ration",{"_index":468,"text":{"processes/":{},"processes/#code-review-starts-with-yourself":{},"processes/#make-your-codes-equal":{}},"title":{}}],["rca",{"_index":121,"text":{"processes/":{},"processes/#rca-processes-relationship":{}},"title":{"processes/#rca-processes-relationship":{}}}],["reach",{"_index":1117,"text":{"simplicity/":{},"simplicity/#the-lego-era":{}},"title":{}}],["reaction",{"_index":1199,"text":{"simplicity/":{},"simplicity/#make-it-simple-by-tagging":{}},"title":{}}],["readabl",{"_index":1179,"text":{"simplicity/":{},"simplicity/#premature-optimization":{}},"title":{}}],["readi",{"_index":1123,"text":{"simplicity/":{},"simplicity/#the-lego-era":{}},"title":{}}],["real",{"_index":83,"text":{"processes/":{},"processes/#getting-to-the-root-of-the-problem":{},"processes/#making-e2e-tests-affordable-removing-the-ui-layer":{},"processes/#process-1-from-code-to-development-environments":{},"processes/#resilience":{},"processes/#why-staging-and-production-should-be-and-cant-be-identical":{},"processes/#working":{},"processes/#wrong-mindset":{},"simplicity/":{},"simplicity/#premature-optimization":{}},"title":{}}],["realiti",{"_index":86,"text":{"processes/":{},"simplicity/":{},"simplicity/#make-it-simple-by-making-compromises":{}},"title":{}}],["realiz",{"_index":754,"text":{"processes/":{},"processes/#making-testable-code":{}},"title":{}}],["reason",{"_index":331,"text":{"processes/":{},"processes/#dynamic-environment-as-a-new-paradigm":{},"processes/#making-e2e-tests-affordable-removing-the-ui-layer":{},"processes/#merge-to-master-point-of-no-difficult-return":{},"processes/#the-problem-of-environment-names":{},"processes/#why-staging-and-production-should-be-and-cant-be-identical":{},"simplicity/":{},"simplicity/#doing-one-thing-and-doing-it-well":{}},"title":{}}],["receiv",{"_index":873,"text":{"processes/":{},"processes/#why-staging-and-production-should-be-and-cant-be-identical":{},"simplicity/":{},"simplicity/#make-it-simple-by-methodologies-technologies":{}},"title":{}}],["recent",{"_index":913,"text":{"processes/":{},"processes/#process-modelisation-and-implementation":{},"simplicity/":{},"simplicity/#make-it-simple-by-methodologies-technologies":{}},"title":{}}],["recogn",{"_index":838,"text":{"processes/":{},"processes/#improving-the-code-review-process":{}},"title":{}}],["recognit",{"_index":115,"text":{"processes/":{},"processes/#make-your-processes-as-first-citizen":{}},"title":{}}],["reconcil",{"_index":92,"text":{"processes/":{}},"title":{}}],["record",{"_index":1039,"text":{"processes/":{},"processes/#is-fluidity-only-for-start-up":{}},"title":{}}],["recov",{"_index":652,"text":{"processes/":{},"processes/#resilience":{}},"title":{}}],["recreat",{"_index":887,"text":{"processes/":{},"processes/#the-problem-of-environment-names":{}},"title":{}}],["redesign",{"_index":266,"text":{"processes/":{},"processes/#wrong-mindset":{}},"title":{}}],["redistribut",{"_index":196,"text":{"processes/":{},"processes/#bridging-the-gap-between-mentalities":{}},"title":{}}],["reduc",{"_index":269,"text":{"processes/":{},"processes/#code-review-as-the-last-bastion-of-defense":{},"processes/#wrong-mindset":{},"simplicity/":{},"simplicity/#make-it-simple-by-conventions":{}},"title":{}}],["reflect",{"_index":159,"text":{"processes/":{},"processes/#devops-as-a-business-analyst-with-many-technical-skills":{},"processes/#manage-your-risk-by-adding-gates":{}},"title":{}}],["reflex",{"_index":960,"text":{"processes/":{},"processes/#a-more-practical-gitops-model":{}},"title":{}}],["regard",{"_index":1232,"text":{"simplicity/":{},"simplicity/#make-it-simple-by-making-compromises":{}},"title":{}}],["regardless",{"_index":467,"text":{"processes/":{},"processes/#make-your-codes-equal":{}},"title":{}}],["registr",{"_index":1128,"text":{"simplicity/":{},"simplicity/#the-lego-era":{}},"title":{}}],["regress",{"_index":784,"text":{"processes/":{},"processes/#code-review-as-the-last-bastion-of-defense":{}},"title":{}}],["regularli",{"_index":822,"text":{"processes/":{},"processes/#code-review-starts-with-yourself":{},"processes/#the-problem-of-environment-names":{}},"title":{}}],["reinforc",{"_index":1223,"text":{"simplicity/":{},"simplicity/#make-it-simple-by-conventions":{}},"title":{}}],["reinvent",{"_index":1140,"text":{"simplicity/":{},"simplicity/#the-lego-era":{}},"title":{}}],["reject",{"_index":1172,"text":{"simplicity/":{},"simplicity/#premature-optimization":{}},"title":{}}],["rel",{"_index":569,"text":{"processes/":{},"processes/#healthy":{}},"title":{}}],["relat",{"_index":511,"text":{"processes/":{},"processes/#process-2-the-release-management-process":{},"simplicity/":{},"simplicity/#the-lego-era":{}},"title":{}}],["relationship",{"_index":123,"text":{"processes/":{},"simplicity/":{},"simplicity/#maintaining-the-cause-and-effect-relationship":{}},"title":{"processes/#rca-processes-relationship":{},"simplicity/#maintaining-the-cause-and-effect-relationship":{}}}],["releas",{"_index":323,"text":{"processes/":{},"processes/#a-more-practical-gitops-model":{},"processes/#is-fluidity-only-for-start-up":{},"processes/#make-it-fluid-with-automatic-propagation":{},"processes/#make-the-fluidity-visible":{},"processes/#manage-your-risk-by-adding-gates":{},"processes/#merge-to-master-point-of-no-difficult-return":{},"processes/#process-2-the-release-management-process":{},"processes/#why-companies-fail-in-their-e2e-strategy":{},"simplicity/":{},"simplicity/#maintaining-the-cause-and-effect-relationship":{}},"title":{"processes/#process-2-the-release-management-process":{}}}],["relev",{"_index":632,"text":{"processes/":{},"processes/#stable":{}},"title":{}}],["reli",{"_index":708,"text":{"processes/":{},"processes/#making-e2e-tests-affordable-removing-the-ui-layer":{},"processes/#why-companies-fail-in-their-e2e-strategy":{}},"title":{}}],["reliabl",{"_index":871,"text":{"processes/":{},"processes/#why-staging-and-production-should-be-and-cant-be-identical":{},"simplicity/":{},"simplicity/#the-lego-era":{}},"title":{}}],["remedi",{"_index":1174,"text":{"simplicity/":{},"simplicity/#premature-optimization":{}},"title":{}}],["rememb",{"_index":595,"text":{"processes/":{},"processes/#healthy":{}},"title":{}}],["remov",{"_index":767,"text":{"processes/":{},"processes/#making-e2e-tests-affordable-removing-the-ui-layer":{},"processes/#process-modelisation-and-implementation":{},"simplicity/":{},"simplicity/#the-benefit-of-isolated-entities":{}},"title":{"processes/#making-e2e-tests-affordable-removing-the-ui-layer":{}}}],["repair",{"_index":1090,"text":{"simplicity/":{},"simplicity/#the-benefit-of-having-simple-entities":{}},"title":{}}],["repeat",{"_index":634,"text":{"processes/":{},"processes/#stable":{}},"title":{}}],["replac",{"_index":709,"text":{"processes/":{},"processes/#there-is-no-replacement-for-the-e2e-test":{},"simplicity/":{},"simplicity/#the-benefit-of-isolated-entities":{}},"title":{"processes/#there-is-no-replacement-for-the-e2e-test":{}}}],["repo",{"_index":376,"text":{"processes/":{},"processes/#a-more-practical-gitops-model":{},"processes/#model-extension-to-include-all-kinds-of-code":{},"processes/#process-1-feature-branch-as-the-source-of-truth":{},"processes/#process-2-the-release-management-process":{},"processes/#process-modelisation-and-implementation":{},"simplicity/":{},"simplicity/#with-great-power-new-challenges":{}},"title":{}}],["report",{"_index":504,"text":{"processes/":{},"processes/#process-2-the-release-management-process":{}},"title":{}}],["repositori",{"_index":941,"text":{"processes/":{},"processes/#gitops":{}},"title":{}}],["repres",{"_index":213,"text":{"processes/":{},"processes/#code-review-starts-with-yourself":{},"processes/#merge-to-master-point-of-no-difficult-return":{},"processes/#process-modelisation-and-implementation":{},"processes/#tools-are-not-the-way-to-talk-about-processes":{},"processes/#why-companies-fail-in-their-e2e-strategy":{},"simplicity/":{},"simplicity/#the-lego-era":{}},"title":{}}],["request",{"_index":516,"text":{"processes/":{},"processes/#healthy":{},"processes/#process-2-the-release-management-process":{}},"title":{}}],["requir",{"_index":212,"text":{"processes/":{},"processes/#dynamic-environment-as-a-new-paradigm":{},"processes/#tools-are-not-the-way-to-talk-about-processes":{},"processes/#understand-requirements":{},"simplicity/":{},"simplicity/#make-it-simple-by-making-compromises":{},"simplicity/#make-it-simple-by-methodologies-technologies":{},"simplicity/#striving-for-simplicity-at-all-layers":{}},"title":{"processes/#understand-requirements":{}}}],["resili",{"_index":644,"text":{"processes/":{},"processes/#resilience":{},"simplicity/":{},"simplicity/#the-lego-era":{}},"title":{"processes/#resilience":{}}}],["resist",{"_index":193,"text":{"processes/":{},"processes/#bridging-the-gap-between-mentalities":{}},"title":{}}],["resolut",{"_index":841,"text":{"processes/":{},"processes/#improving-the-code-review-process":{}},"title":{}}],["resourc",{"_index":1189,"text":{"simplicity/":{},"simplicity/#make-it-simple-by-making-compromises":{},"simplicity/#make-it-simple-by-tagging":{}},"title":{}}],["respect",{"_index":559,"text":{"processes/":{},"processes/#working":{}},"title":{}}],["respons",{"_index":197,"text":{"processes/":{},"processes/#bridging-the-gap-between-mentalities":{},"processes/#healthy":{},"processes/#making-testable-code":{},"processes/#stable":{},"processes/#understand-requirements":{},"processes/#wrong-mindset":{},"simplicity/":{},"simplicity/#doing-one-thing-and-doing-it-well":{},"simplicity/#maintaining-the-cause-and-effect-relationship":{}},"title":{}}],["rest",{"_index":1160,"text":{"simplicity/":{},"simplicity/#make-it-simple-by-methodologies-technologies":{},"simplicity/#premature-optimization":{}},"title":{}}],["restart",{"_index":1096,"text":{"simplicity/":{},"simplicity/#the-benefit-of-isolated-entities":{}},"title":{}}],["restrict",{"_index":1230,"text":{"simplicity/":{},"simplicity/#make-it-simple-by-making-compromises":{}},"title":{}}],["result",{"_index":629,"text":{"processes/":{},"processes/#stable":{}},"title":{}}],["retriev",{"_index":1194,"text":{"simplicity/":{},"simplicity/#make-it-simple-by-tagging":{}},"title":{}}],["retrospect",{"_index":852,"text":{"processes/":{},"processes/#improving-the-code-review-process":{},"processes/#make-the-fluidity-visible":{}},"title":{}}],["return",{"_index":320,"text":{"processes/":{},"processes/#code-review-as-the-last-bastion-of-defense":{},"processes/#code-review-starts-with-yourself":{},"processes/#resilience":{}},"title":{"processes/#merge-to-master-point-of-no-difficult-return":{}}}],["reus",{"_index":1121,"text":{"simplicity/":{},"simplicity/#the-lego-era":{}},"title":{}}],["revert",{"_index":525,"text":{"processes/":{},"processes/#process-2-the-release-management-process":{}},"title":{}}],["review",{"_index":778,"text":{"processes/":{},"processes/#code-review-as-the-last-bastion-of-defense":{},"processes/#code-review-starts-with-yourself":{},"processes/#improving-the-code-review-process":{},"processes/#is-fluidity-only-for-start-up":{}},"title":{"processes/#code-review-as-the-last-bastion-of-defense":{},"processes/#code-review-starts-with-yourself":{},"processes/#improving-the-code-review-process":{}}}],["revisit",{"_index":928,"text":{"processes/":{},"processes/#process-modelisation-and-implementation":{}},"title":{}}],["revolut",{"_index":1120,"text":{"simplicity/":{},"simplicity/#the-lego-era":{}},"title":{}}],["right",{"_index":602,"text":{"processes/":{},"processes/#healthy":{},"simplicity/":{},"simplicity/#make-it-simple-by-consistency":{},"simplicity/#make-it-simple-by-conventions":{}},"title":{}}],["rigid",{"_index":657,"text":{"processes/":{},"processes/#is-fluidity-only-for-start-up":{},"processes/#resilience":{}},"title":{}}],["ring",{"_index":107,"text":{"processes/":{},"processes/#make-your-processes-as-first-citizen":{}},"title":{}}],["rise",{"_index":764,"text":{"processes/":{},"processes/#making-testable-code":{}},"title":{}}],["risk",{"_index":492,"text":{"processes/":{},"processes/#process-2-the-release-management-process":{},"processes/#the-problem-of-environment-names":{},"processes/#there-is-no-replacement-for-the-e2e-test":{}},"title":{"processes/#manage-your-risk-by-adding-gates":{}}}],["role",{"_index":171,"text":{"processes/":{},"processes/#bridging-the-gap-between-mentalities":{},"processes/#devops-as-a-business-analyst-with-many-technical-skills":{}},"title":{}}],["roll",{"_index":881,"text":{"processes/":{},"processes/#the-problem-of-environment-names":{}},"title":{}}],["root",{"_index":124,"text":{"processes/":{},"processes/#getting-to-the-root-of-the-problem":{},"processes/#rca-processes-relationship":{},"processes/#wrong-mindset":{}},"title":{"processes/#getting-to-the-root-of-the-problem":{}}}],["rout",{"_index":1006,"text":{"processes/":{},"processes/#make-it-fluid-with-automatic-propagation":{},"processes/#manage-your-risk-by-adding-gates":{}},"title":{}}],["rule",{"_index":998,"text":{"processes/":{},"processes/#make-it-fluid-with-automatic-propagation":{}},"title":{}}],["run",{"_index":302,"text":{"processes/":{},"processes/#process-1-from-code-to-development-environments":{},"processes/#stable":{},"processes/#why-companies-fail-in-their-e2e-strategy":{},"simplicity/":{},"simplicity/#the-lego-era":{}},"title":{}}],["s3",{"_index":1191,"text":{"simplicity/":{},"simplicity/#make-it-simple-by-tagging":{}},"title":{}}],["sale",{"_index":921,"text":{"processes/":{},"processes/#process-modelisation-and-implementation":{}},"title":{}}],["salesforc",{"_index":17,"text":{"":{},"#lessons-learned-as-a-devops-engineer":{}},"title":{}}],["salesman",{"_index":926,"text":{"processes/":{},"processes/#process-modelisation-and-implementation":{}},"title":{}}],["salesman\u2019",{"_index":937,"text":{"processes/":{},"processes/#process-modelisation-and-implementation":{}},"title":{}}],["same",{"_index":459,"text":{"processes/":{},"processes/#getting-to-the-root-of-the-problem":{},"processes/#make-it-fluid-with-automatic-propagation":{},"processes/#model-extension-to-include-all-kinds-of-code":{},"simplicity/":{},"simplicity/#make-it-simple-by-conventions":{}},"title":{}}],["satisfi",{"_index":1019,"text":{"processes/":{},"processes/#manage-your-risk-by-adding-gates":{},"simplicity/":{},"simplicity/#make-it-simple-by-making-compromises":{}},"title":{}}],["save",{"_index":375,"text":{"processes/":{},"processes/#process-1-feature-branch-as-the-source-of-truth":{}},"title":{}}],["scalabl",{"_index":198,"text":{"processes/":{},"processes/#bridging-the-gap-between-mentalities":{},"processes/#design-your-architecture-up-to-your-ambition":{},"simplicity/":{},"simplicity/#isolating-things":{},"simplicity/#the-lego-era":{}},"title":{}}],["scale",{"_index":1094,"text":{"simplicity/":{},"simplicity/#the-benefit-of-isolated-entities":{}},"title":{}}],["scenario",{"_index":555,"text":{"processes/":{},"processes/#resilience":{},"processes/#why-companies-fail-in-their-e2e-strategy":{},"processes/#working":{}},"title":{}}],["scene",{"_index":580,"text":{"processes/":{},"processes/#healthy":{}},"title":{}}],["schema",{"_index":529,"text":{"processes/":{},"processes/#process-2-the-release-management-process":{}},"title":{}}],["scienc",{"_index":544,"text":{"processes/":{},"processes/#working":{}},"title":{}}],["scope",{"_index":678,"text":{"processes/":{},"processes/#resilience":{}},"title":{}}],["score",{"_index":855,"text":{"processes/":{},"processes/#improving-the-code-review-process":{}},"title":{}}],["scratch",{"_index":893,"text":{"processes/":{},"processes/#the-problem-of-environment-names":{}},"title":{}}],["scrum",{"_index":752,"text":{"processes/":{},"processes/#making-testable-code":{}},"title":{}}],["search",{"_index":1129,"text":{"simplicity/":{},"simplicity/#make-it-simple-by-consistency":{},"simplicity/#the-lego-era":{}},"title":{}}],["second",{"_index":487,"text":{"processes/":{},"processes/#a-more-practical-gitops-model":{},"processes/#healthy":{},"processes/#process-2-the-release-management-process":{},"processes/#process-modelisation-and-implementation":{},"processes/#why-staging-and-production-should-be-and-cant-be-identical":{}},"title":{}}],["secret",{"_index":970,"text":{"processes/":{},"processes/#a-more-practical-gitops-model":{},"simplicity/":{},"simplicity/#make-it-simple-by-tagging":{},"simplicity/#new-challenges-introduced-by-the-decoupling":{}},"title":{}}],["section",{"_index":461,"text":{"processes/":{},"processes/#make-your-codes-equal":{}},"title":{}}],["secur",{"_index":53,"text":{"":{},"#lessons-learned-as-a-devops-engineer":{},"processes/":{},"processes/#bridging-the-gap-between-mentalities":{},"processes/#getting-to-the-root-of-the-problem":{},"processes/#resilience":{},"simplicity/":{},"simplicity/#new-challenges-introduced-by-the-decoupling":{},"simplicity/#the-lego-era":{},"simplicity/#with-great-power-new-challenges":{}},"title":{}}],["see",{"_index":412,"text":{"processes/":{},"processes/#code-review-starts-with-yourself":{},"processes/#dynamic-environment-as-a-new-paradigm":{},"processes/#make-it-fluid-with-automatic-propagation":{},"processes/#there-is-no-replacement-for-the-e2e-test":{},"processes/#why-companies-fail-in-their-e2e-strategy":{},"processes/#working":{}},"title":{}}],["seem",{"_index":500,"text":{"processes/":{},"processes/#making-testable-code":{},"processes/#process-2-the-release-management-process":{},"processes/#the-problem-of-environment-names":{}},"title":{}}],["seen",{"_index":1021,"text":{"processes/":{},"processes/#make-the-fluidity-visible":{}},"title":{}}],["self",{"_index":484,"text":{"processes/":{},"processes/#design-your-architecture-up-to-your-ambition":{},"processes/#improving-the-code-review-process":{}},"title":{}}],["sell",{"_index":919,"text":{"processes/":{},"processes/#process-modelisation-and-implementation":{}},"title":{}}],["send",{"_index":592,"text":{"processes/":{},"processes/#healthy":{}},"title":{}}],["sender",{"_index":1167,"text":{"simplicity/":{},"simplicity/#make-it-simple-by-methodologies-technologies":{}},"title":{}}],["sens",{"_index":922,"text":{"processes/":{},"processes/#process-modelisation-and-implementation":{}},"title":{}}],["sensit",{"_index":1190,"text":{"simplicity/":{},"simplicity/#make-it-simple-by-tagging":{}},"title":{}}],["sent",{"_index":577,"text":{"processes/":{},"processes/#code-review-starts-with-yourself":{},"processes/#healthy":{},"processes/#there-is-no-replacement-for-the-e2e-test":{}},"title":{}}],["separ",{"_index":1089,"text":{"simplicity/":{},"simplicity/#the-benefit-of-having-simple-entities":{}},"title":{}}],["serious",{"_index":1037,"text":{"processes/":{},"processes/#is-fluidity-only-for-start-up":{}},"title":{}}],["serv",{"_index":172,"text":{"processes/":{},"processes/#devops-as-a-business-analyst-with-many-technical-skills":{}},"title":{}}],["server",{"_index":1131,"text":{"simplicity/":{},"simplicity/#the-lego-era":{}},"title":{}}],["serverless",{"_index":1163,"text":{"simplicity/":{},"simplicity/#make-it-simple-by-methodologies-technologies":{}},"title":{}}],["servic",{"_index":297,"text":{"processes/":{},"processes/#a-more-practical-gitops-model":{},"processes/#getting-to-the-root-of-the-problem":{},"processes/#healthy":{},"processes/#make-it-fluid-with-automatic-propagation":{},"processes/#make-the-fluidity-visible":{},"processes/#make-your-codes-equal":{},"processes/#model-extension-to-include-all-kinds-of-code":{},"processes/#process-1-environment-creation-easy-setup":{},"processes/#process-1-from-code-to-development-environments":{},"processes/#process-2-the-release-management-process":{},"processes/#why-companies-fail-in-their-e2e-strategy":{},"processes/#working":{},"simplicity/":{},"simplicity/#make-it-simple-by-making-compromises":{},"simplicity/#make-it-simple-by-methodologies-technologies":{},"simplicity/#the-lego-era":{}},"title":{}}],["session",{"_index":858,"text":{"processes/":{},"processes/#improving-the-code-review-process":{}},"title":{}}],["set",{"_index":22,"text":{"":{},"#lessons-learned-as-a-devops-engineer":{},"processes/":{},"processes/#make-it-fluid-with-automatic-propagation":{},"processes/#process-1-feature-branch-as-the-source-of-truth":{}},"title":{}}],["setup",{"_index":424,"text":{"processes/":{}},"title":{"processes/#process-1-environment-creation-easy-setup":{}}}],["sever",{"_index":1069,"text":{"simplicity/":{},"simplicity/#decoupling-price":{},"simplicity/#simplicity-doesnt-mean-simplistic":{},"simplicity/#with-great-power-new-challenges":{}},"title":{}}],["shadow",{"_index":209,"text":{"processes/":{},"processes/#tools-are-not-the-way-to-talk-about-processes":{}},"title":{}}],["share",{"_index":397,"text":{"processes/":{},"processes/#code-review-as-the-last-bastion-of-defense":{},"processes/#dynamic-environment-as-a-new-paradigm":{},"processes/#process-modelisation-and-implementation":{},"simplicity/":{},"simplicity/#new-challenges-introduced-by-the-decoupling":{},"simplicity/#the-benefit-of-having-simple-entities":{}},"title":{}}],["sheet",{"_index":823,"text":{"processes/":{},"processes/#code-review-starts-with-yourself":{}},"title":{}}],["shop",{"_index":1124,"text":{"simplicity/":{},"simplicity/#the-lego-era":{}},"title":{}}],["short",{"_index":437,"text":{"processes/":{},"processes/#process-1-environment-creation-easy-setup":{}},"title":{}}],["show",{"_index":1151,"text":{"simplicity/":{},"simplicity/#make-it-simple-by-conventions":{},"simplicity/#the-lego-era":{}},"title":{}}],["shown",{"_index":145,"text":{"processes/":{},"processes/#process-modelisation-and-implementation":{},"processes/#rca-processes-relationship":{}},"title":{}}],["side",{"_index":334,"text":{"processes/":{},"processes/#merge-to-master-point-of-no-difficult-return":{}},"title":{}}],["sign",{"_index":572,"text":{"processes/":{},"processes/#healthy":{}},"title":{}}],["signific",{"_index":358,"text":{"processes/":{},"processes/#process-1-feature-branch-as-the-source-of-truth":{},"processes/#resilience":{}},"title":{}}],["significantli",{"_index":785,"text":{"processes/":{},"processes/#code-review-as-the-last-bastion-of-defense":{}},"title":{}}],["silo",{"_index":192,"text":{"processes/":{},"processes/#bridging-the-gap-between-mentalities":{}},"title":{}}],["similar",{"_index":956,"text":{"processes/":{},"processes/#a-more-practical-gitops-model":{},"simplicity/":{},"simplicity/#make-it-simple-by-making-compromises":{},"simplicity/#with-great-power-new-challenges":{}},"title":{}}],["similarli",{"_index":910,"text":{"processes/":{},"processes/#process-modelisation-and-implementation":{}},"title":{}}],["simpl",{"_index":71,"text":{"processes/":{},"processes/#gitops":{},"processes/#make-it-fluid-with-automatic-propagation":{},"processes/#make-the-fluidity-visible":{},"processes/#make-your-processes-as-first-citizen":{},"processes/#making-e2e-tests-affordable-removing-the-ui-layer":{},"processes/#stable":{},"processes/#there-is-no-replacement-for-the-e2e-test":{},"simplicity/":{},"simplicity/#decoupling-price":{},"simplicity/#maintaining-the-cause-and-effect-relationship":{},"simplicity/#make-it-simple-by-consistency":{},"simplicity/#simplicity-doesnt-mean-simplistic":{},"simplicity/#the-benefit-of-having-simple-entities":{}},"title":{"simplicity/#make-it-simple-by-consistency":{},"simplicity/#make-it-simple-by-conventions":{},"simplicity/#make-it-simple-by-making-compromises":{},"simplicity/#make-it-simple-by-methodologies-technologies":{},"simplicity/#make-it-simple-by-tagging":{},"simplicity/#the-benefit-of-having-simple-entities":{}}}],["simpler",{"_index":1236,"text":{"simplicity/":{},"simplicity/#make-it-simple-by-making-compromises":{}},"title":{}}],["simplest",{"_index":773,"text":{"processes/":{},"processes/#making-e2e-tests-affordable-removing-the-ui-layer":{}},"title":{}}],["simpli",{"_index":1012,"text":{"processes/":{},"processes/#manage-your-risk-by-adding-gates":{}},"title":{}}],["simplic",{"_index":39,"text":{"":{},"#lessons-learned-as-a-devops-engineer":{},"simplicity/":{},"simplicity/#isolate-things-to-their-pure-essence":{},"simplicity/#make-it-simple-by-tagging":{},"simplicity/#premature-optimization":{},"simplicity/#simplicity-doesnt-mean-simplistic":{},"simplicity/#striving-for-simplicity-at-all-layers":{}},"title":{"simplicity/":{},"simplicity/#simplicity-doesnt-mean-simplistic":{},"simplicity/#striving-for-simplicity-at-all-layers":{}}}],["simplif",{"_index":470,"text":{"processes/":{},"processes/#make-your-codes-equal":{}},"title":{}}],["simplifi",{"_index":469,"text":{"processes/":{},"processes/#make-your-codes-equal":{},"simplicity/":{},"simplicity/#make-it-simple-by-conventions":{}},"title":{}}],["simplist",{"_index":949,"text":{"processes/":{},"processes/#a-more-practical-gitops-model":{},"simplicity/":{},"simplicity/#simplicity-doesnt-mean-simplistic":{}},"title":{"simplicity/#simplicity-doesnt-mean-simplistic":{}}}],["simul",{"_index":554,"text":{"processes/":{},"processes/#making-e2e-tests-affordable-removing-the-ui-layer":{},"processes/#resilience":{},"processes/#working":{}},"title":{}}],["singl",{"_index":480,"text":{"processes/":{},"processes/#a-more-practical-gitops-model":{},"processes/#design-your-architecture-up-to-your-ambition":{},"processes/#process-modelisation-and-implementation":{},"simplicity/":{},"simplicity/#doing-one-thing-and-doing-it-well":{}},"title":{}}],["situat",{"_index":959,"text":{"processes/":{},"processes/#a-more-practical-gitops-model":{}},"title":{}}],["size",{"_index":661,"text":{"processes/":{},"processes/#resilience":{}},"title":{}}],["skill",{"_index":152,"text":{"processes/":{},"processes/#devops-as-a-business-analyst-with-many-technical-skills":{}},"title":{"processes/#devops-as-a-business-analyst-with-many-technical-skills":{}}}],["slack",{"_index":278,"text":{"processes/":{},"processes/#model-extension-to-include-all-kinds-of-code":{},"processes/#process-1-environment-creation-easy-setup":{},"processes/#wrong-mindset":{},"simplicity/":{},"simplicity/#make-it-simple-by-tagging":{}},"title":{}}],["slight",{"_index":756,"text":{"processes/":{},"processes/#making-testable-code":{}},"title":{}}],["slow",{"_index":283,"text":{"processes/":{},"processes/#getting-to-the-root-of-the-problem":{},"processes/#wrong-mindset":{}},"title":{}}],["small",{"_index":641,"text":{"processes/":{},"processes/#code-review-starts-with-yourself":{},"processes/#stable":{},"simplicity/":{},"simplicity/#maintaining-the-cause-and-effect-relationship":{}},"title":{}}],["smaller",{"_index":963,"text":{"processes/":{},"processes/#a-more-practical-gitops-model":{}},"title":{}}],["smart",{"_index":943,"text":{"processes/":{},"processes/#gitops":{},"simplicity/":{},"simplicity/#make-it-simple-by-making-compromises":{}},"title":{}}],["soft",{"_index":1241,"text":{"simplicity/":{},"simplicity/#make-it-simple-by-making-compromises":{}},"title":{}}],["softwar",{"_index":8,"text":{"":{},"#lessons-learned-as-a-devops-engineer":{},"processes/":{},"processes/#code-review-starts-with-yourself":{},"processes/#devops-as-a-business-analyst-with-many-technical-skills":{},"processes/#is-fluidity-only-for-start-up":{},"processes/#make-your-processes-as-first-citizen":{},"processes/#resilience":{},"processes/#working":{},"simplicity/":{},"simplicity/#isolating-things":{},"simplicity/#the-lego-era":{}},"title":{}}],["sold",{"_index":734,"text":{"processes/":{},"processes/#there-is-no-replacement-for-the-e2e-test":{}},"title":{}}],["sole",{"_index":566,"text":{"processes/":{},"processes/#gitops":{},"processes/#working":{}},"title":{}}],["solid",{"_index":1218,"text":{"simplicity/":{},"simplicity/#make-it-simple-by-conventions":{}},"title":{}}],["solut",{"_index":177,"text":{"processes/":{},"processes/#devops-as-a-business-analyst-with-many-technical-skills":{},"processes/#tools-are-not-the-way-to-talk-about-processes":{},"simplicity/":{},"simplicity/#make-it-simple-by-making-compromises":{}},"title":{}}],["solv",{"_index":987,"text":{"processes/":{},"processes/#a-more-practical-gitops-model":{}},"title":{}}],["someth",{"_index":844,"text":{"processes/":{},"processes/#improving-the-code-review-process":{},"processes/#make-the-fluidity-visible":{},"processes/#process-modelisation-and-implementation":{},"processes/#the-problem-of-environment-names":{},"simplicity/":{},"simplicity/#premature-optimization":{}},"title":{}}],["soon",{"_index":1170,"text":{"simplicity/":{},"simplicity/#make-it-simple-by-methodologies-technologies":{}},"title":{}}],["sourc",{"_index":344,"text":{"processes/":{},"processes/#design-your-architecture-up-to-your-ambition":{},"processes/#gitops":{},"processes/#process-1-feature-branch-as-the-source-of-truth":{},"processes/#process-modelisation-and-implementation":{},"processes/#resilience":{},"processes/#the-problem-of-environment-names":{}},"title":{"processes/#process-1-feature-branch-as-the-source-of-truth":{}}}],["span",{"_index":687,"text":{"processes/":{},"processes/#why-companies-fail-in-their-e2e-strategy":{}},"title":{}}],["spare",{"_index":713,"text":{"processes/":{},"processes/#there-is-no-replacement-for-the-e2e-test":{}},"title":{}}],["special",{"_index":380,"text":{"processes/":{},"processes/#process-1-feature-branch-as-the-source-of-truth":{},"processes/#the-problem-of-environment-names":{},"processes/#there-is-no-replacement-for-the-e2e-test":{}},"title":{}}],["specif",{"_index":978,"text":{"processes/":{},"processes/#a-more-practical-gitops-model":{}},"title":{}}],["spend",{"_index":1032,"text":{"processes/":{},"processes/#is-fluidity-only-for-start-up":{},"simplicity/":{},"simplicity/#premature-optimization":{}},"title":{}}],["spent",{"_index":849,"text":{"processes/":{},"processes/#improving-the-code-review-process":{}},"title":{}}],["spike",{"_index":455,"text":{"processes/":{},"processes/#model-extension-to-include-all-kinds-of-code":{}},"title":{}}],["spreadsheet",{"_index":936,"text":{"processes/":{},"processes/#gitops":{},"processes/#process-modelisation-and-implementation":{}},"title":{}}],["stabil",{"_index":623,"text":{"processes/":{},"processes/#stable":{}},"title":{}}],["stabl",{"_index":615,"text":{"processes/":{},"processes/#resilience":{},"processes/#stable":{},"simplicity/":{},"simplicity/#the-lego-era":{}},"title":{"processes/#stable":{}}}],["stack",{"_index":476,"text":{"processes/":{},"processes/#make-your-codes-equal":{},"processes/#the-problem-of-environment-names":{}},"title":{}}],["stage",{"_index":315,"text":{"processes/":{},"processes/#make-it-fluid-with-automatic-propagation":{},"processes/#process-1-from-code-to-development-environments":{},"processes/#process-modelisation-and-implementation":{},"processes/#the-problem-of-environment-names":{},"processes/#why-staging-and-production-should-be-and-cant-be-identical":{}},"title":{"processes/#why-staging-and-production-should-be-and-cant-be-identical":{}}}],["stai",{"_index":1233,"text":{"simplicity/":{},"simplicity/#make-it-simple-by-making-compromises":{}},"title":{}}],["stand",{"_index":845,"text":{"processes/":{},"processes/#improving-the-code-review-process":{}},"title":{}}],["standard",{"_index":791,"text":{"processes/":{},"processes/#code-review-as-the-last-bastion-of-defense":{},"simplicity/":{},"simplicity/#make-it-simple-by-consistency":{}},"title":{}}],["start",{"_index":227,"text":{"processes/":{},"processes/#is-fluidity-only-for-start-up":{},"processes/#making-testable-code":{},"processes/#model-extension-to-include-all-kinds-of-code":{},"processes/#process-1-feature-branch-as-the-source-of-truth":{},"processes/#process-2-the-release-management-process":{},"processes/#process-modelisation-and-implementation":{},"processes/#the-problem-of-environment-names":{},"processes/#understand-requirements":{}},"title":{"processes/#code-review-starts-with-yourself":{},"processes/#is-fluidity-only-for-start-up":{}}}],["state",{"_index":402,"text":{"processes/":{},"processes/#dynamic-environment-as-a-new-paradigm":{},"processes/#gitops":{},"processes/#process-modelisation-and-implementation":{},"processes/#the-problem-of-environment-names":{},"simplicity/":{},"simplicity/#doing-one-thing-and-doing-it-well":{}},"title":{}}],["stateless",{"_index":896,"text":{"processes/":{},"processes/#the-problem-of-environment-names":{}},"title":{}}],["static",{"_index":396,"text":{"processes/":{},"processes/#dynamic-environment-as-a-new-paradigm":{},"simplicity/":{},"simplicity/#make-it-simple-by-tagging":{}},"title":{}}],["step",{"_index":935,"text":{"processes/":{},"processes/#process-modelisation-and-implementation":{},"simplicity/":{},"simplicity/#the-lego-era":{}},"title":{}}],["still",{"_index":1107,"text":{"simplicity/":{},"simplicity/#decoupling-price":{}},"title":{}}],["stock",{"_index":933,"text":{"processes/":{},"processes/#process-modelisation-and-implementation":{}},"title":{}}],["store",{"_index":505,"text":{"processes/":{},"processes/#process-2-the-release-management-process":{}},"title":{}}],["stori",{"_index":291,"text":{"processes/":{},"processes/#wrong-mindset":{},"simplicity/":{},"simplicity/#make-it-simple-by-conventions":{}},"title":{}}],["strategi",{"_index":385,"text":{"processes/":{},"processes/#getting-to-the-root-of-the-problem":{},"processes/#is-fluidity-only-for-start-up":{},"processes/#make-your-codes-equal":{},"processes/#process-1-feature-branch-as-the-source-of-truth":{},"processes/#the-problem-of-environment-names":{}},"title":{"processes/#why-companies-fail-in-their-e2e-strategy":{}}}],["stress",{"_index":649,"text":{"processes/":{},"processes/#resilience":{}},"title":{}}],["stretch",{"_index":658,"text":{"processes/":{},"processes/#resilience":{}},"title":{}}],["strive",{"_index":1077,"text":{"simplicity/":{}},"title":{"simplicity/#striving-for-simplicity-at-all-layers":{}}}],["strong",{"_index":1002,"text":{"processes/":{},"processes/#make-it-fluid-with-automatic-propagation":{}},"title":{}}],["stuck",{"_index":280,"text":{"processes/":{},"processes/#wrong-mindset":{}},"title":{}}],["sub",{"_index":955,"text":{"processes/":{},"processes/#a-more-practical-gitops-model":{}},"title":{}}],["subject",{"_index":568,"text":{"processes/":{},"processes/#healthy":{},"processes/#stable":{},"simplicity/":{},"simplicity/#make-it-simple-by-tagging":{}},"title":{}}],["suboptim",{"_index":836,"text":{"processes/":{},"processes/#improving-the-code-review-process":{}},"title":{}}],["subset",{"_index":1003,"text":{"processes/":{},"processes/#make-it-fluid-with-automatic-propagation":{}},"title":{}}],["success",{"_index":242,"text":{"processes/":{},"processes/#making-testable-code":{},"processes/#performance-indicators":{},"processes/#there-is-no-replacement-for-the-e2e-test":{},"simplicity/":{},"simplicity/#make-it-simple-by-consistency":{}},"title":{}}],["such",{"_index":81,"text":{"processes/":{},"processes/#a-more-practical-gitops-model":{},"processes/#gitops":{},"processes/#improving-the-code-review-process":{},"simplicity/":{},"simplicity/#simplicity-doesnt-mean-simplistic":{},"simplicity/#the-lego-era":{},"simplicity/#with-great-power-new-challenges":{}},"title":{}}],["suddenli",{"_index":501,"text":{"processes/":{},"processes/#process-2-the-release-management-process":{}},"title":{}}],["suggest",{"_index":1181,"text":{"simplicity/":{},"simplicity/#premature-optimization":{}},"title":{}}],["super",{"_index":1036,"text":{"processes/":{},"processes/#is-fluidity-only-for-start-up":{}},"title":{}}],["supermarket",{"_index":1125,"text":{"simplicity/":{},"simplicity/#the-lego-era":{}},"title":{}}],["support",{"_index":431,"text":{"processes/":{},"processes/#process-1-environment-creation-easy-setup":{}},"title":{}}],["suppos",{"_index":609,"text":{"processes/":{},"processes/#healthy":{},"processes/#make-it-fluid-with-automatic-propagation":{},"processes/#there-is-no-replacement-for-the-e2e-test":{}},"title":{}}],["sure",{"_index":436,"text":{"processes/":{},"processes/#making-testable-code":{},"processes/#process-1-environment-creation-easy-setup":{},"processes/#process-2-the-release-management-process":{},"processes/#there-is-no-replacement-for-the-e2e-test":{},"simplicity/":{},"simplicity/#new-challenges-introduced-by-the-decoupling":{},"simplicity/#premature-optimization":{}},"title":{}}],["surpris",{"_index":493,"text":{"processes/":{},"processes/#process-2-the-release-management-process":{}},"title":{}}],["swiss",{"_index":711,"text":{"processes/":{},"processes/#there-is-no-replacement-for-the-e2e-test":{}},"title":{}}],["switch",{"_index":899,"text":{"processes/":{},"processes/#the-problem-of-environment-names":{}},"title":{}}],["switzerland",{"_index":720,"text":{"processes/":{},"processes/#there-is-no-replacement-for-the-e2e-test":{}},"title":{}}],["symptom",{"_index":882,"text":{"processes/":{},"processes/#the-problem-of-environment-names":{}},"title":{}}],["synthet",{"_index":870,"text":{"processes/":{},"processes/#why-staging-and-production-should-be-and-cant-be-identical":{}},"title":{}}],["system",{"_index":655,"text":{"processes/":{},"processes/#process-modelisation-and-implementation":{},"processes/#resilience":{},"simplicity/":{},"simplicity/#isolating-things":{},"simplicity/#make-it-simple-by-conventions":{},"simplicity/#new-challenges-introduced-by-the-decoupling":{},"simplicity/#the-lego-era":{},"simplicity/#with-great-power-new-challenges":{}},"title":{}}],["systemat",{"_index":707,"text":{"processes/":{},"processes/#why-companies-fail-in-their-e2e-strategy":{}},"title":{}}],["system\u2019",{"_index":560,"text":{"processes/":{},"processes/#working":{},"simplicity/":{},"simplicity/#decoupling-price":{}},"title":{}}],["tackl",{"_index":1081,"text":{"simplicity/":{},"simplicity/#isolate-things-to-their-pure-essence":{}},"title":{}}],["tag",{"_index":251,"text":{"processes/":{},"processes/#performance-indicators":{},"processes/#the-problem-of-environment-names":{},"simplicity/":{},"simplicity/#make-it-simple-by-methodologies-technologies":{},"simplicity/#make-it-simple-by-tagging":{}},"title":{"simplicity/#make-it-simple-by-tagging":{}}}],["take",{"_index":339,"text":{"processes/":{},"processes/#is-fluidity-only-for-start-up":{},"processes/#making-testable-code":{},"processes/#merge-to-master-point-of-no-difficult-return":{},"processes/#process-2-the-release-management-process":{},"simplicity/":{},"simplicity/#the-lego-era":{}},"title":{}}],["taken",{"_index":605,"text":{"processes/":{},"processes/#healthy":{},"simplicity/":{},"simplicity/#with-great-power-new-challenges":{}},"title":{}}],["talk",{"_index":205,"text":{"processes/":{},"processes/#a-more-practical-gitops-model":{},"processes/#code-review-as-the-last-bastion-of-defense":{},"processes/#performance-indicators":{}},"title":{"processes/#tools-are-not-the-way-to-talk-about-processes":{}}}],["target",{"_index":1065,"text":{"simplicity/":{},"simplicity/#with-great-power-new-challenges":{}},"title":{}}],["task",{"_index":79,"text":{"processes/":{},"processes/#process-modelisation-and-implementation":{}},"title":{}}],["taxi",{"_index":827,"text":{"processes/":{},"processes/#code-review-starts-with-yourself":{}},"title":{}}],["team",{"_index":185,"text":{"processes/":{},"processes/#bridging-the-gap-between-mentalities":{},"processes/#code-review-as-the-last-bastion-of-defense":{},"processes/#improving-the-code-review-process":{},"processes/#making-testable-code":{},"processes/#process-2-the-release-management-process":{},"processes/#why-companies-fail-in-their-e2e-strategy":{},"simplicity/":{},"simplicity/#make-it-simple-by-tagging":{},"simplicity/#premature-optimization":{}},"title":{}}],["technic",{"_index":151,"text":{"processes/":{},"processes/#devops-as-a-business-analyst-with-many-technical-skills":{}},"title":{"processes/#devops-as-a-business-analyst-with-many-technical-skills":{}}}],["technolog",{"_index":176,"text":{"processes/":{},"processes/#devops-as-a-business-analyst-with-many-technical-skills":{},"simplicity/":{},"simplicity/#make-it-simple-by-methodologies-technologies":{}},"title":{"simplicity/#make-it-simple-by-methodologies-technologies":{}}}],["tell",{"_index":925,"text":{"processes/":{},"processes/#make-the-fluidity-visible":{},"processes/#process-modelisation-and-implementation":{}},"title":{}}],["tend",{"_index":221,"text":{"processes/":{},"processes/#understand-requirements":{}},"title":{}}],["term",{"_index":1071,"text":{"simplicity/":{},"simplicity/#make-it-simple-by-making-compromises":{},"simplicity/#with-great-power-new-challenges":{}},"title":{}}],["termin",{"_index":672,"text":{"processes/":{},"processes/#resilience":{}},"title":{}}],["terraform",{"_index":474,"text":{"processes/":{},"processes/#make-your-codes-equal":{},"processes/#process-modelisation-and-implementation":{}},"title":{}}],["test",{"_index":285,"text":{"processes/":{},"processes/#a-more-practical-gitops-model":{},"processes/#code-review-as-the-last-bastion-of-defense":{},"processes/#getting-to-the-root-of-the-problem":{},"processes/#is-fluidity-only-for-start-up":{},"processes/#make-it-fluid-with-automatic-propagation":{},"processes/#make-your-codes-equal":{},"processes/#making-e2e-tests-affordable-removing-the-ui-layer":{},"processes/#making-testable-code":{},"processes/#process-1-feature-branch-as-the-source-of-truth":{},"processes/#process-1-from-code-to-development-environments":{},"processes/#resilience":{},"processes/#stable":{},"processes/#the-problem-of-environment-names":{},"processes/#there-is-no-replacement-for-the-e2e-test":{},"processes/#why-companies-fail-in-their-e2e-strategy":{},"processes/#working":{},"processes/#wrong-mindset":{},"simplicity/":{},"simplicity/#maintaining-the-cause-and-effect-relationship":{},"simplicity/#make-it-simple-by-consistency":{},"simplicity/#make-it-simple-by-tagging":{},"simplicity/#new-challenges-introduced-by-the-decoupling":{},"simplicity/#the-benefit-of-having-simple-entities":{}},"title":{"processes/#making-e2e-tests-affordable-removing-the-ui-layer":{},"processes/#there-is-no-replacement-for-the-e2e-test":{}}}],["testabl",{"_index":740,"text":{"processes/":{},"processes/#getting-to-the-root-of-the-problem":{},"processes/#making-testable-code":{}},"title":{"processes/#making-testable-code":{}}}],["themselv",{"_index":1116,"text":{"simplicity/":{},"simplicity/#the-lego-era":{}},"title":{}}],["theori",{"_index":562,"text":{"processes/":{},"processes/#working":{}},"title":{}}],["thing",{"_index":67,"text":{"processes/":{},"processes/#gitops":{},"processes/#make-your-codes-equal":{},"processes/#process-1-feature-branch-as-the-source-of-truth":{},"processes/#resilience":{},"processes/#wrong-mindset":{},"simplicity/":{},"simplicity/#doing-one-thing-and-doing-it-well":{},"simplicity/#isolate-things-to-their-pure-essence":{},"simplicity/#isolating-things":{},"simplicity/#maintaining-the-cause-and-effect-relationship":{},"simplicity/#make-it-simple-by-consistency":{},"simplicity/#new-challenges-introduced-by-the-decoupling":{},"simplicity/#simplicity-doesnt-mean-simplistic":{}},"title":{"simplicity/#doing-one-thing-and-doing-it-well":{},"simplicity/#isolate-things-to-their-pure-essence":{},"simplicity/#isolating-things":{}}}],["third",{"_index":604,"text":{"processes/":{},"processes/#healthy":{},"simplicity/":{},"simplicity/#the-lego-era":{}},"title":{}}],["those",{"_index":16,"text":{"":{},"#lessons-learned-as-a-devops-engineer":{}},"title":{}}],["threat",{"_index":648,"text":{"processes/":{},"processes/#resilience":{}},"title":{}}],["three",{"_index":143,"text":{"processes/":{},"processes/#dynamic-environment-as-a-new-paradigm":{},"processes/#is-fluidity-only-for-start-up":{},"processes/#rca-processes-relationship":{}},"title":{}}],["through",{"_index":170,"text":{"processes/":{},"processes/#a-more-practical-gitops-model":{},"processes/#code-review-as-the-last-bastion-of-defense":{},"processes/#code-review-starts-with-yourself":{},"processes/#devops-as-a-business-analyst-with-many-technical-skills":{},"processes/#make-your-codes-equal":{},"processes/#merge-to-master-point-of-no-difficult-return":{},"processes/#why-companies-fail-in-their-e2e-strategy":{}},"title":{}}],["thu",{"_index":694,"text":{"processes/":{},"processes/#why-companies-fail-in-their-e2e-strategy":{},"simplicity/":{},"simplicity/#make-it-simple-by-conventions":{}},"title":{}}],["ticket",{"_index":1224,"text":{"simplicity/":{},"simplicity/#make-it-simple-by-conventions":{}},"title":{}}],["tight",{"_index":755,"text":{"processes/":{},"processes/#making-testable-code":{}},"title":{}}],["tightli",{"_index":298,"text":{"processes/":{},"processes/#process-1-from-code-to-development-environments":{},"simplicity/":{},"simplicity/#isolating-things":{}},"title":{}}],["time",{"_index":261,"text":{"processes/":{},"processes/#healthy":{},"processes/#improving-the-code-review-process":{},"processes/#merge-to-master-point-of-no-difficult-return":{},"processes/#performance-indicators":{},"processes/#process-1-environment-creation-easy-setup":{},"processes/#process-1-feature-branch-as-the-source-of-truth":{},"processes/#process-2-the-release-management-process":{},"processes/#stable":{},"processes/#the-problem-of-environment-names":{},"processes/#wrong-mindset":{},"simplicity/":{},"simplicity/#maintaining-the-cause-and-effect-relationship":{},"simplicity/#make-it-simple-by-making-compromises":{},"simplicity/#make-it-simple-by-methodologies-technologies":{},"simplicity/#premature-optimization":{},"simplicity/#the-lego-era":{}},"title":{}}],["today'",{"_index":848,"text":{"processes/":{},"processes/#improving-the-code-review-process":{}},"title":{}}],["togeth",{"_index":199,"text":{"processes/":{},"processes/#a-more-practical-gitops-model":{},"processes/#bridging-the-gap-between-mentalities":{},"processes/#making-testable-code":{},"processes/#process-modelisation-and-implementation":{},"processes/#there-is-no-replacement-for-the-e2e-test":{}},"title":{}}],["told",{"_index":833,"text":{"processes/":{},"processes/#code-review-starts-with-yourself":{}},"title":{}}],["tool",{"_index":204,"text":{"processes/":{},"processes/#code-review-as-the-last-bastion-of-defense":{},"processes/#gitops":{},"processes/#resilience":{},"processes/#tools-are-not-the-way-to-talk-about-processes":{},"simplicity/":{},"simplicity/#make-it-simple-by-consistency":{},"simplicity/#make-it-simple-by-conventions":{}},"title":{"processes/#tools-are-not-the-way-to-talk-about-processes":{}}}],["touch",{"_index":1097,"text":{"simplicity/":{},"simplicity/#the-benefit-of-isolated-entities":{}},"title":{}}],["toward",{"_index":201,"text":{"processes/":{},"processes/#bridging-the-gap-between-mentalities":{}},"title":{}}],["traceabl",{"_index":945,"text":{"processes/":{},"processes/#gitops":{},"simplicity/":{},"simplicity/#the-lego-era":{}},"title":{}}],["traffic",{"_index":510,"text":{"processes/":{},"processes/#manage-your-risk-by-adding-gates":{},"processes/#process-2-the-release-management-process":{},"processes/#resilience":{},"processes/#why-staging-and-production-should-be-and-cant-be-identical":{}},"title":{}}],["transact",{"_index":745,"text":{"processes/":{},"processes/#getting-to-the-root-of-the-problem":{}},"title":{}}],["transit",{"_index":1104,"text":{"simplicity/":{},"simplicity/#decoupling-price":{}},"title":{}}],["translat",{"_index":991,"text":{"processes/":{},"processes/#make-it-fluid-with-automatic-propagation":{}},"title":{}}],["transpar",{"_index":346,"text":{"processes/":{},"processes/#process-1-feature-branch-as-the-source-of-truth":{}},"title":{}}],["trap",{"_index":207,"text":{"processes/":{},"processes/#tools-are-not-the-way-to-talk-about-processes":{}},"title":{}}],["treat",{"_index":607,"text":{"processes/":{},"processes/#healthy":{}},"title":{}}],["tri",{"_index":450,"text":{"processes/":{},"processes/#model-extension-to-include-all-kinds-of-code":{},"processes/#process-2-the-release-management-process":{},"processes/#resilience":{},"processes/#the-problem-of-environment-names":{},"simplicity/":{},"simplicity/#maintaining-the-cause-and-effect-relationship":{}},"title":{}}],["trigger",{"_index":434,"text":{"processes/":{},"processes/#a-more-practical-gitops-model":{},"processes/#make-it-fluid-with-automatic-propagation":{},"processes/#process-1-environment-creation-easy-setup":{}},"title":{}}],["trip",{"_index":828,"text":{"processes/":{},"processes/#code-review-starts-with-yourself":{}},"title":{}}],["troubl",{"_index":875,"text":{"processes/":{},"processes/#the-problem-of-environment-names":{}},"title":{}}],["troubleshoot",{"_index":1072,"text":{"simplicity/":{},"simplicity/#with-great-power-new-challenges":{}},"title":{}}],["true",{"_index":565,"text":{"processes/":{},"processes/#working":{},"simplicity/":{},"simplicity/#doing-one-thing-and-doing-it-well":{},"simplicity/#maintaining-the-cause-and-effect-relationship":{}},"title":{}}],["trust",{"_index":1035,"text":{"processes/":{},"processes/#is-fluidity-only-for-start-up":{},"simplicity/":{},"simplicity/#the-lego-era":{}},"title":{}}],["truth",{"_index":345,"text":{"processes/":{},"processes/#design-your-architecture-up-to-your-ambition":{},"processes/#gitops":{},"processes/#process-1-feature-branch-as-the-source-of-truth":{},"processes/#process-modelisation-and-implementation":{}},"title":{"processes/#process-1-feature-branch-as-the-source-of-truth":{}}}],["try",{"_index":244,"text":{"processes/":{},"processes/#performance-indicators":{},"simplicity/":{},"simplicity/#decoupling-price":{},"simplicity/#doing-one-thing-and-doing-it-well":{},"simplicity/#isolate-things-to-their-pure-essence":{},"simplicity/#maintaining-the-cause-and-effect-relationship":{},"simplicity/#make-it-simple-by-making-compromises":{},"simplicity/#premature-optimization":{}},"title":{}}],["turn",{"_index":1074,"text":{"simplicity/":{},"simplicity/#with-great-power-new-challenges":{}},"title":{}}],["two",{"_index":132,"text":{"processes/":{},"processes/#a-more-practical-gitops-model":{},"processes/#process-modelisation-and-implementation":{},"processes/#rca-processes-relationship":{},"processes/#resilience":{},"processes/#why-staging-and-production-should-be-and-cant-be-identical":{},"processes/#wrong-mindset":{}},"title":{}}],["type",{"_index":429,"text":{"processes/":{},"processes/#model-extension-to-include-all-kinds-of-code":{},"processes/#process-1-environment-creation-easy-setup":{}},"title":{}}],["typic",{"_index":869,"text":{"processes/":{},"processes/#why-staging-and-production-should-be-and-cant-be-identical":{}},"title":{}}],["typo",{"_index":832,"text":{"processes/":{},"processes/#code-review-starts-with-yourself":{}},"title":{}}],["ubuntu",{"_index":537,"text":{"processes/":{},"processes/#process-2-the-release-management-process":{}},"title":{}}],["ui",{"_index":768,"text":{"processes/":{},"processes/#making-e2e-tests-affordable-removing-the-ui-layer":{}},"title":{"processes/#making-e2e-tests-affordable-removing-the-ui-layer":{}}}],["unambigu",{"_index":1183,"text":{"simplicity/":{},"simplicity/#maintaining-the-cause-and-effect-relationship":{}},"title":{}}],["unavail",{"_index":533,"text":{"processes/":{},"processes/#process-2-the-release-management-process":{}},"title":{}}],["under",{"_index":405,"text":{"processes/":{},"processes/#dynamic-environment-as-a-new-paradigm":{},"processes/#stable":{}},"title":{}}],["underlin",{"_index":883,"text":{"processes/":{},"processes/#the-problem-of-environment-names":{}},"title":{}}],["understand",{"_index":220,"text":{"processes/":{},"processes/#gitops":{},"processes/#process-2-the-release-management-process":{},"processes/#process-modelisation-and-implementation":{},"processes/#resilience":{},"processes/#there-is-no-replacement-for-the-e2e-test":{},"processes/#understand-requirements":{},"simplicity/":{},"simplicity/#decoupling-price":{},"simplicity/#make-it-simple-by-consistency":{},"simplicity/#make-it-simple-by-making-compromises":{}},"title":{"processes/#understand-requirements":{}}}],["undesir",{"_index":333,"text":{"processes/":{},"processes/#merge-to-master-point-of-no-difficult-return":{}},"title":{}}],["undoubtedli",{"_index":1068,"text":{"simplicity/":{},"simplicity/#with-great-power-new-challenges":{}},"title":{}}],["unexpect",{"_index":653,"text":{"processes/":{},"processes/#resilience":{}},"title":{}}],["unifi",{"_index":1211,"text":{"simplicity/":{},"simplicity/#make-it-simple-by-consistency":{}},"title":{}}],["uniqu",{"_index":874,"text":{"processes/":{},"processes/#the-problem-of-environment-names":{}},"title":{}}],["unit",{"_index":951,"text":{"processes/":{},"processes/#a-more-practical-gitops-model":{},"simplicity/":{},"simplicity/#maintaining-the-cause-and-effect-relationship":{}},"title":{}}],["univers",{"_index":1154,"text":{"simplicity/":{},"simplicity/#doing-one-thing-and-doing-it-well":{}},"title":{}}],["unknown",{"_index":552,"text":{"processes/":{},"processes/#resilience":{},"processes/#stable":{},"processes/#working":{}},"title":{}}],["unnecessari",{"_index":915,"text":{"processes/":{},"processes/#process-modelisation-and-implementation":{},"simplicity/":{},"simplicity/#the-benefit-of-isolated-entities":{}},"title":{}}],["unpredict",{"_index":666,"text":{"processes/":{},"processes/#resilience":{},"simplicity/":{},"simplicity/#premature-optimization":{}},"title":{}}],["unreplac",{"_index":892,"text":{"processes/":{},"processes/#the-problem-of-environment-names":{}},"title":{}}],["unstabl",{"_index":770,"text":{"processes/":{},"processes/#making-e2e-tests-affordable-removing-the-ui-layer":{}},"title":{}}],["until",{"_index":1175,"text":{"simplicity/":{},"simplicity/#premature-optimization":{}},"title":{}}],["up",{"_index":348,"text":{"processes/":{},"processes/#is-fluidity-only-for-start-up":{},"processes/#process-1-feature-branch-as-the-source-of-truth":{},"processes/#the-problem-of-environment-names":{},"processes/#why-companies-fail-in-their-e2e-strategy":{}},"title":{"processes/#design-your-architecture-up-to-your-ambition":{},"processes/#is-fluidity-only-for-start-up":{}}}],["updat",{"_index":985,"text":{"processes/":{},"processes/#a-more-practical-gitops-model":{},"processes/#make-it-fluid-with-automatic-propagation":{},"simplicity/":{},"simplicity/#the-benefit-of-isolated-entities":{}},"title":{}}],["upgrad",{"_index":538,"text":{"processes/":{},"processes/#process-2-the-release-management-process":{},"simplicity/":{},"simplicity/#new-challenges-introduced-by-the-decoupling":{}},"title":{}}],["us",{"_index":359,"text":{"processes/":{},"processes/#a-more-practical-gitops-model":{},"processes/#code-review-starts-with-yourself":{},"processes/#gitops":{},"processes/#is-fluidity-only-for-start-up":{},"processes/#make-it-fluid-with-automatic-propagation":{},"processes/#making-e2e-tests-affordable-removing-the-ui-layer":{},"processes/#model-extension-to-include-all-kinds-of-code":{},"processes/#process-1-environment-creation-easy-setup":{},"processes/#process-1-feature-branch-as-the-source-of-truth":{},"processes/#process-2-the-release-management-process":{},"processes/#process-modelisation-and-implementation":{},"processes/#resilience":{},"processes/#stable":{},"processes/#the-problem-of-environment-names":{},"processes/#working":{},"simplicity/":{},"simplicity/#maintaining-the-cause-and-effect-relationship":{},"simplicity/#make-it-simple-by-making-compromises":{},"simplicity/#make-it-simple-by-tagging":{},"simplicity/#premature-optimization":{},"simplicity/#the-lego-era":{}},"title":{}}],["usag",{"_index":1122,"text":{"simplicity/":{},"simplicity/#the-lego-era":{}},"title":{}}],["user",{"_index":551,"text":{"processes/":{},"processes/#making-e2e-tests-affordable-removing-the-ui-layer":{},"processes/#resilience":{},"processes/#working":{},"simplicity/":{},"simplicity/#make-it-simple-by-conventions":{},"simplicity/#make-it-simple-by-tagging":{}},"title":{}}],["user\u2019",{"_index":541,"text":{"processes/":{},"processes/#working":{}},"title":{}}],["util",{"_index":406,"text":{"processes/":{},"processes/#dynamic-environment-as-a-new-paradigm":{},"processes/#healthy":{}},"title":{}}],["ux",{"_index":1212,"text":{"simplicity/":{},"simplicity/#make-it-simple-by-conventions":{}},"title":{}}],["valid",{"_index":329,"text":{"processes/":{},"processes/#make-it-fluid-with-automatic-propagation":{},"processes/#merge-to-master-point-of-no-difficult-return":{},"simplicity/":{},"simplicity/#make-it-simple-by-conventions":{}},"title":{}}],["valuabl",{"_index":630,"text":{"processes/":{},"processes/#code-review-as-the-last-bastion-of-defense":{},"processes/#stable":{}},"title":{}}],["vast",{"_index":62,"text":{"processes/":{}},"title":{}}],["vault",{"_index":1126,"text":{"simplicity/":{},"simplicity/#make-it-simple-by-tagging":{},"simplicity/#the-lego-era":{}},"title":{}}],["veloc",{"_index":693,"text":{"processes/":{},"processes/#why-companies-fail-in-their-e2e-strategy":{}},"title":{}}],["veri",{"_index":165,"text":{"processes/":{},"processes/#code-review-as-the-last-bastion-of-defense":{},"processes/#design-your-architecture-up-to-your-ambition":{},"processes/#devops-as-a-business-analyst-with-many-technical-skills":{},"processes/#gitops":{},"processes/#is-fluidity-only-for-start-up":{},"processes/#process-1-from-code-to-development-environments":{},"processes/#process-2-the-release-management-process":{},"processes/#process-modelisation-and-implementation":{},"processes/#why-companies-fail-in-their-e2e-strategy":{},"simplicity/":{},"simplicity/#new-challenges-introduced-by-the-decoupling":{}},"title":{}}],["verifi",{"_index":624,"text":{"processes/":{},"processes/#code-review-as-the-last-bastion-of-defense":{},"processes/#stable":{}},"title":{}}],["version",{"_index":499,"text":{"processes/":{},"processes/#a-more-practical-gitops-model":{},"processes/#is-fluidity-only-for-start-up":{},"processes/#make-it-fluid-with-automatic-propagation":{},"processes/#process-2-the-release-management-process":{},"processes/#process-modelisation-and-implementation":{},"processes/#stable":{},"processes/#working":{},"simplicity/":{},"simplicity/#new-challenges-introduced-by-the-decoupling":{}},"title":{}}],["view",{"_index":12,"text":{"":{},"#lessons-learned-as-a-devops-engineer":{},"processes/":{},"processes/#manage-your-risk-by-adding-gates":{},"simplicity/":{},"simplicity/#isolating-things":{}},"title":{}}],["virtual",{"_index":200,"text":{"processes/":{},"processes/#bridging-the-gap-between-mentalities":{}},"title":{}}],["visibl",{"_index":47,"text":{"":{},"#lessons-learned-as-a-devops-engineer":{},"processes/":{},"processes/#make-the-fluidity-visible":{}},"title":{"processes/#make-the-fluidity-visible":{}}}],["visual",{"_index":1029,"text":{"processes/":{},"processes/#make-the-fluidity-visible":{}},"title":{}}],["volum",{"_index":971,"text":{"processes/":{},"processes/#a-more-practical-gitops-model":{}},"title":{}}],["volunt",{"_index":1227,"text":{"simplicity/":{},"simplicity/#make-it-simple-by-making-compromises":{}},"title":{}}],["vpc",{"_index":1054,"text":{"simplicity/":{},"simplicity/#with-great-power-new-challenges":{}},"title":{}}],["wai",{"_index":91,"text":{"processes/":{},"processes/#a-more-practical-gitops-model":{},"processes/#bridging-the-gap-between-mentalities":{},"processes/#code-review-as-the-last-bastion-of-defense":{},"processes/#code-review-starts-with-yourself":{},"processes/#dynamic-environment-as-a-new-paradigm":{},"processes/#improving-the-code-review-process":{},"processes/#make-your-codes-equal":{},"processes/#making-e2e-tests-affordable-removing-the-ui-layer":{},"processes/#merge-to-master-point-of-no-difficult-return":{},"processes/#process-1-feature-branch-as-the-source-of-truth":{},"processes/#working":{},"simplicity/":{},"simplicity/#maintaining-the-cause-and-effect-relationship":{},"simplicity/#make-it-simple-by-methodologies-technologies":{},"simplicity/#simplicity-doesnt-mean-simplistic":{},"simplicity/#the-benefit-of-isolated-entities":{},"simplicity/#the-lego-era":{}},"title":{"processes/#tools-are-not-the-way-to-talk-about-processes":{}}}],["want",{"_index":288,"text":{"processes/":{},"processes/#design-your-architecture-up-to-your-ambition":{},"processes/#improving-the-code-review-process":{},"processes/#make-it-fluid-with-automatic-propagation":{},"processes/#wrong-mindset":{},"simplicity/":{},"simplicity/#make-it-simple-by-methodologies-technologies":{},"simplicity/#make-it-simple-by-tagging":{}},"title":{}}],["wast",{"_index":1139,"text":{"simplicity/":{},"simplicity/#the-lego-era":{}},"title":{}}],["watch",{"_index":712,"text":{"processes/":{},"processes/#there-is-no-replacement-for-the-e2e-test":{}},"title":{}}],["waterproof",{"_index":739,"text":{"processes/":{},"processes/#there-is-no-replacement-for-the-e2e-test":{}},"title":{}}],["weapon",{"_index":1188,"text":{"simplicity/":{},"simplicity/#make-it-simple-by-tagging":{}},"title":{}}],["web",{"_index":1130,"text":{"simplicity/":{},"simplicity/#the-lego-era":{}},"title":{}}],["week",{"_index":738,"text":{"processes/":{},"processes/#there-is-no-replacement-for-the-e2e-test":{},"simplicity/":{},"simplicity/#with-great-power-new-challenges":{}},"title":{}}],["weird",{"_index":762,"text":{"processes/":{},"processes/#making-testable-code":{}},"title":{}}],["well",{"_index":94,"text":{"processes/":{},"processes/#performance-indicators":{},"processes/#rca-processes-relationship":{},"processes/#there-is-no-replacement-for-the-e2e-test":{},"simplicity/":{},"simplicity/#doing-one-thing-and-doing-it-well":{},"simplicity/#isolate-things-to-their-pure-essence":{},"simplicity/#make-it-simple-by-making-compromises":{}},"title":{"simplicity/#doing-one-thing-and-doing-it-well":{}}}],["what'",{"_index":914,"text":{"processes/":{},"processes/#process-modelisation-and-implementation":{}},"title":{}}],["what\u2019",{"_index":842,"text":{"processes/":{},"processes/#improving-the-code-review-process":{}},"title":{}}],["wheel",{"_index":723,"text":{"processes/":{},"processes/#there-is-no-replacement-for-the-e2e-test":{},"simplicity/":{},"simplicity/#the-lego-era":{}},"title":{}}],["whole",{"_index":924,"text":{"processes/":{},"processes/#process-modelisation-and-implementation":{},"simplicity/":{},"simplicity/#new-challenges-introduced-by-the-decoupling":{}},"title":{}}],["willing",{"_index":1210,"text":{"simplicity/":{},"simplicity/#make-it-simple-by-consistency":{}},"title":{}}],["without",{"_index":223,"text":{"processes/":{},"processes/#getting-to-the-root-of-the-problem":{},"processes/#making-e2e-tests-affordable-removing-the-ui-layer":{},"processes/#making-testable-code":{},"processes/#performance-indicators":{},"processes/#process-1-from-code-to-development-environments":{},"processes/#understand-requirements":{},"simplicity/":{},"simplicity/#make-it-simple-by-conventions":{},"simplicity/#make-it-simple-by-methodologies-technologies":{},"simplicity/#make-it-simple-by-tagging":{},"simplicity/#the-benefit-of-isolated-entities":{},"simplicity/#the-lego-era":{}},"title":{}}],["word",{"_index":97,"text":{"processes/":{},"simplicity/":{},"simplicity/#make-it-simple-by-making-compromises":{},"simplicity/#premature-optimization":{},"simplicity/#the-benefit-of-isolated-entities":{}},"title":{}}],["work",{"_index":68,"text":{"processes/":{},"processes/#a-more-practical-gitops-model":{},"processes/#bridging-the-gap-between-mentalities":{},"processes/#code-review-as-the-last-bastion-of-defense":{},"processes/#make-the-fluidity-visible":{},"processes/#model-extension-to-include-all-kinds-of-code":{},"processes/#process-1-feature-branch-as-the-source-of-truth":{},"processes/#process-1-from-code-to-development-environments":{},"processes/#process-2-the-release-management-process":{},"processes/#resilience":{},"processes/#stable":{},"processes/#the-problem-of-environment-names":{},"processes/#there-is-no-replacement-for-the-e2e-test":{},"processes/#why-companies-fail-in-their-e2e-strategy":{},"processes/#working":{},"processes/#wrong-mindset":{},"simplicity/":{},"simplicity/#make-it-simple-by-making-compromises":{},"simplicity/#new-challenges-introduced-by-the-decoupling":{},"simplicity/#with-great-power-new-challenges":{}},"title":{"processes/#working":{}}}],["worker",{"_index":732,"text":{"processes/":{},"processes/#there-is-no-replacement-for-the-e2e-test":{}},"title":{}}],["world",{"_index":395,"text":{"processes/":{},"processes/#dynamic-environment-as-a-new-paradigm":{},"simplicity/":{},"simplicity/#isolate-things-to-their-pure-essence":{}},"title":{}}],["worth",{"_index":1143,"text":{"simplicity/":{},"simplicity/#the-lego-era":{}},"title":{}}],["write",{"_index":222,"text":{"processes/":{},"processes/#make-the-fluidity-visible":{},"processes/#process-modelisation-and-implementation":{},"processes/#the-problem-of-environment-names":{},"processes/#understand-requirements":{},"processes/#why-companies-fail-in-their-e2e-strategy":{},"processes/#working":{},"simplicity/":{},"simplicity/#maintaining-the-cause-and-effect-relationship":{}},"title":{}}],["written",{"_index":751,"text":{"processes/":{},"processes/#getting-to-the-root-of-the-problem":{},"processes/#make-the-fluidity-visible":{}},"title":{}}],["wrong",{"_index":263,"text":{"processes/":{},"processes/#getting-to-the-root-of-the-problem":{},"processes/#improving-the-code-review-process":{},"processes/#process-modelisation-and-implementation":{},"processes/#there-is-no-replacement-for-the-e2e-test":{},"processes/#wrong-mindset":{}},"title":{"processes/#wrong-mindset":{}}}],["wrote",{"_index":808,"text":{"processes/":{},"processes/#code-review-starts-with-yourself":{},"processes/#make-the-fluidity-visible":{}},"title":{}}],["yaml",{"_index":976,"text":{"processes/":{},"processes/#a-more-practical-gitops-model":{},"processes/#make-the-fluidity-visible":{}},"title":{}}],["ye",{"_index":37,"text":{"":{},"#lessons-learned-as-a-devops-engineer":{},"processes/":{},"processes/#process-modelisation-and-implementation":{}},"title":{}}],["year",{"_index":144,"text":{"processes/":{},"processes/#healthy":{},"processes/#is-fluidity-only-for-start-up":{},"processes/#make-the-fluidity-visible":{},"processes/#rca-processes-relationship":{},"processes/#wrong-mindset":{},"simplicity/":{},"simplicity/#make-it-simple-by-methodologies-technologies":{}},"title":{}}],["year\u2019",{"_index":840,"text":{"processes/":{},"processes/#improving-the-code-review-process":{}},"title":{}}],["you'r",{"_index":1229,"text":{"simplicity/":{},"simplicity/#make-it-simple-by-making-compromises":{}},"title":{}}],["yourself",{"_index":794,"text":{"processes/":{}},"title":{"processes/#code-review-starts-with-yourself":{}}}],["zero",{"_index":1144,"text":{"simplicity/":{},"simplicity/#the-lego-era":{}},"title":{}}],["zurich",{"_index":730,"text":{"processes/":{},"processes/#there-is-no-replacement-for-the-e2e-test":{}},"title":{}}],["z\u201dl",{"_index":797,"text":{"processes/":{},"processes/#code-review-starts-with-yourself":{}},"title":{}}],["\u00b6",{"_index":5,"text":{"":{},"processes/":{},"simplicity/":{}},"title":{}}],["\u201cintegration.yaml\u201d",{"_index":1009,"text":{"processes/":{},"processes/#make-it-fluid-with-automatic-propagation":{}},"title":{}}],["\u201cit\u2019",{"_index":1150,"text":{"simplicity/":{},"simplicity/#make-it-simple-by-making-compromises":{},"simplicity/#the-lego-era":{}},"title":{}}]],"pipeline":["stemmer"],"version":"2.3.9"}}